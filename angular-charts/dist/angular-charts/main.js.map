{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home2/home2.component.ts","./src/app/components/home2/home2.component.html","./src/app/components/home3/home3.component.ts","./src/app/components/home3/home3.component.html","./src/app/components/home4/home4.component.ts","./src/app/components/home4/home4.component.html","./src/app/components/home5/home5.component.ts","./src/app/components/home5/home5.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/listar-datos/listar-datos.component.ts","./src/app/components/listar-datos/listar-datos.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/updatepopup/updatepopup.component.ts","./src/app/components/updatepopup/updatepopup.component.html","./src/app/components/userlisting/userlisting.component.ts","./src/app/components/userlisting/userlisting.component.html","./src/app/dialog.component.ts","./src/app/dialog.component.html","./src/app/forms/empresa-form/empresa-form.component.ts","./src/app/forms/empresa-form/empresa-form.component.html","./src/app/forms/empresa-planta-form/empresa-planta-form.component.ts","./src/app/forms/empresa-planta-form/empresa-planta-form.component.html","./src/app/forms/linea-produccion-form/linea-produccion-form.component.ts","./src/app/forms/linea-produccion-form/linea-produccion-form.component.html","./src/app/forms/localidad-form/localidad-form.component.ts","./src/app/forms/localidad-form/localidad-form.component.html","./src/app/forms/maquina-form/maquina-form.component.ts","./src/app/forms/maquina-form/maquina-form.component.html","./src/app/forms/pais-form/pais-form.component.ts","./src/app/forms/pais-form/pais-form.component.html","./src/app/forms/proceso-form/proceso-form.component.ts","./src/app/forms/proceso-form/proceso-form.component.html","./src/app/forms/provincia-form/provincia-form.component.ts","./src/app/forms/provincia-form/provincia-form.component.html","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.ts","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.html","./src/app/forms/trigger-form/trigger-form.component.ts","./src/app/forms/trigger-form/trigger-form.component.html","./src/app/forms/variable-form/variable-form.component.ts","./src/app/forms/variable-form/variable-form.component.html","./src/app/guard/auth.guard.ts","./src/app/service/auth.service.ts","./src/app/service/http-service.service.ts","./src/app/service/utils.service.ts","./src/environments/environment.staging.ts","./src/main.ts","./src/material.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { authGuard } from './guard/auth.guard';\r\nimport { Home2Component } from './components/home2/home2.component';\r\nimport { Home3Component } from './components/home3/home3.component';\r\nimport { Home4Component } from './components/home4/home4.component';\r\nimport { Home5Component } from './components/home5/home5.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ListarDatosComponent, canActivate: [authGuard] },\r\n  // { path: 'home', component: HomeComponent, canActivate: [authGuard] },\r\n  // { path: 'home2', component: Home2Component, canActivate: [authGuard] },\r\n  // { path: 'home3', component: Home3Component, canActivate: [authGuard] },\r\n  // { path: 'home4', component: Home4Component, canActivate: [authGuard] },\r\n  { path: 'home5', component: Home5Component, canActivate: [authGuard] },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'user', component: UserlistingComponent, canActivate: [authGuard] },\r\n  { path: '**', redirectTo: 'login', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, DoCheck, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './service/auth.service';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { HttpServiceService } from './service/http-service.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { RegistroFiltrado, Variable } from './models/datos.model';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements DoCheck, OnInit {\r\n  opened: boolean = false;\r\n  range = new FormGroup({\r\n    start: new FormControl<Date | null>(null),\r\n    end: new FormControl<Date | null>(null),\r\n  });\r\n  title = 'angular-charts';\r\n  isMenuRequired = false;\r\n  isAdminUser = false;\r\n  listVariables: Variable[] = [];\r\n  subscription!: Subscription;\r\n  listDatos: RegistroFiltrado[] = [];\r\n  constructor(\r\n    private router: Router,\r\n    private service: AuthService,\r\n    private _httpService: HttpServiceService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this._httpService.listaVariables.subscribe(\r\n      (message) => (this.listVariables = message)\r\n    );\r\n  }\r\n  ngDoCheck(): void {\r\n    let currentUrl = this.router.url;\r\n    if (currentUrl == '/login' || currentUrl == '/register') {\r\n      this.isMenuRequired = false;\r\n      this.opened = false;\r\n    } else {\r\n      this.isMenuRequired = true;\r\n    }\r\n    if (this.service.getUserRole() === 'admin') {\r\n      this.isAdminUser = true;\r\n    } else {\r\n      this.isAdminUser = false;\r\n    }\r\n  }\r\n  logOut() {\r\n    this.service.logout();\r\n  }\r\n\r\n  getFiltrados() {\r\n    var inicio: any = this.range.value.start?.getTime().toString();\r\n    var final: any = this.range.value.end?.getTime().toString();\r\n    this._httpService\r\n      .getValoresFiltrados(this.listVariables[1]._id, inicio, final, 'max')\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this._httpService.stream_Datos(data['datos']);\r\n      });\r\n    this.opened = false;\r\n  }\r\n}\r\n","<style>\r\n  :host {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\r\n      \"Segoe UI Symbol\";\r\n    font-size: 14px;\r\n    color: #333;\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n\r\n  .spacer {\r\n    flex: 1;\r\n  }\r\n\r\n  .toolbar {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 60px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #1976d2;\r\n    color: white;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .toolbar img {\r\n    margin: 0 16px;\r\n  }\r\n\r\n  .content {\r\n    margin: 82px auto 32px;\r\n    padding: 0 32px;\r\n    max-width: auto;\r\n    /* background-color: rgb(223, 215, 215); */\r\n  }\r\n  /* .fondo {\r\n    background-color: rgb(223, 215, 215);\r\n  } */\r\n\r\n  svg.material-icons {\r\n    height: 24px;\r\n    width: auto;\r\n  }\r\n\r\n  svg.material-icons:not(:last-child) {\r\n    margin-right: 8px;\r\n  }\r\n\r\n  .card svg.material-icons path {\r\n    fill: #888;\r\n  }\r\n\r\n  .card-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-top: 16px;\r\n  }\r\n\r\n  .card {\r\n    all: unset;\r\n    border-radius: 4px;\r\n    border: 1px solid #eee;\r\n    background-color: #5f5e5e;\r\n    height: 40px;\r\n    width: 200px;\r\n    margin: 0 8px 16px;\r\n    padding: 16px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: all 0.2s ease-in-out;\r\n    line-height: 24px;\r\n  }\r\n\r\n  .card-container .card:not(:last-child) {\r\n    margin-right: 0;\r\n  }\r\n\r\n  .card.card-small {\r\n    height: 16px;\r\n    width: 168px;\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card) {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card):hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card):hover .material-icons path {\r\n    fill: rgb(105, 103, 103);\r\n  }\r\n\r\n  .card.highlight-card {\r\n    background-color: #1976d2;\r\n    color: white;\r\n    font-weight: 600;\r\n    border: none;\r\n    width: auto;\r\n    min-width: 30%;\r\n    position: relative;\r\n  }\r\n\r\n  .card.card.highlight-card span {\r\n    margin-left: 60px;\r\n  }\r\n\r\n  svg#rocket {\r\n    width: 80px;\r\n    position: absolute;\r\n    left: -10px;\r\n    top: -24px;\r\n  }\r\n\r\n  svg#rocket-smoke {\r\n    height: calc(100vh - 95px);\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 180px;\r\n    z-index: -10;\r\n  }\r\n\r\n  a,\r\n  a:visited,\r\n  a:hover {\r\n    text-decoration: none;\r\n    padding: 10px;\r\n  }\r\n\r\n  a:hover {\r\n    color: #050505;\r\n  }\r\n\r\n  footer {\r\n    margin-top: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    line-height: 20px;\r\n  }\r\n\r\n  footer a {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  svg#clouds {\r\n    position: fixed;\r\n    bottom: -160px;\r\n    left: -230px;\r\n    z-index: -10;\r\n    width: 1920px;\r\n  }\r\n\r\n  /* Responsive Styles */\r\n  @media screen and (max-width: 767px) {\r\n    .card-container > *:not(.circle-link),\r\n    .terminal {\r\n      width: 100%;\r\n    }\r\n\r\n    .card:not(.highlight-card) {\r\n      height: 16px;\r\n      margin: 8px 0;\r\n    }\r\n\r\n    .card.highlight-card span {\r\n      margin-left: 72px;\r\n    }\r\n\r\n    svg#rocket-smoke {\r\n      right: 120px;\r\n      transform: rotate(-5deg);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 575px) {\r\n    svg#rocket-smoke {\r\n      display: none;\r\n      visibility: hidden;\r\n    }\r\n  }\r\n</style>\r\n<!-- fechas ahora estan puestas en el app component antes en listar datos\r\nvamos a hacer un cambio grande del programa para poder mandar los datos y que funcionen bien \r\nen el otro componente\r\n-->\r\n<mat-sidenav-container class=\"example-container\">\r\n  <mat-sidenav #sidenav mode=\"side\" [(opened)]=\"opened\">\r\n    <mat-form-field>\r\n      <mat-label>Por favor elija 2 fechas </mat-label>\r\n      <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n        <input matStartDate formControlName=\"start\" placeholder=\"Start date\" />\r\n        <input matEndDate formControlName=\"end\" placeholder=\"End date\" />\r\n      </mat-date-range-input>\r\n      <mat-datepicker-toggle\r\n        matIconSuffix\r\n        [for]=\"picker\"\r\n      ></mat-datepicker-toggle>\r\n      <mat-date-range-picker #picker>\r\n        <mat-date-range-picker-actions>\r\n          <button mat-button matDateRangePickerCancel>Cancel</button>\r\n          <button\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"getFiltrados()\"\r\n            matDateRangePickerApply\r\n          >\r\n            Apply\r\n          </button>\r\n        </mat-date-range-picker-actions>\r\n      </mat-date-range-picker>\r\n    </mat-form-field>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content class=\"fondo\">\r\n    <div class=\"toolbar\" *ngIf=\"isMenuRequired\" role=\"banner\">\r\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n\r\n      <a routerLink=\"/\">Graficos</a>\r\n      <!-- <a *ngIf=\"isAdminUser\" routerLink=\"/home2\">Pais form</a>\r\n    <a *ngIf=\"isAdminUser\" routerLink=\"/home\">Empresa form</a>\r\n    <a *ngIf=\"isAdminUser\" routerLink=\"/home3\">Linea form</a>\r\n    <a *ngIf=\"isAdminUser\" routerLink=\"/home4\">Variable form</a> -->\r\n      <a *ngIf=\"isAdminUser\" routerLink=\"/home5\">Formularios</a>\r\n      <a *ngIf=\"isAdminUser\" routerLink=\"/user\">Usuarios</a>\r\n      <div class=\"spacer\"></div>\r\n      <a style=\"cursor: pointer\" (click)=\"logOut()\">Logout</a>\r\n    </div>\r\n\r\n    <div class=\"content\" role=\"main\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </mat-sidenav-content>\r\n  <!-- Toolbar -->\r\n</mat-sidenav-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// Import FusionCharts library and chart modules\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from 'src/material.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { UpdatepopupComponent } from './components/updatepopup/updatepopup.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { PaisFormComponent } from './forms/pais-form/pais-form.component';\r\nimport { ProvinciaFormComponent } from './forms/provincia-form/provincia-form.component';\r\nimport { LocalidadFormComponent } from './forms/localidad-form/localidad-form.component';\r\nimport { Home2Component } from './components/home2/home2.component';\r\nimport { EmpresaFormComponent } from './forms/empresa-form/empresa-form.component';\r\nimport { EmpresaPlantaFormComponent } from './forms/empresa-planta-form/empresa-planta-form.component';\r\nimport { MaquinaFormComponent } from './forms/maquina-form/maquina-form.component';\r\nimport { TipoMaquinaFormComponent } from './forms/tipo-maquina-form/tipo-maquina-form.component';\r\nimport { LineaProduccionFormComponent } from './forms/linea-produccion-form/linea-produccion-form.component';\r\nimport { Home3Component } from './components/home3/home3.component';\r\nimport { ProcesoFormComponent } from './forms/proceso-form/proceso-form.component';\r\nimport { Home4Component } from './components/home4/home4.component';\r\nimport { VariableFormComponent } from './forms/variable-form/variable-form.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { TriggerFormComponent } from './forms/trigger-form/trigger-form.component';\r\nimport { Home5Component } from './components/home5/home5.component';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListarDatosComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    UpdatepopupComponent,\r\n    UserlistingComponent,\r\n    PaisFormComponent,\r\n    ProvinciaFormComponent,\r\n    LocalidadFormComponent,\r\n    Home2Component,\r\n    EmpresaFormComponent,\r\n    EmpresaPlantaFormComponent,\r\n    MaquinaFormComponent,\r\n    TipoMaquinaFormComponent,\r\n    LineaProduccionFormComponent,\r\n    Home3Component,\r\n    ProcesoFormComponent,\r\n    Home4Component,\r\n    VariableFormComponent,\r\n    TriggerFormComponent,\r\n    Home5Component,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: ['localhost'],\r\n      },\r\n    }),\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    ToastrModule.forRoot(),\r\n  ],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-home2',\r\n  templateUrl: './home2.component.html',\r\n  styleUrls: ['./home2.component.css'],\r\n})\r\nexport class Home2Component implements OnInit {\r\n  isLinear = false;\r\n\r\n  paisForm!: FormGroup;\r\n  provinciaForm!: FormGroup;\r\n  localidadForm!: FormGroup;\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.paisForm = this._formBuilder.group({});\r\n    this.provinciaForm = this._formBuilder.group({});\r\n    this.localidadForm = this._formBuilder.group({});\r\n  }\r\n}\r\n","<mat-stepper [linear]=\"isLinear\" #stepper>\r\n  <mat-step [stepControl]=\"paisForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>País</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-pais-form></app-pais-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"provinciaForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Provincia</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-provincia-form></app-provincia-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"localidadForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Localidad</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-localidad-form></app-localidad-form>\r\n  </mat-step>\r\n</mat-stepper>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-home3',\r\n  templateUrl: './home3.component.html',\r\n  styleUrls: ['./home3.component.css'],\r\n})\r\nexport class Home3Component {\r\n  isLinear = false;\r\n\r\n  tipoMaquinaForm!: FormGroup;\r\n  maquinaForm!: FormGroup;\r\n  lineaForm!: FormGroup;\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.tipoMaquinaForm = this._formBuilder.group({});\r\n    this.maquinaForm = this._formBuilder.group({});\r\n    this.lineaForm = this._formBuilder.group({});\r\n  }\r\n}\r\n","<mat-stepper [linear]=\"isLinear\" #stepper>\r\n  <mat-step [stepControl]=\"tipoMaquinaForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Tipo de maquina</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-tipo-maquina-form></app-tipo-maquina-form>\r\n  </mat-step>\r\n\r\n  <mat-step [stepControl]=\"lineaForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span\r\n          >Linea de produccion</span\r\n        >\r\n      </div>\r\n    </ng-template>\r\n    <app-linea-produccion-form></app-linea-produccion-form>\r\n  </mat-step>\r\n\r\n  <mat-step [stepControl]=\"maquinaForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Maquina</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-maquina-form></app-maquina-form>\r\n  </mat-step>\r\n</mat-stepper>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-home4',\r\n  templateUrl: './home4.component.html',\r\n  styleUrls: ['./home4.component.css'],\r\n})\r\nexport class Home4Component {\r\n  isLinear = false;\r\n\r\n  procesoForm!: FormGroup;\r\n  variableForm!: FormGroup;\r\n  triggerForm!: FormGroup;\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.procesoForm = this._formBuilder.group({});\r\n    this.variableForm = this._formBuilder.group({});\r\n    this.triggerForm = this._formBuilder.group({});\r\n  }\r\n}\r\n","<mat-stepper [linear]=\"isLinear\" #stepper>\r\n  <mat-step [stepControl]=\"procesoForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Procesos</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-proceso-form></app-proceso-form>\r\n  </mat-step>\r\n\r\n  <mat-step [stepControl]=\"triggerForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Trigger</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-trigger-form></app-trigger-form>\r\n  </mat-step>\r\n\r\n  <mat-step [stepControl]=\"variableForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Variables</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-variable-form></app-variable-form>\r\n  </mat-step>\r\n</mat-stepper>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatStepper, StepperOrientation } from '@angular/material/stepper';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n  selector: 'app-home5',\r\n  templateUrl: './home5.component.html',\r\n  styleUrls: ['./home5.component.css'],\r\n})\r\nexport class Home5Component implements OnInit {\r\n  @ViewChild('stepper') stepper!: MatStepper;\r\n\r\n  isLinear = true;\r\n\r\n  paisForm!: FormGroup;\r\n  provinciaForm!: FormGroup;\r\n  localidadForm!: FormGroup;\r\n  empresaForm!: FormGroup;\r\n  plantaForm!: FormGroup;\r\n  tipoMaquinaForm!: FormGroup;\r\n  lineaProduccionForm!: FormGroup;\r\n  maquinaForm!: FormGroup;\r\n  procesoForm!: FormGroup;\r\n  triggerForm!: FormGroup;\r\n  timeout: any;\r\n  token: any;\r\n  isTrue: boolean = false;\r\n\r\n  isPaisCompleted: boolean = false;\r\n  isProvinciaCompleted: boolean = false;\r\n  isLocalidadCompleted: boolean = false;\r\n  isEmpresaCompleted: boolean = false;\r\n  isPlantaCompleted: boolean = false;\r\n  isTipoMaquinaCompleted: boolean = false;\r\n  isLineaProduccionCompleted: boolean = false;\r\n  isMaquinaCompleted: boolean = false;\r\n  isProcesoCompleted: boolean = false;\r\n  isTriggerCompleted: boolean = false;\r\n\r\n  subscription!: Subscription;\r\n  stepperOrientation: Observable<StepperOrientation>;\r\n\r\n  constructor(\r\n    private service: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    breakpointObserver: BreakpointObserver\r\n  ) {\r\n    this.stepperOrientation = breakpointObserver\r\n      .observe('(min-width: 800px)')\r\n      .pipe(map(({ matches }) => (matches ? 'horizontal' : 'vertical')));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.expirationCheck();\r\n    this.subscription = this.service.paisSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPaisCompleted = true;\r\n      } else {\r\n        this.isPaisCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.provinciaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProvinciaCompleted = true;\r\n      } else {\r\n        this.isProvinciaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLocalidadCompleted = true;\r\n      } else {\r\n        this.isLocalidadCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.empresaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isEmpresaCompleted = true;\r\n      } else {\r\n        this.isEmpresaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.plantaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPlantaCompleted = true;\r\n      } else {\r\n        this.isPlantaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.lineaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLineaProduccionCompleted = true;\r\n      } else {\r\n        this.isLineaProduccionCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => {\r\n        if (message != '') {\r\n          this.isTipoMaquinaCompleted = true;\r\n        } else {\r\n          this.isTipoMaquinaCompleted = false;\r\n        }\r\n      }\r\n    );\r\n    this.subscription = this.service.maquinaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isMaquinaCompleted = true;\r\n      } else {\r\n        this.isMaquinaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.procesoSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProcesoCompleted = true;\r\n      } else {\r\n        this.isProcesoCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.triggerSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isTriggerCompleted = true;\r\n      } else {\r\n        this.isTriggerCompleted = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.service.expirationCounter(this.timeout);\r\n  }\r\n}\r\n","<mat-stepper\r\n  [orientation]=\"(stepperOrientation | async)!\"\r\n  [linear]=\"isLinear\"\r\n  #stepper\r\n>\r\n  <mat-step [stepControl]=\"paisForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>País</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-pais-form></app-pais-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"provinciaForm\" *ngIf=\"isPaisCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Provincia</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-provincia-form></app-provincia-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"localidadForm\" *ngIf=\"isProvinciaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Localidad</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-localidad-form></app-localidad-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"empresaForm\" *ngIf=\"isLocalidadCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Empresa</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-empresa-form></app-empresa-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"plantaForm\" *ngIf=\"isEmpresaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Planta</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-empresa-planta-form></app-empresa-planta-form>\r\n  </mat-step>\r\n\r\n  <mat-step [stepControl]=\"lineaProduccionForm\" *ngIf=\"isPlantaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span\r\n          >Linea de produccion\r\n        </span>\r\n      </div>\r\n    </ng-template>\r\n    <app-linea-produccion-form></app-linea-produccion-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"tipoMaquinaForm\" *ngIf=\"isLineaProduccionCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Tipo de maquina </span>\r\n      </div>\r\n    </ng-template>\r\n    <app-tipo-maquina-form></app-tipo-maquina-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isTipoMaquinaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Maquina</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-maquina-form></app-maquina-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isMaquinaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Proceso</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-proceso-form></app-proceso-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isProcesoCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Trigger</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-trigger-form></app-trigger-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isTriggerCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Variable</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-variable-form></app-variable-form>\r\n  </mat-step>\r\n</mat-stepper>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent {\r\n  isLinear = false;\r\n\r\n  empresaForm!: FormGroup;\r\n  plantaForm!: FormGroup;\r\n  lineaForm!: FormGroup;\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.empresaForm = this._formBuilder.group({});\r\n    this.plantaForm = this._formBuilder.group({});\r\n    this.lineaForm = this._formBuilder.group({});\r\n  }\r\n}\r\n","<mat-stepper [linear]=\"isLinear\" #stepper>\r\n  <mat-step [stepControl]=\"empresaForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Empresa</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-empresa-form></app-empresa-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"plantaForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Planta</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-empresa-planta-form></app-empresa-planta-form>\r\n  </mat-step>\r\n</mat-stepper>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { HttpServiceService } from 'src/app/service/http-service.service';\r\nimport { Chart, registerables } from 'node_modules/chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport {} from 'date-fns/locale';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { UtilsService } from 'src/app/service/utils.service';\r\nimport { Dato, RegistroFiltrado } from 'src/app/models/datos.model';\r\nimport { Subscription } from 'rxjs';\r\nimport zoomPlugin from 'chartjs-plugin-zoom';\r\nChart.register(...registerables, zoomPlugin);\r\n\r\n@Component({\r\n  selector: 'app-listar-datos',\r\n  templateUrl: './listar-datos.component.html',\r\n  styleUrls: ['./listar-datos.component.css'],\r\n})\r\nexport class ListarDatosComponent implements OnInit, OnDestroy {\r\n  listDatos: any[] = [];\r\n  listVariables: any[] = [];\r\n  listCheckbox: any[] = [];\r\n  todayDate: Date = new Date();\r\n  sixMonthAgoDate!: Date;\r\n  dato!: Dato;\r\n  sensor_1: string = 'sensor 1';\r\n  sensor_2: string = 'sensor 2';\r\n  pulsador: string = 'Pulsador';\r\n  id: any = 0;\r\n  chart: any;\r\n  chart2: any;\r\n  chart3: any;\r\n  chart4: any;\r\n  title: string = 'Prueba angular';\r\n  timeout: any;\r\n  token: any;\r\n  subscription!: Subscription;\r\n  listDatos2: RegistroFiltrado[] = [];\r\n  canvasBackgroundColor = {\r\n    id: 'canvasBackgroundColor',\r\n    beforeDraw(chart: any, args: any, pluginOptions: any) {\r\n      const {\r\n        ctx,\r\n        chartArea: { top, bottom, left, right, width },\r\n        scales: { x, y },\r\n      } = chart;\r\n      function bgColors(\r\n        bracketLow: number,\r\n        bracketHigh: number,\r\n        color: string\r\n      ) {\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(\r\n          left,\r\n          y.getPixelForValue(bracketHigh),\r\n          width,\r\n          y.getPixelForValue(bracketLow) - y.getPixelForValue(bracketHigh)\r\n        );\r\n      }\r\n      bgColors(26.5, 30, 'rgba(255, 26, 104, 0.2)');\r\n      bgColors(24, 26.5, 'rgba(75, 192, 192, 0.2)');\r\n      bgColors(0, 24, 'rgba(255, 206, 86, 0.2)');\r\n    },\r\n  };\r\n  decimation: any = {\r\n    id: 'decimation',\r\n    enabled: true,\r\n    algorithm: 'min-max',\r\n    // samples: 100,\r\n    threshold: 50,\r\n  };\r\n\r\n  constructor(\r\n    private _httpService: HttpServiceService,\r\n    private utils: UtilsService,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService\r\n  ) {\r\n    // Preparing the chart data\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addMonths(this.todayDate, -6);\r\n    this.getVariables();\r\n\r\n    this.chart = new Chart('myChart', {\r\n      type: 'line',\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n          },\r\n          {\r\n            data: [],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        // hay que arreglar esto para que funcione la data decimation\r\n        // Turn off animations and data parsing for performance\r\n        aspectRatio: 1,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        parsing: false,\r\n        plugins: {\r\n          decimation: this.decimation,\r\n          zoom: {\r\n            pan: {\r\n              enabled: true,\r\n              mode: 'xy',\r\n            },\r\n            zoom: {\r\n              wheel: {\r\n                enabled: true,\r\n              },\r\n              pinch: {\r\n                enabled: true,\r\n              },\r\n              mode: 'xy',\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          y: {\r\n            type: 'linear',\r\n            beginAtZero: true,\r\n            ticks: {},\r\n            max: 30,\r\n            grid: {\r\n              // @ts-ignore\r\n              // color: (context) => {\r\n              //   if (context.tick.value >= 26.5) {\r\n              //     return '#eb4034';\r\n              //   } else if (context.tick.value <= 24.5) {\r\n              //     return '#ebc034';\r\n              //   } else {\r\n              //     return 'rgba(0, 0, 0, 0.1)';\r\n              //   }\r\n              //   console.log(context);\r\n              // },\r\n            },\r\n          },\r\n          x: {\r\n            type: 'time',\r\n\r\n            ticks: {\r\n              source: 'auto',\r\n              // Disabled rotation for performance\r\n              maxRotation: 0,\r\n              autoSkip: true,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      plugins: [this.canvasBackgroundColor],\r\n    });\r\n\r\n    this.chart2 = new Chart('myChart2', {\r\n      type: 'bar',\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n            label: 'Valor máximo por mes',\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            borderColor: 'rgb(255, 99, 132)',\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        elements: {\r\n          line: {\r\n            borderWidth: 3,\r\n          },\r\n        },\r\n        aspectRatio: 1,\r\n        maintainAspectRatio: false,\r\n      },\r\n    });\r\n    this.chart3 = new Chart('myChart3', {\r\n      type: 'doughnut',\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n            borderColor: this.getDataColors(),\r\n            backgroundColor: this.getDataColors('20'),\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        plugins: {\r\n          legend: { position: 'left' },\r\n        },\r\n        maintainAspectRatio: false,\r\n      },\r\n    });\r\n    // this.chart4 = new Chart('myChart4', {\r\n    //   type: 'radar',\r\n    //   data: {\r\n    //     labels: ['Max', 'Min', 'Avg'],\r\n    //     datasets: [],\r\n    //   },\r\n    //   options: {\r\n    //     elements: {\r\n    //       line: {\r\n    //         borderWidth: 3,\r\n    //       },\r\n    //     },\r\n    //     maintainAspectRatio: false,\r\n    //   },\r\n    // });\r\n    this.subscription = this._httpService.listaDatos.subscribe((message) => {\r\n      // this.chart4.data.datasets = [];\r\n      this.listDatos2 = message;\r\n      this.chart3.data.labels = this.listDatos2.map((x) => x._id);\r\n      this.chart3.data.datasets[0].data = this.listDatos2.map((x) => x.avg);\r\n      this.chart3.update();\r\n      this.chart2.data.labels = this.listDatos2.map((x) => x._id);\r\n      this.chart2.data.datasets[0].data = this.listDatos2.map(\r\n        (x) => x.respuesta\r\n      );\r\n      this.chart2.update();\r\n      // this.chart4.data.datasets[0].data = this.listDatos2.map(\r\n      //   (x) => x.respuesta\r\n      // );\r\n\r\n      // this.listDatos2.forEach((datos) => { esto no lo vamos a ver\r\n      //   const dsColor = this.utils.namedColor(this.chart4.data.datasets.length);\r\n      //   var newDataSet = {\r\n      //     label: datos._id,\r\n      //     backgroundColor: this.utils.transparentize(dsColor, 0.5),\r\n      //     borderColor: dsColor,\r\n      //     data: [datos.respuesta, datos.min, datos.avg],\r\n      //   };\r\n      //   this.chart4.data.datasets.push(newDataSet);\r\n      // });\r\n      // this.chart4.update();\r\n    });\r\n    this.expirationCheck();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.id) {\r\n      clearInterval(this.id);\r\n    }\r\n  }\r\n\r\n  getRegistros() {\r\n    this._httpService\r\n      .getValores(this.listVariables[1]._id)\r\n      .subscribe((data) => {\r\n        this.listDatos = data['datos'];\r\n\r\n        this.chart.data.labels = console.log(\r\n          'despues del for each',\r\n          this.chart.data.labels\r\n        );\r\n        this.chart.data.datasets[0].data = this.listDatos\r\n          .map(\r\n            (x) =>\r\n              (this.dato = {\r\n                y: parseFloat(x.max.toFixed(2)),\r\n                x: new Date(x._id).getTime() + 10800000,\r\n              })\r\n          )\r\n          .filter((x) => {\r\n            return x.x > new Date('2023-05-21').getTime();\r\n          });\r\n        this.chart.data.datasets[1].data = this.listDatos\r\n          .map(\r\n            (x) =>\r\n              (this.dato = {\r\n                y: parseFloat(x.min.toFixed(2)),\r\n                x: new Date(x._id).getTime(),\r\n              })\r\n          )\r\n          .filter((x) => {\r\n            return x.x > new Date('2023-05-21').getTime();\r\n          });\r\n        this.chart.update();\r\n        console.log('datos: ', this.chart.data.datasets[0].data);\r\n      });\r\n  }\r\n\r\n  makeCheckboxArray(value: any) {\r\n    let newValue = JSON.parse(value.source._value);\r\n    console.log('chip presionado', newValue);\r\n    if (value.selected == true) {\r\n      this.listCheckbox.push(newValue);\r\n    } else {\r\n      function desmarcar(valor: any) {\r\n        return value.source._value != valor;\r\n      }\r\n      this.listCheckbox = this.listCheckbox.filter((x) => desmarcar(x));\r\n    }\r\n    console.log(this.listCheckbox);\r\n  }\r\n  getVariables() {\r\n    this._httpService.getVariables().subscribe((data) => {\r\n      this._httpService.stream_Variables(data);\r\n      this.listVariables = data;\r\n      console.log(this.listVariables);\r\n      this.getRegistros();\r\n      this.chart.data.datasets[0].label = 'Pressione estrusione max';\r\n      this.chart.data.datasets[1].label = 'Pressione estrusione min';\r\n      this.getFiltrados();\r\n    });\r\n  }\r\n  getFiltrados() {\r\n    var inicio: any = new Date('2023-05-01').getTime().toString();\r\n    var final: any = this.todayDate.getTime().toString();\r\n    this._httpService\r\n      .getValoresFiltrados(this.listVariables[1]._id, inicio, final, 'max')\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this._httpService.stream_Datos(data['datos']);\r\n      });\r\n  }\r\n  getDaysInMonth = (year: number, month: number) =>\r\n    new Date(year, month, 0).getDate();\r\n\r\n  addMonths = (input: Date, months: number) => {\r\n    const date = new Date(input);\r\n    date.setDate(1);\r\n    date.setMonth(date.getMonth() + months);\r\n    date.setDate(\r\n      Math.min(\r\n        input.getDate(),\r\n        this.getDaysInMonth(date.getFullYear(), date.getMonth() + 1)\r\n      )\r\n    );\r\n    this.sixMonthAgoDate = date;\r\n  };\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.authService.expirationCounter(this.timeout);\r\n  }\r\n  getDataColors = (opacity?: String) => {\r\n    const colors = [\r\n      '#7448c2',\r\n      '#21c0d7',\r\n      '#d99e2b',\r\n      '#cd3a81',\r\n      '#9c99cc',\r\n      '#e14eca',\r\n      '#ffffff',\r\n      '#ff0000',\r\n      '#d6ff00',\r\n      '#0038ff',\r\n    ];\r\n    return colors.map((color) => (opacity ? `${color + opacity}` : color));\r\n  };\r\n}\r\n","<div class=\"grid grid-flow-row grid-cols-1 sm:grid-cols-2 p-3 fondo\">\r\n  <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2>Estrusione</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart\"></canvas>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2>Estrusione valor maximo por mes</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart2\"></canvas>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2>Presión promedio por mes</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart3\"></canvas>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <!-- <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2>Esstrusore</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart4\"></canvas>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div> -->\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  loginForm = this.builder.group({\r\n    username: this.builder.control('', Validators.required),\r\n    password: this.builder.control('', Validators.required),\r\n  });\r\n  userData: any;\r\n\r\n  proceedLogin() {\r\n    this.service.LogIn(this.loginForm.value).subscribe((res) => {\r\n      this.userData = res;\r\n      console.log(this.userData.status);\r\n      console.log(this.userData);\r\n      switch (this.userData.status) {\r\n        case 200:\r\n          if (this.userData['datos'].isActive) {\r\n            // sessionStorage.setItem('token', this.userData.token);\r\n            // sessionStorage.setItem('username', this.userData['datos'].username);\r\n            // sessionStorage.setItem(\r\n            //   'userrole',\r\n            //   this.userData['datos'].role.name\r\n            // );\r\n            // console.log(sessionStorage.getItem('userrole')?.toString());\r\n            this.toastr.success('acceso concedido');\r\n            this.service.storeUserData(\r\n              this.userData.token,\r\n              this.userData['datos'],\r\n              this.userData.rtoken\r\n            );\r\n          } else {\r\n            this.toastr.error(\r\n              'Contactar con administrador',\r\n              'usuario inactivo'\r\n            );\r\n          }\r\n          break;\r\n        case 403:\r\n          this.toastr.error(\r\n            'Credenciales invalidas',\r\n            'usuario o contraseña incorrecta'\r\n          );\r\n          break;\r\n\r\n        default:\r\n          this.toastr.error(\r\n            'Credenciales invalidas',\r\n            'usuario o contraseña incorrecta'\r\n          );\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// if (\r\n//   this.userData['datos'].username === this.loginForm.value.username &&\r\n//   this.userData['datos'].password === this.loginForm.value.password\r\n// ) {\r\n//   if (this.userData['datos'].isActive) {\r\n//     sessionStorage.setItem('token', this.userData.token);\r\n//     sessionStorage.setItem('username', this.userData['datos'].username);\r\n//     sessionStorage.setItem('userrole', this.userData['datos'].role.name);\r\n//     this.router.navigate(['']);\r\n//     this.toastr.success('acceso concedido');\r\n//     console.log(sessionStorage.getItem('userrole')?.toString());\r\n//   } else {\r\n//     this.toastr.error('Contactar con administrador', 'usuario inactivo');\r\n//   }\r\n// } else if (this.userData.status == 403) {\r\n//   console.log('else if');\r\n//   this.toastr.error(\r\n//     'Credenciales invalidas',\r\n//     'usuario o contraseña incorrecta'\r\n//   );\r\n// }\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Login</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"loginForm\"\r\n      (ngSubmit)=\"proceedLogin()\"\r\n    >\r\n      <div class=\"flex flex-col p-5\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre de usuario</mat-label>\r\n          <input matInput formControlName=\"username\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Contraseña</mat-label>\r\n          <input type=\"password\" matInput formControlName=\"password\" />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Ingresar</button>\r\n        <a routerLink=\"/register\" mat-raised-button color=\"accent\"\r\n          >Nuevo usuario</a\r\n        >\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.minLength(5)])\r\n    ),\r\n    name: this.builder.control('', Validators.required),\r\n    password: this.builder.control(\r\n      '',\r\n      Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(\r\n          '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{8,}'\r\n        ),\r\n      ])\r\n    ),\r\n    email: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.email])\r\n    ),\r\n    role: this.builder.control('64f1f60e918724a5f931d909'),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  proceedRegistration() {\r\n    if (this.registerform.valid) {\r\n      console.log(this.registerform.value);\r\n      this.service.Proceedregister(this.registerform.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else if (res.status == 200) {\r\n            this.toastr.success(\r\n              'Solicitar acceso con el administrador ',\r\n              'Registro exitoso'\r\n            );\r\n            this.router.navigate(['login']);\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.toastr.warning('error', error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Registro</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"proceedRegistration()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre de usuario</mat-label>\r\n          <input matInput formControlName=\"username\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input matInput formControlName=\"name\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Contraseña</mat-label>\r\n          <input type=\"password\" matInput formControlName=\"password\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput formControlName=\"email\" />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Enviar</button>\r\n        <a routerLink=\"/login\" mat-raised-button color=\"accent\"\r\n          >Volver a pantalla de ingreso</a\r\n        >\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-updatepopup',\r\n  templateUrl: './updatepopup.component.html',\r\n  styleUrls: ['./updatepopup.component.css'],\r\n})\r\nexport class UpdatepopupComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private service: AuthService,\r\n    private toastr: ToastrService,\r\n    private dialog: MatDialogRef<UpdatepopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  editData: any;\r\n\r\n  ngOnInit(): void {\r\n    this.service.GetAllRoles().subscribe((res) => {\r\n      console.log('roles', res);\r\n      this.rolelist = res;\r\n    });\r\n    if (this.data.username != null && this.data.username != '') {\r\n      this.service.GetById(this.data.username).subscribe((res) => {\r\n        this.editData = res;\r\n        this.registerform.setValue({\r\n          username: this.editData.username,\r\n          name: this.editData.name,\r\n          password: this.editData.password,\r\n          email: this.editData.email,\r\n          role: this.editData.role,\r\n          isActive: this.editData.isActive,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  rolelist: any;\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(''),\r\n    name: this.builder.control(''),\r\n    password: this.builder.control(''),\r\n    email: this.builder.control(''),\r\n    role: this.builder.control('', Validators.required),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  updateUser() {\r\n    if (this.registerform.valid) {\r\n      this.service\r\n        .UpdateUser(this.registerform.value.username, this.registerform.value)\r\n        .subscribe((res) => {\r\n          this.toastr.success('Updated successfully');\r\n          this.dialog.close();\r\n        });\r\n    } else {\r\n      this.toastr.warning('Please select a role');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Update User</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"updateUser()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Role</mat-label>\r\n          <mat-select formControlName=\"role\">\r\n            <mat-option value=\"\">Select Role </mat-option>\r\n            <mat-option *ngFor=\"let item of rolelist\" [value]=\"item._id\">\r\n              {{ item.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-checkbox formControlName=\"isActive\">Is Active? </mat-checkbox>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Update</button>\r\n        <a mat-dialog-close mat-raised-button color=\"accent\">Close</a>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { UpdatepopupComponent } from '../updatepopup/updatepopup.component';\r\n\r\n@Component({\r\n  selector: 'app-userlisting',\r\n  templateUrl: './userlisting.component.html',\r\n  styleUrls: ['./userlisting.component.css'],\r\n})\r\nexport class UserlistingComponent {\r\n  constructor(private service: AuthService, private dialog: MatDialog) {\r\n    this.LoadUser();\r\n  }\r\n\r\n  userList: any;\r\n  dataSource: any;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  LoadUser() {\r\n    this.service.GetAll().subscribe((res) => {\r\n      this.userList = res;\r\n      this.dataSource = new MatTableDataSource(this.userList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  UpdateUser(username: any) {\r\n    const popup = this.dialog.open(UpdatepopupComponent, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '50%',\r\n      data: {\r\n        username: username,\r\n      },\r\n    });\r\n    popup.afterClosed().subscribe((res) => {\r\n      this.LoadUser();\r\n    });\r\n  }\r\n  displayedColumns: string[] = [\r\n    'username',\r\n    'name',\r\n    'email',\r\n    'status',\r\n    'role',\r\n    'action',\r\n  ];\r\n\r\n  opendialog() {}\r\n}\r\n","<div class=\"mat-elevation-z8 carta\">\r\n  <table mat-table matSort [dataSource]=\"dataSource\">\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"username\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>User name</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.username }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>Name</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"email\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>email</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"role\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>Role</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.role.name === \"\" ? \"Unassigned\" : element.role.name }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"status\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>Status</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.isActive ? \"Active\" : \"Inactive\" }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef>Action</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <a\r\n          (click)=\"UpdateUser(element.username)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          >Update</a\r\n        >\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    showFirstLastButtons\r\n    aria-label=\"Select page of periodic elements\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthService } from './service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  rtoken_url = environment.API_URL_RTOKEN;\r\n  rBody = {\r\n    token: sessionStorage.getItem('rtoken')?.toString(),\r\n    user: sessionStorage.getItem('username')?.toString(),\r\n  };\r\n  resData: any;\r\n  timeout: any;\r\n  token: any;\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  refreshToken(): void {\r\n    this.authService.postForm(this.rtoken_url, this.rBody).subscribe((res) => {\r\n      this.resData = res.body;\r\n      console.log(\r\n        'refresh token: ',\r\n        this.rBody,\r\n        'access Token: ',\r\n        this.resData\r\n      );\r\n      console.log('status code: ', res.status);\r\n      this.token = this.resData.accessToken;\r\n      sessionStorage.setItem('token', this.resData.accessToken);\r\n      sessionStorage.setItem('rtoken', this.resData.refreshToken);\r\n      this.timeout =\r\n        this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n        new Date().valueOf();\r\n      this.authService.expirationCounter(this.timeout);\r\n      if (res.status == 200) {\r\n        this.toastr.success('sesion extendida');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Sesion a punto de exipirar</h1>\r\n<div mat-dialog-content>\r\n  <p>Desea continuar con su sesion?</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No</button>\r\n  <button\r\n    class=\"m-3\"\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    mat-button\r\n    (click)=\"refreshToken()\"\r\n    [mat-dialog-close]\r\n    cdkFocusInitial\r\n  >\r\n    De acuerdo\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-empresa-form',\r\n  templateUrl: './empresa-form.component.html',\r\n  styleUrls: ['./empresa-form.component.css'],\r\n})\r\nexport class EmpresaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listLocalidades: any;\r\n  listEmpresas: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlantas = environment.API_URL_PLANTA;\r\n  isOptional = true;\r\n  id_localidad!: string;\r\n  id_empresa!: string;\r\n  empresaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLocalidades();\r\n    this.empresaForm = this.builder.group({\r\n      razon_social: this.builder.control('', Validators.required),\r\n      nombre_fantasia: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n      piso: this.builder.control('', Validators.required),\r\n      deptartamento: this.builder.control('', Validators.required),\r\n      rubro: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.listEmpresas.subscribe(\r\n      (message) => (this.listEmpresas = message)\r\n    );\r\n  }\r\n\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createEmpresa() {\r\n    if (this.empresaForm.valid) {\r\n      console.log(this.empresaForm.value);\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        razon_social: this.empresaForm.value.razon_social,\r\n        nombre_fantasia: this.empresaForm.value.nombre_fantasia,\r\n        calle: this.empresaForm.value.calle,\r\n        altura: this.empresaForm.value.altura,\r\n        piso: this.empresaForm.value.piso,\r\n        deptartamento: this.empresaForm.value.deptartamento,\r\n        rubro: this.empresaForm.value.rubro,\r\n      };\r\n      this.service.postForm(this.apiEmpresas, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Empresa registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n              .subscribe((res: any) => {\r\n                console.log('empresas res after crear: ', res);\r\n                this.listEmpresas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarEmpresa(id: string) {\r\n    console.log(this.apiEmpresas + id);\r\n    this.service.deleteForm(this.apiEmpresas, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Empresa borrada correctamente');\r\n          this.GetAllEmpresas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setEmpresa(id: any, nombre: any) {\r\n    console.log('set empresa', id, 'nombre', nombre);\r\n    this.id_empresa = id;\r\n    this.service.changeMessage(id);\r\n    this.service.empresaSelectedSource.next(id);\r\n    this.GetPlantasByEmpresas();\r\n  }\r\n\r\n  GetPlantasByEmpresas() {\r\n    this.service\r\n      .getForm(this.apiPlantas + this.id_empresa)\r\n      .subscribe((res: any) => {\r\n        console.log('empresa get plantas', res);\r\n        this.service.streamPlantas_EmpresaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Empresa</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Lista de Empresas </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"empresaForm\"\r\n            (ngSubmit)=\"createEmpresa()\"\r\n            (submit)=\"empresaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Razon Social</mat-label>\r\n              <input matInput formControlName=\"razon_social\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre Fantasia</mat-label>\r\n              <input matInput formControlName=\"nombre_fantasia\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Piso</mat-label>\r\n              <input matInput formControlName=\"piso\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Deptartamento</mat-label>\r\n              <input matInput formControlName=\"deptartamento\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Rubro</mat-label>\r\n              <input matInput formControlName=\"rubro\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Empresa </mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let empresa of listEmpresas\"\r\n            [value]=\"empresa._id\"\r\n            (click)=\"[setEmpresa(empresa._id, empresa.razon_social)]\"\r\n          >\r\n            <p>{{ empresa.razon_social }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-list role=\"list\" *ngFor=\"let empresa of listEmpresas\">\r\n              <mat-list-item role=\"listitem\">\r\n                {{ empresa.nombre_fantasia }}\r\n                <a\r\n                  (click)=\"borrarEmpresa(empresa._id)\"\r\n                  class=\"m-3\"\r\n                  mat-raised-button\r\n                  color=\"warn\"\r\n                >\r\n                  eliminar\r\n                </a>\r\n              </mat-list-item>\r\n            </mat-list> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-empresa-planta-form',\r\n  templateUrl: './empresa-planta-form.component.html',\r\n  styleUrls: ['./empresa-planta-form.component.css'],\r\n})\r\nexport class EmpresaPlantaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listEmpresas: any;\r\n  listLocalidades: any;\r\n  listPlantas: any;\r\n  id_empresa!: string;\r\n  id_localidad!: string;\r\n  id_planta!: string;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  isOptional = true;\r\n  plantaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLocalidades();\r\n    this.GetAllEmpresas();\r\n    this.plantaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.listPlantas.subscribe(\r\n      (message) => (this.listPlantas = message)\r\n    );\r\n    this.subscription = this.service.empresaSelected.subscribe(\r\n      (message) => (this.id_empresa = message)\r\n    );\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n  }\r\n\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createPlanta() {\r\n    if (this.plantaForm.valid) {\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        id_empresa: this.id_empresa,\r\n        nombre: this.plantaForm.value.nombre,\r\n        calle: this.plantaForm.value.calle,\r\n        altura: this.plantaForm.value.altura,\r\n      };\r\n      console.log(this.plantaForm.value);\r\n      this.service.postForm(this.apiPlanta, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else {\r\n            this.toastr.success('Planta registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiPlanta + this.id_empresa)\r\n              .subscribe((res: any) => {\r\n                this.listPlantas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarPlanta(id: string) {\r\n    console.log(this.apiPlanta + id);\r\n    this.service.deleteForm(this.apiPlanta, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Planta borrada correctamente');\r\n          this.GetAllPlantas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setPlanta(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_planta = id;\r\n    this.service.plantaSelectedSource.next(id);\r\n    this.GetLineaByPlanta();\r\n  }\r\n\r\n  GetLineaByPlanta() {\r\n    this.service\r\n      .getForm(this.apiLinea + this.id_planta)\r\n      .subscribe((res: any) => {\r\n        console.log('planta get lineas', res);\r\n        this.service.streamLinea_PlantaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Empresa</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>Formulario de Plantas de empresa</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"plantaForm\"\r\n            (ngSubmit)=\"createPlanta()\"\r\n            (submit)=\"plantaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una planta</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let planta of listPlantas\"\r\n            [value]=\"planta._id\"\r\n            (click)=\"[setPlanta(planta._id, planta.nombre)]\"\r\n          >\r\n            <p>{{ planta.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-linea-produccion-form',\r\n  templateUrl: './linea-produccion-form.component.html',\r\n  styleUrls: ['./linea-produccion-form.component.css'],\r\n})\r\nexport class LineaProduccionFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPlantas: any;\r\n  listLineas: any;\r\n  id_empresa_planta!: string;\r\n  id_linea!: string;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  lineaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPlantas();\r\n    this.lineaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n      identificador: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.listLineas.subscribe(\r\n      (message) => (this.listLineas = message)\r\n    );\r\n    this.subscription = this.service.plantaSelected.subscribe(\r\n      (message) => (this.id_empresa_planta = message)\r\n    );\r\n  }\r\n\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLinea() {\r\n    if (this.lineaForm.valid) {\r\n      console.log(this.lineaForm.value);\r\n      let body = {\r\n        id_empresa_planta: this.id_empresa_planta,\r\n        nombre: this.lineaForm.value.nombre,\r\n        descripcion: this.lineaForm.value.descripcion,\r\n        identificador: this.lineaForm.value.identificador,\r\n      };\r\n      this.service.postForm(this.apiLinea, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Linea de produccion registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiLinea + this.id_empresa_planta)\r\n              .subscribe((res: any) => {\r\n                this.listLineas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLineaProduccion(id: string) {\r\n    console.log(this.apiLinea + id);\r\n    this.service.deleteForm(this.apiLinea, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Linea de produccion borrada correctamente');\r\n          this.GetAllLineas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLinea(id: any, nombre: any) {\r\n    console.log('set linea', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_linea = id;\r\n    this.service.lineaSelectedSource.next(id);\r\n    this.GetMaquinaByLinea();\r\n  }\r\n\r\n  GetMaquinaByLinea() {\r\n    this.service\r\n      .getForm(this.apiMaquina + this.id_linea)\r\n      .subscribe((res: any) => {\r\n        console.log('linea get maquinas', res);\r\n        this.service.streamMaquinas_LineaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario Linea de produccion</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              Formulario de Linea de produccion\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"lineaForm\"\r\n            (ngSubmit)=\"createLinea()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>identificador</mat-label>\r\n              <input matInput formControlName=\"identificador\" />\r\n            </mat-form-field>\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Linea</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let linea of listLineas\"\r\n            [value]=\"linea._id\"\r\n            (click)=\"[setLinea(linea._id, linea.nombre)]\"\r\n          >\r\n            <p>{{ linea.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllLineas()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Lista de Lineas de produccion </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let linea of listLineas\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ linea.descripcion }}\r\n        <a\r\n          (click)=\"borrarLineaProduccion(linea._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-localidad-form',\r\n  templateUrl: './localidad-form.component.html',\r\n  styleUrls: ['./localidad-form.component.css'],\r\n})\r\nexport class LocalidadFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listProvincias: any;\r\n  listLocalidades: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiProvincias = environment.API_URL_PROVINCIAS;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  isOptional = true;\r\n  id_provincia!: string;\r\n  id_localidad!: string;\r\n  localidadForm!: FormGroup;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllProvincias();\r\n    this.localidadForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n    this.subscription2 = this.service.listLocalidades.subscribe(\r\n      (message) => (this.listLocalidades = message)\r\n    );\r\n  }\r\n\r\n  GetAllProvincias() {\r\n    this.service.getForm(this.apiProvincias).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProvincias = res['datos'];\r\n    });\r\n  }\r\n  //no esta en uso\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLocalidad() {\r\n    if (this.localidadForm.valid) {\r\n      console.log(this.localidadForm.value);\r\n      let body = {\r\n        nombre: this.localidadForm.value.nombre,\r\n        id_provincia: this.id_provincia,\r\n      };\r\n      this.service.postForm(this.apiLocalidad, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Localidad registrada correctamente');\r\n            this.service\r\n              .getForm(this.apiLocalidad + this.id_provincia)\r\n              .subscribe((res: any) => {\r\n                this.listLocalidades = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLocalidad(id: string) {\r\n    console.log(this.apiLocalidad + id);\r\n    this.service.deleteForm(this.apiLocalidad, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Localidad borrada correctamente');\r\n          this.GetAllLocalidades();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLocalidad(id: any, nombre: any) {\r\n    console.log('set localidad', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.service.localidadSelectedSource.next(id);\r\n\r\n    this.GetEmpresasByLocalidad();\r\n  }\r\n\r\n  GetEmpresasByLocalidad() {\r\n    this.service\r\n      .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n      .subscribe((res: any) => {\r\n        console.log('Localidad-form get empresas', res);\r\n        this.service.streamEmpresas_LocalidadSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Localidad</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>Formulario de Localidades</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"localidadForm\"\r\n            (ngSubmit)=\"createLocalidad()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre de Localidad</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label> Elegir una Localidad </mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let localidad of listLocalidades\"\r\n            [value]=\"localidad._id\"\r\n            (click)=\"[setLocalidad(localidad._id, localidad.nombre)]\"\r\n          >\r\n            <p>{{ localidad.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-maquina-form',\r\n  templateUrl: './maquina-form.component.html',\r\n  styleUrls: ['./maquina-form.component.css'],\r\n})\r\nexport class MaquinaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listLineas: any;\r\n  listTipoMaquina: any;\r\n  listMaquinas: any;\r\n  message: any;\r\n  id_linea_produccion!: string;\r\n  id_tipo_maquina!: string;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  maquinaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLineas();\r\n    this.GetAllTipos();\r\n\r\n    this.maquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      marca: this.builder.control('', Validators.required),\r\n      modelo: this.builder.control('', Validators.required),\r\n      detalle: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.currentMessage.subscribe(\r\n      (message) => (this.message = message)\r\n    );\r\n    this.subscription = this.service.listMaquinas.subscribe(\r\n      (message) => (this.listMaquinas = message)\r\n    );\r\n    this.subscription = this.service.lineaSelected.subscribe(\r\n      (message) => (this.id_linea_produccion = message)\r\n    );\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => (this.id_tipo_maquina = message)\r\n    );\r\n  }\r\n\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n  GetAllTipos() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquinas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createMaquina() {\r\n    if (this.maquinaForm.valid) {\r\n      console.log(this.maquinaForm.value);\r\n      let body = {\r\n        id_linea_produccion: this.id_linea_produccion,\r\n        id_tipo_maquina: this.id_tipo_maquina,\r\n        nombre: this.maquinaForm.value.nombre,\r\n        marca: this.maquinaForm.value.marca,\r\n        modelo: this.maquinaForm.value.modelo,\r\n        detalle: this.maquinaForm.value.detalle,\r\n      };\r\n      this.service.postForm(this.apiMaquina, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Maquina registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiMaquina + this.id_linea_produccion)\r\n              .subscribe((res: any) => {\r\n                console.log('res maquina: ', res);\r\n                this.listMaquinas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarMaquina(id: string) {\r\n    console.log(this.apiMaquina + id);\r\n    this.service.deleteForm(this.apiMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Maquina borrada correctamente');\r\n          this.GetAllMaquinas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setMaquina(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamMaquinaSelected(maquina_id: string) {\r\n    this.service.streamMaquinaSelected(maquina_id);\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario Maquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header hideToggle>\r\n            <mat-panel-title>Formulario de maquinas</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"maquinaForm\"\r\n            (ngSubmit)=\"createMaquina()\"\r\n            (submit)=\"maquinaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Marca</mat-label>\r\n              <input matInput formControlName=\"marca\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Modelo</mat-label>\r\n              <input matInput formControlName=\"modelo\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Detalle</mat-label>\r\n              <input matInput formControlName=\"detalle\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una maquina</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let maquina of listMaquinas\"\r\n            [value]=\"maquina._id\"\r\n            (click)=\"\r\n              [\r\n                setMaquina(maquina._id, maquina.nombre),\r\n                StreamMaquinaSelected(maquina._id)\r\n              ]\r\n            \"\r\n          >\r\n            <p>{{ maquina.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllMaquinas()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Lista de tipos de maquina </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let maquina of listMaquinas\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ maquina.nombre }}\r\n        <a\r\n          (click)=\"borrarMaquina(maquina._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-pais-form',\r\n  templateUrl: './pais-form.component.html',\r\n  styleUrls: ['./pais-form.component.css'],\r\n})\r\nexport class PaisFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  isOptional = true;\r\n  paisForm!: FormGroup;\r\n  id_pais!: string;\r\n  message2!: any;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  completed: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPaises();\r\n    this.paisForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.id_pais = message)\r\n    );\r\n  }\r\n  urlPaises = environment.API_URL_PAISES;\r\n\r\n  GetAllPaises() {\r\n    this.service.getForm(this.apiPaises).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPaises = res['datos'];\r\n    });\r\n  }\r\n  createPais() {\r\n    if (this.paisForm.valid) {\r\n      console.log(this.paisForm.value);\r\n      this.service.postForm(this.urlPaises, this.paisForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Pais registrado correctamente');\r\n            this.GetAllPaises();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarPais(id: string) {\r\n    console.log(this.urlPaises + id);\r\n    this.service.deleteForm(this.urlPaises, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Pais borrado correctamente');\r\n          this.GetAllPaises();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setPais(id: any, nombre: any) {\r\n    console.log('set pais', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.service.paisSelectedSource.next(id);\r\n    this.GetProvinciasByPais();\r\n  }\r\n\r\n  GetProvinciasByPais() {\r\n    console.log('pais nombre', this.id_pais);\r\n\r\n    this.service\r\n      .getForm(this.apiProvincia + this.id_pais)\r\n      .subscribe((res: any) => {\r\n        console.log('pais form get provincias', res);\r\n        this.service.streamProvincias_PaisSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta mat-elevation-z\">\r\n  <mat-card-header>\r\n    <h2>Formulario de país</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Formulario de pais </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"paisForm\"\r\n            (ngSubmit)=\"createPais()\"\r\n            (submit)=\"paisForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre de pais</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un pais</mat-label>\r\n\r\n        <mat-select (click)=\"GetAllPaises()\" (selectionChange)=\"(!completed)\">\r\n          <mat-option\r\n            *ngFor=\"let pais of listPaises\"\r\n            [value]=\"pais._id\"\r\n            (click)=\"[setPais(pais._id, pais.nombre)]\"\r\n          >\r\n            <p>{{ pais.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-proceso-form',\r\n  templateUrl: './proceso-form.component.html',\r\n  styleUrls: ['./proceso-form.component.css'],\r\n})\r\nexport class ProcesoFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  procesoForm!: FormGroup;\r\n  listProceso: any;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllProcesos();\r\n    this.procesoForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProceso = res['datos'];\r\n    });\r\n  }\r\n\r\n  crearProceso() {\r\n    if (this.procesoForm.valid) {\r\n      console.log(this.procesoForm.value);\r\n      this.service.postForm(this.apiProceso, this.procesoForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('proceso registrado correctamente');\r\n            this.GetAllProcesos();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarProcesos(id: string) {\r\n    console.log(this.apiProceso + id);\r\n    this.service.deleteForm(this.apiProceso, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Proceso borrado correctamente');\r\n          this.GetAllProcesos();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setProceso(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamProcesoSelected(proceso_id: string) {\r\n    this.service.streamProcesoSelected(proceso_id);\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de proceso</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>Formulario de Proceso</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"procesoForm\"\r\n            (ngSubmit)=\"crearProceso()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre del proceso</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Descripcion del proceso</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un proceso</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let proceso of listProceso\"\r\n            [value]=\"proceso._id\"\r\n            (click)=\"\r\n              [\r\n                setProceso(proceso._id, proceso.nombre),\r\n                StreamProcesoSelected(proceso._id)\r\n              ]\r\n            \"\r\n          >\r\n            <p>{{ proceso.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext>Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllProcesos()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Listado de procesos </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let proceso of listProceso\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ proceso.descripcion }}\r\n        <a\r\n          (click)=\"borrarProcesos(proceso._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-provincia-form',\r\n  templateUrl: './provincia-form.component.html',\r\n  styleUrls: ['./provincia-form.component.css'],\r\n})\r\nexport class ProvinciaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  listProvincias: any;\r\n  listProvinciasPais: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  isOptional = true;\r\n  provinciaForm!: FormGroup;\r\n  id_pais!: string;\r\n  id_provincia!: string;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPaises();\r\n    this.provinciaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.id_pais = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n\r\n    this.subscription2 = this.service.listProvincias.subscribe(\r\n      (message) => (this.listProvinciasPais = message)\r\n    );\r\n  }\r\n\r\n  GetAllPaises() {\r\n    this.service.getForm(this.apiPaises).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPaises = res['datos'];\r\n    });\r\n  }\r\n  // no esta en uso\r\n  GetAllProvincias() {\r\n    this.service.getForm(this.apiProvincia).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.listProvincias = res['datos'];\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  createProvincia() {\r\n    if (this.provinciaForm.valid) {\r\n      console.log(this.provinciaForm.value);\r\n      let body = {\r\n        nombre: this.provinciaForm.value.nombre,\r\n        id_pais: this.id_pais,\r\n      };\r\n      this.service.postForm(this.apiProvincia, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 200) {\r\n            this.toastr.success('provincia registrada correctamente');\r\n            this.service\r\n              .getForm(this.apiProvincia + this.id_pais)\r\n              .subscribe((res: any) => {\r\n                this.listProvinciasPais = res;\r\n              });\r\n          } else if (res.status == 403) {\r\n            this.toastr.warning('acceso denegado, token expirado');\r\n          } else {\r\n            this.toastr.warning(res.error.error);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarProvincia(id: string) {\r\n    console.log(this.apiProvincia + id);\r\n    this.service.deleteForm(this.apiProvincia, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Provincia borrada correctamente');\r\n          this.GetAllProvincias();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setProvincia(id: any, nombre: any) {\r\n    console.log('set provincia', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.service.provinciaSelectedSource.next(id);\r\n    this.GetLocalidadesByProvincia();\r\n  }\r\n\r\n  GetLocalidadesByProvincia() {\r\n    this.service\r\n      .getForm(this.apiLocalidad + this.id_provincia)\r\n      .subscribe((res: any) => {\r\n        console.log('provincia form get localidades', res);\r\n\r\n        this.service.streamLocalides_ProvinciaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Provincia</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Formulario de provincias </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"provinciaForm\"\r\n            (ngSubmit)=\"createProvincia()\"\r\n            (submit)=\"provinciaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre de provincia</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Provincia</mat-label>\r\n\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let provincia of listProvinciasPais\"\r\n            [value]=\"provincia._id\"\r\n            (click)=\"[setProvincia(provincia._id, provincia.nombre)]\"\r\n          >\r\n            <p>{{ provincia.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-tipo-maquina-form',\r\n  templateUrl: './tipo-maquina-form.component.html',\r\n  styleUrls: ['./tipo-maquina-form.component.css'],\r\n})\r\nexport class TipoMaquinaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  listTipoMaquina: any;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  isOptional = true;\r\n  tipoMaquinaForm!: FormGroup;\r\n  pais: any;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTiposMaquina();\r\n    this.tipoMaquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  createTipoMaquina() {\r\n    if (this.tipoMaquinaForm.valid) {\r\n      console.log(this.tipoMaquinaForm.value);\r\n      this.service\r\n        .postForm(this.apiTipoMaquina, this.tipoMaquinaForm.value)\r\n        .subscribe({\r\n          next: (res: any) => {\r\n            console.log('respuesta: ', res);\r\n            if (res.status == 500) {\r\n              this.toastr.warning(res.error.error);\r\n            } else {\r\n              this.toastr.success('Tipo de maquina registrada correctamente');\r\n              this.GetAllTiposMaquina();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.toastr.error(error);\r\n            console.log(error);\r\n          },\r\n        });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  GetAllTiposMaquina() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n\r\n  borrarTipoMaquina(id: string) {\r\n    console.log(this.apiTipoMaquina + id);\r\n    this.service.deleteForm(this.apiTipoMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Tipo de maquina borrada correctamente');\r\n          this.GetAllTiposMaquina();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTipo(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamTipoSelected(tipo_id: string) {\r\n    this.service.streamTipoSelected(tipo_id);\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario Tipo Maquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Formulario de Tipo de maquina </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"tipoMaquinaForm\"\r\n            (ngSubmit)=\"createTipoMaquina()\"\r\n            (submit)=\"tipoMaquinaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un Tipo de maquina</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let tipo of listTipoMaquina\"\r\n            [value]=\"tipo._id\"\r\n            (click)=\"\r\n              [setTipo(tipo._id, tipo.nombre), StreamTipoSelected(tipo._id)]\r\n            \"\r\n          >\r\n            <p>{{ tipo.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllTiposMaquina()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Lista de tipos de maquina </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let tipoMaquina of listTipoMaquina\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ tipoMaquina.descripcion }}\r\n        <a\r\n          (click)=\"borrarTipoMaquina(tipoMaquina._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-trigger-form',\r\n  templateUrl: './trigger-form.component.html',\r\n  styleUrls: ['./trigger-form.component.css'],\r\n})\r\nexport class TriggerFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  triggerForm!: FormGroup;\r\n  listTriggers: any;\r\n  trigger_descripcion!: string;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTriggers();\r\n    this.triggerForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTriggers = res;\r\n    });\r\n  }\r\n\r\n  crearTrigger() {\r\n    if (this.triggerForm.valid) {\r\n      console.log(this.triggerForm.value);\r\n      this.service.postForm(this.apiTrigger, this.triggerForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Trigger registrado correctamente');\r\n            this.GetAllTriggers();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarTrigger(id: string) {\r\n    console.log(this.apiTrigger + id);\r\n    this.service.deleteForm(this.apiTrigger, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Trigger borrado correctamente');\r\n          this.GetAllTriggers();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTrigger(id: any, nombre: any, descripcion: string) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.trigger_descripcion = descripcion;\r\n  }\r\n\r\n  StreamTriggerSelected(trigger_id: string) {\r\n    this.service.streamTriggerSelected(trigger_id);\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Trigger</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un Trigger</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let trigger of listTriggers\">\r\n            <mat-option\r\n              [value]=\"trigger._id\"\r\n              (click)=\"\r\n                [\r\n                  setTrigger(trigger._id, trigger.nombre, trigger.descripcion),\r\n                  StreamTriggerSelected(trigger._id)\r\n                ]\r\n              \"\r\n            >\r\n              <p>{{ trigger.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ trigger.descripcion }}\r\n            </p>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext>Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllTriggers()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Listado de triggers</mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let trigger of listTriggers\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ trigger.nombre }}\r\n        <a\r\n          (click)=\"borrarTrigger(trigger._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-variable-form',\r\n  templateUrl: './variable-form.component.html',\r\n  styleUrls: ['./variable-form.component.css'],\r\n})\r\nexport class VariableFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiVariables = environment.API_URL_VARIABLES;\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  apiMaquinas = environment.API_URL_MAQUINA;\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  variableForm!: FormGroup;\r\n  id_maquina: any;\r\n  id_proceso: any;\r\n  id_trigger: any;\r\n  listProcesos: any;\r\n  listMaquina: any;\r\n  listTrigger: any;\r\n  listaVariables: any;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllVariables();\r\n    this.GetAllProcesos();\r\n    this.GetAllMaquinas();\r\n    this.GetAllTriggers();\r\n    this.variableForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control(''),\r\n      trigger_valor: this._formBuilder.control(''),\r\n    });\r\n    this.subscription = this.service.maquinaSelected.subscribe(\r\n      (message) => (this.id_maquina = message)\r\n    );\r\n    this.subscription = this.service.procesoSelected.subscribe(\r\n      (message) => (this.id_proceso = message)\r\n    );\r\n    this.subscription = this.service.triggerSelected.subscribe(\r\n      (message) => (this.id_trigger = message)\r\n    );\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProcesos = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquinas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTrigger = res;\r\n    });\r\n  }\r\n  GetAllVariables() {\r\n    this.service.getForm(this.apiVariables).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listaVariables = res;\r\n    });\r\n  }\r\n\r\n  crearVariable() {\r\n    if (this.variableForm.valid) {\r\n      console.log(this.variableForm.value);\r\n      let body = {\r\n        id_maquina: this.id_maquina,\r\n        id_proceso: this.id_proceso,\r\n        id_trigger: this.id_trigger,\r\n        nombre: this.variableForm.value.nombre,\r\n        trigger_valor: this.variableForm.value.trigger_valor,\r\n      };\r\n      this.service.postForm(this.apiVariables, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Variable registrada correctamente');\r\n            this.GetAllVariables();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor ingrese datos validos');\r\n    }\r\n  }\r\n\r\n  borrarVariable(id: string) {\r\n    console.log(this.apiVariables + id);\r\n    this.service.deleteForm(this.apiVariables, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Variable borrada correctamente');\r\n          this.GetAllVariables();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Variables</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"variableForm\"\r\n      (ngSubmit)=\"crearVariable()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>nombre de la variable </mat-label>\r\n          <input matInput formControlName=\"nombre\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>descripcion de la variable </mat-label>\r\n          <input matInput formControlName=\"descripcion\" />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"\">\r\n          <mat-label>valor del trigger </mat-label>\r\n          <input matInput formControlName=\"trigger_valor\" />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div>\r\n        <mat-accordion>\r\n          <mat-expansion-panel (click)=\"GetAllVariables()\" hideToggle>\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title> Listado de variables</mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n            <mat-list role=\"list\" *ngFor=\"let variable of listaVariables\">\r\n              <mat-list-item role=\"listitem\">\r\n                {{ variable.nombre }}\r\n                <a\r\n                  (click)=\"borrarVariable(variable._id)\"\r\n                  class=\"m-3\"\r\n                  mat-raised-button\r\n                  color=\"warn\"\r\n                >\r\n                  eliminar\r\n                </a>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n      </div>\r\n\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Enviar</button>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { inject } from '@angular/core';\r\nimport { CanActivateFn, Router } from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const authGuard: CanActivateFn = (route, state) => {\r\n  const router = inject(Router);\r\n  const service = inject(AuthService);\r\n  const toastr = inject(ToastrService);\r\n\r\n  if (service.IsLoggedIn()) {\r\n    if (route.url.length > 0) {\r\n      let menu = route.url[0].path;\r\n      if (menu == 'user' || 'home' || 'home2' || 'home3') {\r\n        if (service.getUserRole() == 'admin') {\r\n          return true;\r\n        } else {\r\n          toastr.warning('Acceso restringido, no es administrador');\r\n          router.navigate(['']);\r\n          return false;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  } else {\r\n    router.navigate(['login']);\r\n    return false;\r\n  }\r\n};\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  Subscription,\r\n  catchError,\r\n  delay,\r\n  Observable,\r\n  BehaviorSubject,\r\n  Subject,\r\n  of,\r\n} from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogOverviewExampleDialog } from '../dialog.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private jwtHelper: JwtHelperService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  apiUrl = environment.API_URL_USERS;\r\n  apiRole = environment.API_URL_ROLES;\r\n  authToken: any;\r\n  user: any;\r\n  tokenSubscription = new Subscription();\r\n  tokenSubscription2 = new Subscription();\r\n  timeout?: any;\r\n\r\n  private messageSource = new BehaviorSubject('default message');\r\n  //observables que recogen la respuesta de la llamada a la api\r\n  private provinciasSource = new BehaviorSubject('');\r\n  private localidadesSource = new BehaviorSubject('');\r\n  private empresasSource = new BehaviorSubject('');\r\n  private plantasSource = new BehaviorSubject('');\r\n  private lineaSource = new BehaviorSubject('');\r\n  private maquinaSource = new BehaviorSubject('');\r\n\r\n  //observables que recogen la opcion seleccionada\r\n  paisSelectedSource = new BehaviorSubject('');\r\n  provinciaSelectedSource = new BehaviorSubject('');\r\n  localidadSelectedSource = new BehaviorSubject('');\r\n  empresaSelectedSource = new BehaviorSubject('');\r\n  plantaSelectedSource = new BehaviorSubject('');\r\n  lineaSelectedSource = new BehaviorSubject('');\r\n  tipoMaquinaSelectedSource = new BehaviorSubject('');\r\n  maquinaSelectedSource = new BehaviorSubject('');\r\n  procesoSelectedSource = new BehaviorSubject('');\r\n  triggerSelectedSource = new BehaviorSubject('');\r\n\r\n  currentMessage = this.messageSource.asObservable();\r\n\r\n  // guardamos la respuesta en listas que son accesibles desde los componentes\r\n  listProvincias = this.provinciasSource.asObservable();\r\n  listLocalidades = this.localidadesSource.asObservable();\r\n  listEmpresas = this.empresasSource.asObservable();\r\n  listPlantas = this.plantasSource.asObservable();\r\n  listLineas = this.lineaSource.asObservable();\r\n  listMaquinas = this.maquinaSource.asObservable();\r\n\r\n  // guardamos la opcion seleccionada para que sea accesible a los componentes\r\n  paisSelected = this.paisSelectedSource.asObservable();\r\n  provinciaSelected = this.provinciaSelectedSource.asObservable();\r\n  localidadSelected = this.localidadSelectedSource.asObservable();\r\n  empresaSelected = this.empresaSelectedSource.asObservable();\r\n  plantaSelected = this.plantaSelectedSource.asObservable();\r\n  lineaSelected = this.lineaSelectedSource.asObservable();\r\n  tipoMaquinaSelected = this.tipoMaquinaSelectedSource.asObservable();\r\n  maquinaSelected = this.maquinaSelectedSource.asObservable();\r\n  procesoSelected = this.procesoSelectedSource.asObservable();\r\n  triggerSelected = this.triggerSelectedSource.asObservable();\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '50%',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  // get\r\n\r\n  GetAll() {\r\n    return this.http.get(this.apiUrl);\r\n  }\r\n\r\n  //\r\n\r\n  GetAllRoles() {\r\n    return this.http.get(this.apiRole);\r\n  }\r\n\r\n  GetById(id: any) {\r\n    return this.http.get(this.apiUrl + '/' + id);\r\n  }\r\n\r\n  LogIn(body: any) {\r\n    return this.http.post(this.apiUrl + 'login', body).pipe(\r\n      catchError(async (error) => {\r\n        console.log(error.message);\r\n        return error;\r\n      })\r\n    );\r\n  }\r\n  storeUserData(token: any, user: any, rtoken: any) {\r\n    console.log('storeUserData, user: ', user, 'token: ', token);\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(token)!.valueOf() -\r\n      new Date().valueOf();\r\n    sessionStorage.setItem('token', token);\r\n    sessionStorage.setItem('rtoken', rtoken);\r\n    sessionStorage.setItem('username', user.name);\r\n    sessionStorage.setItem('userrole', user.role.name);\r\n    this.authToken = token;\r\n    this.user = user;\r\n    // this.expirationCounter(this.timeout);\r\n    if (sessionStorage.getItem('userrole') == 'admin') {\r\n      this.router.navigate(['home5']);\r\n    } else {\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n\r\n  expirationCounter(timeout: any) {\r\n    console.log('timeout: ', timeout);\r\n    this.tokenSubscription.unsubscribe();\r\n    this.tokenSubscription = of(null)\r\n      .pipe(delay(timeout))\r\n      .subscribe((expired) => {\r\n        console.log('EXPIRED!!');\r\n        this.dialog.closeAll();\r\n        this.logout();\r\n        this.toastr.error('sesion expirada', 'vuelva a iniciar sesion');\r\n      });\r\n    this.pre_expirationCounter(timeout);\r\n  }\r\n\r\n  pre_expirationCounter(timeout: any) {\r\n    let timeNow = new Date();\r\n    console.log('time now: ', timeNow);\r\n    this.tokenSubscription2.unsubscribe();\r\n    this.tokenSubscription2 = of(null)\r\n      .pipe(delay(timeout - 120000))\r\n      .subscribe(() => {\r\n        this.openDialog();\r\n        console.log('about to expire !!');\r\n      });\r\n  }\r\n  logout() {\r\n    this.tokenSubscription.unsubscribe();\r\n    this.authToken = null;\r\n    this.user = null;\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/login']);\r\n    sessionStorage.setItem('token', '');\r\n    console.log(sessionStorage.getItem('token')?.toString());\r\n  }\r\n\r\n  IsLoggedIn() {\r\n    return sessionStorage.getItem('username') != null;\r\n  }\r\n  getUserRole() {\r\n    return sessionStorage.getItem('userrole') != null\r\n      ? sessionStorage.getItem('userrole')?.toString()\r\n      : '';\r\n  }\r\n  // post\r\n  Proceedregister(inputdata: any) {\r\n    return this.http\r\n      .post(this.apiUrl, inputdata, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  UpdateUser(id: any, inputdata: any) {\r\n    return this.http.post(this.apiUrl + '/' + id, inputdata);\r\n  }\r\n\r\n  // get formularios\r\n  getForm(url: string) {\r\n    return this.http\r\n      .get(url, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          if (error.status == 403) {\r\n            this.router.navigate(['/login']);\r\n          }\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  postForm(url: string, formData: any) {\r\n    return this.http\r\n      .post(url, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  deleteForm(url: string, id: string) {\r\n    return this.http\r\n      .delete(url + 'delete/' + id, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  changeMessage(message: string) {\r\n    console.log('change message: ', message);\r\n    this.messageSource.next(message);\r\n  }\r\n  streamProvincias_PaisSelected(provincias: string) {\r\n    console.log('change message: ', provincias);\r\n    this.provinciasSource.next(provincias);\r\n  }\r\n\r\n  streamLocalides_ProvinciaSelected(localidades: string) {\r\n    console.log('change message: ', localidades);\r\n    this.localidadesSource.next(localidades);\r\n  }\r\n\r\n  streamEmpresas_LocalidadSelected(empresas: string) {\r\n    console.log('change message: ', empresas);\r\n    this.empresasSource.next(empresas);\r\n  }\r\n  streamPlantas_EmpresaSelected(plantas: string) {\r\n    console.log('change message: ', plantas);\r\n    this.plantasSource.next(plantas);\r\n  }\r\n\r\n  streamLinea_PlantaSelected(linea: string) {\r\n    console.log('change message: ', linea);\r\n    this.lineaSource.next(linea);\r\n  }\r\n  streamMaquinas_LineaSelected(Maquinas: string) {\r\n    console.log('change message: ', Maquinas);\r\n    this.maquinaSource.next(Maquinas);\r\n  }\r\n  streamTipoSelected(TipoMaquina: string) {\r\n    console.log('tipo maquina selected: ', TipoMaquina);\r\n    this.tipoMaquinaSelectedSource.next(TipoMaquina);\r\n  }\r\n  streamMaquinaSelected(Maquina: string) {\r\n    console.log('maquina selected: ', Maquina);\r\n    this.maquinaSelectedSource.next(Maquina);\r\n  }\r\n  streamProcesoSelected(proceso: string) {\r\n    console.log('Proceso selected: ', proceso);\r\n    this.procesoSelectedSource.next(proceso);\r\n  }\r\n  streamTriggerSelected(trigger: string) {\r\n    console.log('Trigger selected: ', trigger);\r\n    this.triggerSelectedSource.next(trigger);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RegistroFiltrado, Variable } from '../models/datos.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpServiceService {\r\n  registroGeneral = environment.API_URL_RGENERAL;\r\n  variables = environment.API_URL_VARIABLES;\r\n  private listaVariablesSource = new BehaviorSubject(<Variable[]>[]);\r\n  private listaDatosSource = new BehaviorSubject(<RegistroFiltrado[]>[]);\r\n  listaVariables = this.listaVariablesSource.asObservable();\r\n  listaDatos = this.listaDatosSource.asObservable();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getValores(variable: string): Observable<any> {\r\n    return this.http.get(this.registroGeneral + 'all/' + variable, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  getValoresFiltrados(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String,\r\n    operacion: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneral + `filter/${variable}/${inicio}/${fin}/${operacion}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getVariables(): Observable<any> {\r\n    return this.http.get(this.variables, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  stream_Variables(variables: Variable[]) {\r\n    console.log('stream variables: ', variables);\r\n    this.listaVariablesSource.next(variables);\r\n  }\r\n  stream_Datos(datos: RegistroFiltrado[]) {\r\n    console.log('stream datos: ', datos);\r\n    this.listaDatosSource.next(datos);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport colorLib from '@kurkle/color';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilsService {\n  constructor() {}\n  private CHART_COLORS = {\n    red: 'rgb(255, 99, 132)',\n    orange: 'rgb(255, 159, 64)',\n    yellow: 'rgb(255, 205, 86)',\n    green: 'rgb(75, 192, 192)',\n    blue: 'rgb(54, 162, 235)',\n    purple: 'rgb(153, 102, 255)',\n    grey: 'rgb(201, 203, 207)',\n  };\n\n  NAMED_COLORS = [\n    this.CHART_COLORS.red,\n    this.CHART_COLORS.orange,\n    this.CHART_COLORS.yellow,\n    this.CHART_COLORS.green,\n    this.CHART_COLORS.blue,\n    this.CHART_COLORS.purple,\n    this.CHART_COLORS.grey,\n  ];\n\n  namedColor(index: number) {\n    return this.NAMED_COLORS[index % this.NAMED_COLORS.length];\n  }\n  transparentize(value: string, opacity: number) {\n    var alpha = opacity === undefined ? 0.5 : 1 - opacity;\n    return colorLib(value).alpha(alpha).rgbString();\n  }\n}\n","export const environment = {\r\n  production: false,\r\n  API_URL_USERS: 'http://automatismopalmar.ddns.net:3001/api/users/',\r\n  API_URL_ROLES: 'http://automatismopalmar.ddns.net:3001/api/role/',\r\n  API_URL_RGENERAL:\r\n    'http://automatismopalmar.ddns.net:3001/api/registro-general//',\r\n  API_URL_VARIABLES: 'http://automatismopalmar.ddns.net:3001/api/variables/',\r\n  API_URL_PAISES: 'http://automatismopalmar.ddns.net:3001/api/paises/',\r\n  API_URL_PROVINCIAS: 'http://automatismopalmar.ddns.net:3001/api/provincias/',\r\n  API_URL_LOCALIDADES: 'http://automatismopalmar.ddns.net:3001/api/localidad/',\r\n  API_URL_EMPRESAS: 'http://automatismopalmar.ddns.net:3001/api/empresas/',\r\n  API_URL_PLANTA: 'http://automatismopalmar.ddns.net:3001/api/empresa-planta/',\r\n  API_URL_TIPO_MAQUINA:\r\n    'http://automatismopalmar.ddns.net:3001/api/tipo-maquina/',\r\n  API_URL_MAQUINA: 'http://automatismopalmar.ddns.net:3001/api/maquinas/',\r\n  API_URL_LINEA_PRODUCCION:\r\n    'http://automatismopalmar.ddns.net:3001/api/linea-produccion/',\r\n  API_URL_PROCESO: 'http://automatismopalmar.ddns.net:3001/api/proceso/',\r\n  API_URL_TRIGGER: 'http:///automatismopalmar.ddns.net:3001/api/trigger/',\r\n  API_URL_RTOKEN: 'http:///automatismopalmar.ddns.net:3001/api/refresh',\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatStepperModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n"],"names":["RouterModule","ListarDatosComponent","RegisterComponent","LoginComponent","UserlistingComponent","authGuard","Home5Component","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","i1","exports","FormControl","FormGroup","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_div_18_Template_button_click_1_listener","ɵɵrestoreView","_r6","ɵɵnextContext","_r0","ɵɵreference","ɵɵresetView","toggle","ɵɵtemplate","AppComponent_div_18_a_6_Template","AppComponent_div_18_a_7_Template","ɵɵelement","AppComponent_div_18_Template_a_click_9_listener","ctx_r7","logOut","ɵɵadvance","ɵɵproperty","ctx_r2","isAdminUser","AppComponent","constructor","router","service","_httpService","opened","range","start","end","title","isMenuRequired","listVariables","listDatos","ngOnInit","subscription","listaVariables","subscribe","message","ngDoCheck","currentUrl","url","getUserRole","logout","getFiltrados","inicio","value","getTime","toString","final","getValoresFiltrados","_id","data","console","log","stream_Datos","ɵɵdirectiveInject","Router","i2","AuthService","i3","HttpServiceService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_Template_mat_sidenav_openedChange_1_listener","$event","AppComponent_Template_button_click_15_listener","AppComponent_div_18_Template","_r1","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","BrowserAnimationsModule","MaterialModule","ToastrModule","HomeComponent","UpdatepopupComponent","PaisFormComponent","ProvinciaFormComponent","LocalidadFormComponent","Home2Component","EmpresaFormComponent","EmpresaPlantaFormComponent","MaquinaFormComponent","TipoMaquinaFormComponent","LineaProduccionFormComponent","Home3Component","ProcesoFormComponent","Home4Component","VariableFormComponent","JwtModule","TriggerFormComponent","MAT_DATE_LOCALE","tokenGetter","localStorage","getItem","AppModule","bootstrap","provide","useValue","config","allowedDomains","declarations","_formBuilder","isLinear","paisForm","group","provinciaForm","localidadForm","FormBuilder","Home2Component_Template","Home2Component_ng_template_3_Template","Home2Component_ng_template_6_Template","Home2Component_ng_template_9_Template","tipoMaquinaForm","maquinaForm","lineaForm","Home3Component_Template","Home3Component_ng_template_3_Template","Home3Component_ng_template_6_Template","Home3Component_ng_template_9_Template","procesoForm","variableForm","triggerForm","Home4Component_Template","Home4Component_ng_template_3_Template","Home4Component_ng_template_6_Template","Home4Component_ng_template_9_Template","map","Home5Component_mat_step_6_ng_template_1_Template","Home5Component_mat_step_7_ng_template_1_Template","ctx_r3","Home5Component_mat_step_8_ng_template_1_Template","ctx_r4","empresaForm","Home5Component_mat_step_9_ng_template_1_Template","ctx_r5","plantaForm","Home5Component_mat_step_10_ng_template_1_Template","ctx_r6","lineaProduccionForm","Home5Component_mat_step_11_ng_template_1_Template","Home5Component_mat_step_12_ng_template_1_Template","ctx_r8","Home5Component_mat_step_13_ng_template_1_Template","ctx_r9","Home5Component_mat_step_14_ng_template_1_Template","ctx_r10","Home5Component_mat_step_15_ng_template_1_Template","ctx_r11","jwtHelper","breakpointObserver","isTrue","isPaisCompleted","isProvinciaCompleted","isLocalidadCompleted","isEmpresaCompleted","isPlantaCompleted","isTipoMaquinaCompleted","isLineaProduccionCompleted","isMaquinaCompleted","isProcesoCompleted","isTriggerCompleted","stepperOrientation","observe","pipe","matches","expirationCheck","paisSelected","provinciaSelected","localidadSelected","empresaSelected","plantaSelected","lineaSelected","tipoMaquinaSelected","maquinaSelected","procesoSelected","triggerSelected","token","sessionStorage","timeout","getTokenExpirationDate","valueOf","Date","expirationCounter","JwtHelperService","BreakpointObserver","viewQuery","Home5Component_Query","Home5Component_ng_template_4_Template","Home5Component_mat_step_6_Template","Home5Component_mat_step_7_Template","Home5Component_mat_step_8_Template","Home5Component_mat_step_9_Template","Home5Component_mat_step_10_Template","Home5Component_mat_step_11_Template","Home5Component_mat_step_12_Template","Home5Component_mat_step_13_Template","Home5Component_mat_step_14_Template","Home5Component_mat_step_15_Template","ɵɵpipeBind1","HomeComponent_Template","HomeComponent_ng_template_3_Template","HomeComponent_ng_template_6_Template","Chart","registerables","zoomPlugin","register","utils","authService","listCheckbox","todayDate","sensor_1","sensor_2","pulsador","id","listDatos2","canvasBackgroundColor","beforeDraw","chart","args","pluginOptions","chartArea","top","bottom","left","right","width","scales","x","y","bgColors","bracketLow","bracketHigh","color","fillStyle","fillRect","getPixelForValue","decimation","enabled","algorithm","threshold","getDaysInMonth","year","month","getDate","addMonths","input","months","date","setDate","setMonth","getMonth","Math","min","getFullYear","sixMonthAgoDate","getDataColors","opacity","colors","getVariables","type","labels","datasets","options","aspectRatio","maintainAspectRatio","animation","parsing","plugins","zoom","pan","mode","wheel","pinch","beginAtZero","ticks","max","grid","source","maxRotation","autoSkip","chart2","label","backgroundColor","borderColor","elements","line","borderWidth","chart3","legend","position","listaDatos","avg","update","respuesta","ngOnDestroy","clearInterval","getRegistros","getValores","dato","parseFloat","toFixed","filter","makeCheckboxArray","newValue","JSON","parse","_value","selected","push","desmarcar","valor","stream_Variables","UtilsService","i4","ListarDatosComponent_Template","Validators","builder","toastr","loginForm","username","control","required","password","clear","proceedLogin","LogIn","res","userData","status","isActive","success","storeUserData","rtoken","error","ToastrService","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_5_listener","registerform","compose","minLength","name","pattern","email","role","proceedRegistration","valid","Proceedregister","next","warning","navigate","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_5_listener","MAT_DIALOG_DATA","item_r1","ɵɵtextInterpolate1","dialog","GetAllRoles","rolelist","GetById","editData","setValue","updateUser","UpdateUser","close","MatDialogRef","UpdatepopupComponent_Template","UpdatepopupComponent_Template_form_ngSubmit_5_listener","UpdatepopupComponent_mat_option_13_Template","MatTableDataSource","MatPaginator","MatSort","ɵɵtextInterpolate","element_r14","element_r15","element_r16","element_r17","element_r18","UserlistingComponent_td_19_Template_a_click_1_listener","restoredCtx","_r21","element_r19","$implicit","ctx_r20","displayedColumns","LoadUser","GetAll","userList","dataSource","paginator","sort","popup","open","enterAnimationDuration","exitAnimationDuration","afterClosed","opendialog","MatDialog","UserlistingComponent_Query","ɵɵelementContainerStart","UserlistingComponent_th_3_Template","UserlistingComponent_td_4_Template","ɵɵelementContainerEnd","UserlistingComponent_th_6_Template","UserlistingComponent_td_7_Template","UserlistingComponent_th_9_Template","UserlistingComponent_td_10_Template","UserlistingComponent_th_12_Template","UserlistingComponent_td_13_Template","UserlistingComponent_th_15_Template","UserlistingComponent_td_16_Template","UserlistingComponent_th_18_Template","UserlistingComponent_td_19_Template","UserlistingComponent_tr_20_Template","UserlistingComponent_tr_21_Template","ɵɵpureFunction0","_c0","MatButtonModule","MatDialogModule","MatFormFieldModule","MatInputModule","environment","DialogOverviewExampleDialog","dialogRef","rtoken_url","API_URL_RTOKEN","rBody","user","onNoClick","refreshToken","postForm","resData","body","accessToken","setItem","standalone","features","ɵɵStandaloneFeature","DialogOverviewExampleDialog_Template","DialogOverviewExampleDialog_Template_button_click_6_listener","DialogOverviewExampleDialog_Template_button_click_8_listener","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","i5","MatButton","encapsulation","EmpresaFormComponent_mat_option_48_Template_mat_option_click_0_listener","_r3","empresa_r1","setEmpresa","razon_social","apiLocalidad","API_URL_LOCALIDADES","apiEmpresas","API_URL_EMPRESAS","apiPlantas","API_URL_PLANTA","isOptional","GetAllLocalidades","nombre_fantasia","calle","altura","piso","deptartamento","rubro","id_localidad","listEmpresas","getForm","listLocalidades","GetAllEmpresas","createEmpresa","borrarEmpresa","deleteForm","nombre","id_empresa","changeMessage","empresaSelectedSource","GetPlantasByEmpresas","streamPlantas_EmpresaSelected","EmpresaFormComponent_Template","EmpresaFormComponent_Template_form_ngSubmit_11_listener","EmpresaFormComponent_Template_form_submit_11_listener","reset","EmpresaFormComponent_mat_option_48_Template","EmpresaPlantaFormComponent_mat_option_32_Template_mat_option_click_0_listener","planta_r1","setPlanta","apiPlanta","apiLinea","API_URL_LINEA_PRODUCCION","listPlantas","GetAllPlantas","createPlanta","borrarPlanta","id_planta","plantaSelectedSource","GetLineaByPlanta","streamLinea_PlantaSelected","EmpresaPlantaFormComponent_Template","EmpresaPlantaFormComponent_Template_form_ngSubmit_11_listener","EmpresaPlantaFormComponent_Template_form_submit_11_listener","EmpresaPlantaFormComponent_mat_option_32_Template","LineaProduccionFormComponent_mat_option_32_Template_mat_option_click_0_listener","linea_r1","setLinea","apiMaquina","API_URL_MAQUINA","descripcion","identificador","listLineas","id_empresa_planta","GetAllLineas","createLinea","borrarLineaProduccion","id_linea","lineaSelectedSource","GetMaquinaByLinea","streamMaquinas_LineaSelected","LineaProduccionFormComponent_Template","LineaProduccionFormComponent_Template_form_ngSubmit_11_listener","LineaProduccionFormComponent_mat_option_32_Template","LocalidadFormComponent_mat_option_24_Template_mat_option_click_0_listener","localidad_r1","setLocalidad","apiProvincias","API_URL_PROVINCIAS","GetAllProvincias","id_provincia","subscription2","listProvincias","createLocalidad","borrarLocalidad","localidadSelectedSource","GetEmpresasByLocalidad","streamEmpresas_LocalidadSelected","LocalidadFormComponent_Template","LocalidadFormComponent_Template_form_ngSubmit_11_listener","LocalidadFormComponent_mat_option_24_Template","MaquinaFormComponent_mat_option_36_Template_mat_option_click_0_listener","maquina_r1","setMaquina","StreamMaquinaSelected","apiTipoMaquina","API_URL_TIPO_MAQUINA","GetAllTipos","marca","modelo","detalle","currentMessage","listMaquinas","id_linea_produccion","id_tipo_maquina","listTipoMaquina","GetAllMaquinas","createMaquina","borrarMaquina","maquina_id","streamMaquinaSelected","MaquinaFormComponent_Template","MaquinaFormComponent_Template_form_ngSubmit_11_listener","MaquinaFormComponent_Template_form_submit_11_listener","MaquinaFormComponent_mat_option_36_Template","PaisFormComponent_mat_option_24_Template_mat_option_click_0_listener","pais_r1","setPais","apiPaises","API_URL_PAISES","apiProvincia","completed","urlPaises","GetAllPaises","id_pais","listPaises","createPais","borrarPais","paisSelectedSource","GetProvinciasByPais","streamProvincias_PaisSelected","PaisFormComponent_Template","PaisFormComponent_Template_form_ngSubmit_11_listener","PaisFormComponent_Template_form_submit_11_listener","PaisFormComponent_Template_mat_select_click_23_listener","PaisFormComponent_Template_mat_select_selectionChange_23_listener","PaisFormComponent_mat_option_24_Template","ProcesoFormComponent_mat_option_28_Template_mat_option_click_0_listener","proceso_r1","setProceso","StreamProcesoSelected","apiProceso","API_URL_PROCESO","GetAllProcesos","listProceso","crearProceso","borrarProcesos","proceso_id","streamProcesoSelected","ProcesoFormComponent_Template","ProcesoFormComponent_Template_form_ngSubmit_11_listener","ProcesoFormComponent_mat_option_28_Template","ProvinciaFormComponent_mat_option_24_Template_mat_option_click_0_listener","provincia_r1","setProvincia","listProvinciasPais","createProvincia","borrarProvincia","provinciaSelectedSource","GetLocalidadesByProvincia","streamLocalides_ProvinciaSelected","ProvinciaFormComponent_Template","ProvinciaFormComponent_Template_form_ngSubmit_11_listener","ProvinciaFormComponent_Template_form_submit_11_listener","ProvinciaFormComponent_mat_option_24_Template","TipoMaquinaFormComponent_mat_option_28_Template_mat_option_click_0_listener","tipo_r1","setTipo","StreamTipoSelected","GetAllTiposMaquina","createTipoMaquina","borrarTipoMaquina","tipo_id","streamTipoSelected","TipoMaquinaFormComponent_Template","TipoMaquinaFormComponent_Template_form_ngSubmit_11_listener","TipoMaquinaFormComponent_Template_form_submit_11_listener","TipoMaquinaFormComponent_mat_option_28_Template","TriggerFormComponent_div_10_Template_mat_option_click_1_listener","trigger_r1","setTrigger","StreamTriggerSelected","apiTrigger","API_URL_TRIGGER","GetAllTriggers","listTriggers","crearTrigger","borrarTrigger","trigger_descripcion","trigger_id","streamTriggerSelected","TriggerFormComponent_Template","TriggerFormComponent_div_10_Template","VariableFormComponent_mat_list_25_Template_a_click_3_listener","variable_r1","borrarVariable","apiVariables","API_URL_VARIABLES","apiMaquinas","GetAllVariables","trigger_valor","id_maquina","id_proceso","id_trigger","listProcesos","listMaquina","listTrigger","crearVariable","VariableFormComponent_Template","VariableFormComponent_Template_form_ngSubmit_5_listener","VariableFormComponent_Template_mat_expansion_panel_click_21_listener","VariableFormComponent_mat_list_25_Template","inject","route","state","IsLoggedIn","length","menu","Subscription","catchError","delay","BehaviorSubject","of","http","apiUrl","API_URL_USERS","apiRole","API_URL_ROLES","tokenSubscription","tokenSubscription2","messageSource","provinciasSource","localidadesSource","empresasSource","plantasSource","lineaSource","maquinaSource","tipoMaquinaSelectedSource","maquinaSelectedSource","procesoSelectedSource","triggerSelectedSource","asObservable","openDialog","result","get","post","_ref","_asyncToGenerator","_x","apply","arguments","authToken","unsubscribe","expired","closeAll","pre_expirationCounter","timeNow","inputdata","headers","_ref2","_x2","_this","Authorization","_ref3","_x3","formData","_ref4","_x4","delete","_ref5","_x5","provincias","localidades","empresas","plantas","linea","Maquinas","TipoMaquina","Maquina","proceso","trigger","ɵɵinject","HttpClient","factory","ɵfac","providedIn","registroGeneral","API_URL_RGENERAL","variables","listaVariablesSource","listaDatosSource","variable","fin","operacion","datos","colorLib","CHART_COLORS","red","orange","yellow","green","blue","purple","grey","NAMED_COLORS","namedColor","index","transparentize","alpha","undefined","rgbString","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","MatSelectModule","MatCardModule","MatRadioModule","MatCheckboxModule","MatTableModule","MatPaginatorModule","MatSortModule","MatExpansionModule","MatStepperModule","MatIconModule","MatListModule","MatChipsModule","MatDatepickerModule","MatNativeDateModule","MatSidenavModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}