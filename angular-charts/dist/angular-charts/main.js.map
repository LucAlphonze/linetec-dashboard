{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home5/home5.component.ts","./src/app/components/home5/home5.component.html","./src/app/components/listar-datos/listar-datos.component.ts","./src/app/components/listar-datos/listar-datos.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/tabla/tabla.component.ts","./src/app/components/tabla/tabla.component.html","./src/app/components/updatepopup/updatepopup.component.ts","./src/app/components/updatepopup/updatepopup.component.html","./src/app/components/userlisting/userlisting.component.ts","./src/app/components/userlisting/userlisting.component.html","./src/app/dialog.component.ts","./src/app/dialog.component.html","./src/app/forms/empresa-form/empresa-form.component.ts","./src/app/forms/empresa-form/empresa-form.component.html","./src/app/forms/empresa-planta-form/empresa-planta-form.component.ts","./src/app/forms/empresa-planta-form/empresa-planta-form.component.html","./src/app/forms/linea-produccion-form/linea-produccion-form.component.ts","./src/app/forms/linea-produccion-form/linea-produccion-form.component.html","./src/app/forms/localidad-form/localidad-form.component.ts","./src/app/forms/localidad-form/localidad-form.component.html","./src/app/forms/maquina-form/maquina-form.component.ts","./src/app/forms/maquina-form/maquina-form.component.html","./src/app/forms/pais-form/pais-form.component.ts","./src/app/forms/pais-form/pais-form.component.html","./src/app/forms/proceso-form/proceso-form.component.ts","./src/app/forms/proceso-form/proceso-form.component.html","./src/app/forms/provincia-form/provincia-form.component.ts","./src/app/forms/provincia-form/provincia-form.component.html","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.ts","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.html","./src/app/forms/trigger-form/trigger-form.component.ts","./src/app/forms/trigger-form/trigger-form.component.html","./src/app/forms/variable-form/variable-form.component.ts","./src/app/forms/variable-form/variable-form.component.html","./src/app/guard/auth.guard.ts","./src/app/service/auth.service.ts","./src/app/service/http.service.ts","./src/app/service/spinner.service.ts","./src/app/service/utils.service.ts","./src/environments/environment.staging.ts","./src/main.ts","./src/material.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { authGuard } from './guard/auth.guard';\r\n\r\nimport { Home5Component } from './components/home5/home5.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ListarDatosComponent, canActivate: [authGuard] },\r\n  { path: 'home5', component: Home5Component, canActivate: [authGuard] },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'user', component: UserlistingComponent, canActivate: [authGuard] },\r\n  { path: '**', redirectTo: 'login', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, DoCheck, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './service/auth.service';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { HttpService } from './service/http.service';\r\nimport { Subscription, catchError } from 'rxjs';\r\nimport { RegistroFiltrado, Variable } from './models/datos.model';\r\nimport { SpinnerService } from './service/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements DoCheck, OnInit {\r\n  opened: boolean = false;\r\n\r\n  range = new FormGroup({\r\n    start: new FormControl<Date | null>(null),\r\n    end: new FormControl<Date | null>(null),\r\n  });\r\n\r\n  valor!: FormGroup;\r\n  title = 'angular-charts';\r\n  isMenuRequired = false;\r\n  isAdminUser = false;\r\n  listVariables: Variable[] = [];\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  listDatos: RegistroFiltrado[] = [];\r\n  exceedList: any = [];\r\n\r\n  notExceedList2: any = [];\r\n\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private router: Router,\r\n    private service: AuthService,\r\n    private _httpService: HttpService,\r\n    private spinnerService: SpinnerService\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.valor = this.builder.group({\r\n      threshold: new FormControl<number>(25),\r\n    });\r\n\r\n    this.subscription = this._httpService.listaVariables.subscribe(\r\n      (message) => (this.listVariables = message)\r\n    );\r\n\r\n    this.subscription2 = this._httpService.listaDatosInRange.subscribe(\r\n      (message) => {\r\n        // console.log('app component datos in range: ', message);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    let currentUrl = this.router.url;\r\n    if (currentUrl == '/login' || currentUrl == '/register') {\r\n      this.isMenuRequired = false;\r\n      this.opened = false;\r\n    } else {\r\n      this.isMenuRequired = true;\r\n    }\r\n    if (this.service.getUserRole() === 'admin') {\r\n      this.isAdminUser = true;\r\n    } else {\r\n      this.isAdminUser = false;\r\n    }\r\n  }\r\n  logOut() {\r\n    this.service.logout();\r\n  }\r\n\r\n  getFiltrados() {\r\n    var inicio: any = this.range.value.start?.getTime().toString();\r\n    var final: any = this.range.value.end?.getTime().toString();\r\n    this.spinnerService.llamarSpinner('grafico');\r\n\r\n    this._httpService\r\n      .getValoresFiltrados(this.listVariables[1]._id, inicio, final, 'max')\r\n      .subscribe((data) => {\r\n        // console.log(data);\r\n        this._httpService.stream_RegistroFiltrado(data['datos']);\r\n      });\r\n    this._httpService\r\n      .getValoresFiltrados2(this.listVariables[1]._id, inicio, final)\r\n      .subscribe((data) => {\r\n        // console.log(data);\r\n        this._httpService.stream_RegistroFiltrado2(data['datos']);\r\n      });\r\n    this.getInRangeTabla();\r\n    this._httpService\r\n      .getValoresFiltrados2(this.listVariables[4]._id, inicio, final)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this._httpService.stream_Datos3(data['datos']);\r\n      });\r\n\r\n    this.opened = false;\r\n  }\r\n\r\n  getInRangeTabla() {\r\n    const notExceedList: any = [];\r\n    this.spinnerService.llamarSpinner('tabla');\r\n    var inicio: any = this.range.value.start?.getTime().toString();\r\n    var final: any = this.range.value.end?.getTime().toString();\r\n    this._httpService\r\n      .getAllInRange(this.listVariables[1]._id, inicio, final)\r\n      .subscribe((data) => {\r\n        this.exceedList = data['datos'].filter((x: any) => {\r\n          return x.valor_lectura > this.valor.value.threshold;\r\n        });\r\n        this.notExceedList2 = data['datos'].filter((n: any) => {\r\n          return n.valor_lectura < this.valor.value.threshold;\r\n        });\r\n        console.log(\r\n          'exceed: ',\r\n          this.exceedList.length,\r\n          'not exceed: ',\r\n          this.notExceedList2.length\r\n        );\r\n        myBlock: for (let i = 0; i < this.exceedList.length; i++) {\r\n          // console.log('i es ', i);\r\n          if (i == this.exceedList.length - 1) {\r\n            // console.log('not exceed list: ', notExceedList);\r\n            this.exceedList.map((e: any, index: number) => {\r\n              e.time = this.formatTime(\r\n                new Date(\r\n                  notExceedList[\r\n                    index < notExceedList.length\r\n                      ? index\r\n                      : notExceedList.length - 1\r\n                  ].time_stamp\r\n                ).getTime(),\r\n                new Date(e.time_stamp).getTime()\r\n              );\r\n              e.cTime_stamp = this.formatDate(\r\n                notExceedList[\r\n                  index < notExceedList.length\r\n                    ? index\r\n                    : notExceedList.length - 1\r\n                ].time_stamp\r\n              );\r\n              e.time_stamp = this.formatDate(e.time_stamp);\r\n            });\r\n            this._httpService.stream_DatosInRange(this.exceedList);\r\n          }\r\n          for (let j = 0; j < this.notExceedList2.length; j++) {\r\n            if (\r\n              this.notExceedList2[j].valor_lectura <\r\n                this.valor.value.threshold &&\r\n              new Date(this.notExceedList2[j]?.time_stamp).getTime() >\r\n                new Date(this.exceedList[i]?.time_stamp).getTime()\r\n            ) {\r\n              notExceedList.push(this.notExceedList2[j]);\r\n              continue myBlock;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    this.opened = false;\r\n  }\r\n\r\n  formatTime(notExceed: number, exceed: number) {\r\n    var seconds = (notExceed - exceed) / 1000;\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const remainingSeconds = seconds % 60;\r\n\r\n    const formattedHours = String(hours).padStart(2, '0');\r\n    const formattedMinutes = String(minutes).padStart(2, '0');\r\n    const formattedSeconds = String(remainingSeconds).padStart(2, '0');\r\n\r\n    return `${formattedHours}H ${formattedMinutes}M ${formattedSeconds}S`;\r\n  }\r\n  padTo2Digits(num: number) {\r\n    return num.toString().padStart(2, '0');\r\n  }\r\n\r\n  formatDate(data: string) {\r\n    const date = new Date(data);\r\n    return (\r\n      [\r\n        date.getFullYear(),\r\n        this.padTo2Digits(date.getMonth() + 1),\r\n        this.padTo2Digits(date.getDate()),\r\n      ].join('-') +\r\n      ' ' +\r\n      [\r\n        this.padTo2Digits(date.getHours()),\r\n        this.padTo2Digits(date.getMinutes()),\r\n        this.padTo2Digits(date.getSeconds()),\r\n      ].join(':')\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  :host {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\r\n      \"Segoe UI Symbol\";\r\n    font-size: 14px;\r\n    color: #333;\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n\r\n  .spacer {\r\n    flex: 1;\r\n  }\r\n\r\n  .toolbar {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 60px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #1976d2;\r\n    color: white;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .toolbar img {\r\n    margin: 0 16px;\r\n  }\r\n\r\n  .content {\r\n    margin: 82px auto 32px;\r\n    padding: 0 32px;\r\n    max-width: auto;\r\n    /* background-color: rgb(223, 215, 215); */\r\n  }\r\n  /* .fondo {\r\n    background-color: rgb(223, 215, 215);\r\n  } */\r\n\r\n  svg.material-icons {\r\n    height: 24px;\r\n    width: auto;\r\n  }\r\n\r\n  svg.material-icons:not(:last-child) {\r\n    margin-right: 8px;\r\n  }\r\n\r\n  .card svg.material-icons path {\r\n    fill: #888;\r\n  }\r\n\r\n  .card-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-top: 16px;\r\n  }\r\n\r\n  .card {\r\n    all: unset;\r\n    border-radius: 4px;\r\n    border: 1px solid #eee;\r\n    background-color: #5f5e5e;\r\n    height: 40px;\r\n    width: 200px;\r\n    margin: 0 8px 16px;\r\n    padding: 16px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: all 0.2s ease-in-out;\r\n    line-height: 24px;\r\n  }\r\n\r\n  .card-container .card:not(:last-child) {\r\n    margin-right: 0;\r\n  }\r\n\r\n  .card.card-small {\r\n    height: 16px;\r\n    width: 168px;\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card) {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card):hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card):hover .material-icons path {\r\n    fill: rgb(105, 103, 103);\r\n  }\r\n\r\n  .card.highlight-card {\r\n    background-color: #1976d2;\r\n    color: white;\r\n    font-weight: 600;\r\n    border: none;\r\n    width: auto;\r\n    min-width: 30%;\r\n    position: relative;\r\n  }\r\n\r\n  .card.card.highlight-card span {\r\n    margin-left: 60px;\r\n  }\r\n\r\n  svg#rocket {\r\n    width: 80px;\r\n    position: absolute;\r\n    left: -10px;\r\n    top: -24px;\r\n  }\r\n\r\n  svg#rocket-smoke {\r\n    height: calc(100vh - 95px);\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 180px;\r\n    z-index: -10;\r\n  }\r\n\r\n  a,\r\n  a:visited,\r\n  a:hover {\r\n    text-decoration: none;\r\n    padding: 10px;\r\n  }\r\n\r\n  a:hover {\r\n    color: #050505;\r\n  }\r\n\r\n  footer {\r\n    margin-top: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    line-height: 20px;\r\n  }\r\n\r\n  footer a {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  svg#clouds {\r\n    position: fixed;\r\n    bottom: -160px;\r\n    left: -230px;\r\n    z-index: -10;\r\n    width: 1920px;\r\n  }\r\n\r\n  /* Responsive Styles */\r\n  @media screen and (max-width: 767px) {\r\n    .card-container > *:not(.circle-link),\r\n    .terminal {\r\n      width: 100%;\r\n    }\r\n\r\n    .card:not(.highlight-card) {\r\n      height: 16px;\r\n      margin: 8px 0;\r\n    }\r\n\r\n    .card.highlight-card span {\r\n      margin-left: 72px;\r\n    }\r\n\r\n    svg#rocket-smoke {\r\n      right: 120px;\r\n      transform: rotate(-5deg);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 575px) {\r\n    svg#rocket-smoke {\r\n      display: none;\r\n      visibility: hidden;\r\n    }\r\n  }\r\n</style>\r\n<!-- fechas ahora estan puestas en el app component antes en listar datos\r\nvamos a hacer un cambio grande del programa para poder mandar los datos y que funcionen bien \r\nen el otro componente\r\n-->\r\n<mat-sidenav-container class=\"example-container\">\r\n  <mat-sidenav #sidenav mode=\"side\" [(opened)]=\"opened\">\r\n    <div class=\"p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir 2 fechas </mat-label>\r\n        <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n          <input\r\n            matStartDate\r\n            formControlName=\"start\"\r\n            placeholder=\"Start date\"\r\n          />\r\n          <input matEndDate formControlName=\"end\" placeholder=\"End date\" />\r\n        </mat-date-range-input>\r\n        <mat-datepicker-toggle\r\n          matIconSuffix\r\n          [for]=\"picker\"\r\n        ></mat-datepicker-toggle>\r\n        <mat-date-range-picker #picker>\r\n          <mat-date-range-picker-actions>\r\n            <button mat-button matDateRangePickerCancel>Cancel</button>\r\n            <button\r\n              mat-raised-button\r\n              color=\"primary\"\r\n              (click)=\"getFiltrados()\"\r\n              matDateRangePickerApply\r\n            >\r\n              Aplicar\r\n            </button>\r\n          </mat-date-range-picker-actions>\r\n        </mat-date-range-picker>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"p-3\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"valor\"\r\n        (ngSubmit)=\"getInRangeTabla()\"\r\n      >\r\n        <mat-form-field>\r\n          <mat-label>Elegir valor limite </mat-label>\r\n          <input matInput formControlName formControlName=\"threshold\" />\r\n        </mat-form-field>\r\n        <button\r\n          class=\"m-3\"\r\n          [disabled]=\"!range.value.start && !range.value.end\"\r\n          mat-raised-button\r\n          color=\"primary\"\r\n        >\r\n          Enviar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content class=\"fondo\">\r\n    <div class=\"toolbar\" *ngIf=\"isMenuRequired\" role=\"banner\">\r\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n\r\n      <a routerLink=\"/\">Graficos</a>\r\n      <!-- <a *ngIf=\"isAdminUser\" routerLink=\"/home2\">Pais form</a>\r\n    <a *ngIf=\"isAdminUser\" routerLink=\"/home\">Empresa form</a>\r\n    <a *ngIf=\"isAdminUser\" routerLink=\"/home3\">Linea form</a>\r\n    <a *ngIf=\"isAdminUser\" routerLink=\"/home4\">Variable form</a> -->\r\n      <a *ngIf=\"isAdminUser\" routerLink=\"/home5\">Formularios</a>\r\n      <a *ngIf=\"isAdminUser\" routerLink=\"/user\">Usuarios</a>\r\n      <div class=\"spacer\"></div>\r\n      <a style=\"cursor: pointer\" (click)=\"logOut()\">Logout</a>\r\n    </div>\r\n\r\n    <div class=\"content\" role=\"main\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </mat-sidenav-content>\r\n  <!-- Toolbar -->\r\n</mat-sidenav-container>\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\n\r\n// Import FusionCharts library and chart modules\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from 'src/material.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UpdatepopupComponent } from './components/updatepopup/updatepopup.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { PaisFormComponent } from './forms/pais-form/pais-form.component';\r\nimport { ProvinciaFormComponent } from './forms/provincia-form/provincia-form.component';\r\nimport { LocalidadFormComponent } from './forms/localidad-form/localidad-form.component';\r\nimport { EmpresaFormComponent } from './forms/empresa-form/empresa-form.component';\r\nimport { EmpresaPlantaFormComponent } from './forms/empresa-planta-form/empresa-planta-form.component';\r\nimport { MaquinaFormComponent } from './forms/maquina-form/maquina-form.component';\r\nimport { TipoMaquinaFormComponent } from './forms/tipo-maquina-form/tipo-maquina-form.component';\r\nimport { LineaProduccionFormComponent } from './forms/linea-produccion-form/linea-produccion-form.component';\r\nimport { ProcesoFormComponent } from './forms/proceso-form/proceso-form.component';\r\nimport { VariableFormComponent } from './forms/variable-form/variable-form.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { TriggerFormComponent } from './forms/trigger-form/trigger-form.component';\r\nimport { Home5Component } from './components/home5/home5.component';\r\nimport { TablaComponent } from './components/tabla/tabla.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { InterceptorService } from './service/interceptor.service';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListarDatosComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    UpdatepopupComponent,\r\n    UserlistingComponent,\r\n    PaisFormComponent,\r\n    ProvinciaFormComponent,\r\n    LocalidadFormComponent,\r\n    EmpresaFormComponent,\r\n    EmpresaPlantaFormComponent,\r\n    MaquinaFormComponent,\r\n    TipoMaquinaFormComponent,\r\n    LineaProduccionFormComponent,\r\n    ProcesoFormComponent,\r\n    VariableFormComponent,\r\n    TriggerFormComponent,\r\n    Home5Component,\r\n    TablaComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgxSpinnerModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: ['localhost'],\r\n      },\r\n    }),\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    ToastrModule.forRoot(),\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatStepper, StepperOrientation } from '@angular/material/stepper';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n  selector: 'app-home5',\r\n  templateUrl: './home5.component.html',\r\n  styleUrls: ['./home5.component.css'],\r\n})\r\nexport class Home5Component implements OnInit {\r\n  @ViewChild('stepper') stepper!: MatStepper;\r\n\r\n  isLinear = true;\r\n\r\n  paisForm!: FormGroup;\r\n  provinciaForm!: FormGroup;\r\n  localidadForm!: FormGroup;\r\n  empresaForm!: FormGroup;\r\n  plantaForm!: FormGroup;\r\n  tipoMaquinaForm!: FormGroup;\r\n  lineaProduccionForm!: FormGroup;\r\n  maquinaForm!: FormGroup;\r\n  procesoForm!: FormGroup;\r\n  triggerForm!: FormGroup;\r\n  timeout: any;\r\n  token: any;\r\n  isTrue: boolean = false;\r\n\r\n  isPaisCompleted: boolean = false;\r\n  isProvinciaCompleted: boolean = false;\r\n  isLocalidadCompleted: boolean = false;\r\n  isEmpresaCompleted: boolean = false;\r\n  isPlantaCompleted: boolean = false;\r\n  isTipoMaquinaCompleted: boolean = false;\r\n  isLineaProduccionCompleted: boolean = false;\r\n  isMaquinaCompleted: boolean = false;\r\n  isProcesoCompleted: boolean = false;\r\n  isTriggerCompleted: boolean = false;\r\n\r\n  subscription!: Subscription;\r\n  stepperOrientation: Observable<StepperOrientation>;\r\n\r\n  constructor(\r\n    private service: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    breakpointObserver: BreakpointObserver\r\n  ) {\r\n    this.stepperOrientation = breakpointObserver\r\n      .observe('(min-width: 800px)')\r\n      .pipe(map(({ matches }) => (matches ? 'horizontal' : 'vertical')));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.expirationCheck();\r\n    this.subscription = this.service.paisSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPaisCompleted = true;\r\n      } else {\r\n        this.isPaisCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.provinciaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProvinciaCompleted = true;\r\n      } else {\r\n        this.isProvinciaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLocalidadCompleted = true;\r\n      } else {\r\n        this.isLocalidadCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.empresaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isEmpresaCompleted = true;\r\n      } else {\r\n        this.isEmpresaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.plantaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPlantaCompleted = true;\r\n      } else {\r\n        this.isPlantaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.lineaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLineaProduccionCompleted = true;\r\n      } else {\r\n        this.isLineaProduccionCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => {\r\n        if (message != '') {\r\n          this.isTipoMaquinaCompleted = true;\r\n        } else {\r\n          this.isTipoMaquinaCompleted = false;\r\n        }\r\n      }\r\n    );\r\n    this.subscription = this.service.maquinaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isMaquinaCompleted = true;\r\n      } else {\r\n        this.isMaquinaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.procesoSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProcesoCompleted = true;\r\n      } else {\r\n        this.isProcesoCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.triggerSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isTriggerCompleted = true;\r\n      } else {\r\n        this.isTriggerCompleted = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.service.expirationCounter(this.timeout);\r\n  }\r\n}\r\n","<mat-stepper\r\n  [orientation]=\"(stepperOrientation | async)!\"\r\n  [linear]=\"isLinear\"\r\n  #stepper\r\n>\r\n  <mat-step [stepControl]=\"paisForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>País</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-pais-form></app-pais-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"provinciaForm\" *ngIf=\"isPaisCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Provincia</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-provincia-form></app-provincia-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"localidadForm\" *ngIf=\"isProvinciaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Localidad</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-localidad-form></app-localidad-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"empresaForm\" *ngIf=\"isLocalidadCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Empresa</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-empresa-form></app-empresa-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"plantaForm\" *ngIf=\"isEmpresaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Planta</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-empresa-planta-form></app-empresa-planta-form>\r\n  </mat-step>\r\n\r\n  <mat-step [stepControl]=\"lineaProduccionForm\" *ngIf=\"isPlantaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span\r\n          >Linea de produccion\r\n        </span>\r\n      </div>\r\n    </ng-template>\r\n    <app-linea-produccion-form></app-linea-produccion-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"tipoMaquinaForm\" *ngIf=\"isLineaProduccionCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Tipo de maquina </span>\r\n      </div>\r\n    </ng-template>\r\n    <app-tipo-maquina-form></app-tipo-maquina-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isTipoMaquinaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Maquina</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-maquina-form></app-maquina-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isMaquinaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Proceso</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-proceso-form></app-proceso-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isProcesoCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Trigger</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-trigger-form></app-trigger-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isTriggerCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Variable</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-variable-form></app-variable-form>\r\n  </mat-step>\r\n</mat-stepper>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { Chart, registerables } from 'node_modules/chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport {} from 'date-fns/locale';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { UtilsService } from 'src/app/service/utils.service';\r\nimport { Dato, RegistroFiltrado } from 'src/app/models/datos.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\n// import zoomPlugin from 'chartjs-plugin-zoom';\r\nChart.register(...registerables);\r\n\r\n@Component({\r\n  selector: 'app-listar-datos',\r\n  templateUrl: './listar-datos.component.html',\r\n  styleUrls: ['./listar-datos.component.css'],\r\n})\r\nexport class ListarDatosComponent implements OnInit, OnDestroy {\r\n  listDatos: any[] = [];\r\n  listDatos2: RegistroFiltrado[] = [];\r\n  listDatos3: any[] = [];\r\n  listVariables: any[] = [];\r\n  listCheckbox: any[] = [];\r\n  todayDate: Date = new Date();\r\n  sixMonthAgoDate!: Date;\r\n  dato!: Dato;\r\n  sensor_1: string = 'sensor 1';\r\n  sensor_2: string = 'sensor 2';\r\n  pulsador: string = 'Pulsador';\r\n  id: any = 0;\r\n  chart: any;\r\n  chart3: any;\r\n\r\n  title: string = 'Prueba angular';\r\n  timeout: any;\r\n  token: any;\r\n  subscription!: Subscription;\r\n  canvasBackgroundColor = {\r\n    id: 'canvasBackgroundColor',\r\n    beforeDraw(chart: any, args: any, pluginOptions: any) {\r\n      const {\r\n        ctx,\r\n        chartArea: { top, bottom, left, right, width },\r\n        scales: { x, y },\r\n      } = chart;\r\n      function bgColors(\r\n        bracketLow: number,\r\n        bracketHigh: number,\r\n        color: string\r\n      ) {\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(\r\n          left,\r\n          y.getPixelForValue(bracketHigh),\r\n          width,\r\n          y.getPixelForValue(bracketLow) - y.getPixelForValue(bracketHigh)\r\n        );\r\n      }\r\n      bgColors(26.5, 35, 'rgba(255, 26, 104, 0.2)');\r\n      bgColors(24, 26.5, 'rgba(75, 192, 192, 0.2)');\r\n      bgColors(0, 24, 'rgba(255, 206, 86, 0.2)');\r\n    },\r\n  };\r\n  decimation: any = {\r\n    id: 'decimation',\r\n    enabled: true,\r\n    algorithm: 'lttb',\r\n    samples: 100,\r\n    threshold: 50,\r\n  };\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private utils: UtilsService,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private spinnerService: SpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.addMonths(this.todayDate, -6);\r\n    this.getVariables();\r\n\r\n    this.chart = new Chart('myChart', {\r\n      type: 'line',\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            yAxisID: 'y',\r\n            data: [],\r\n          },\r\n          {\r\n            data: [],\r\n          },\r\n          {\r\n            yAxisID: 'second-y-axis',\r\n            data: [],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        // hay que arreglar esto para que funcione la data decimation\r\n        // Turn off animations and data parsing for performance\r\n        aspectRatio: 1,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        parsing: false,\r\n        plugins: {\r\n          decimation: this.decimation,\r\n        },\r\n        scales: {\r\n          y: {\r\n            type: 'linear',\r\n            beginAtZero: true,\r\n            ticks: {},\r\n            max: 35,\r\n            grid: {},\r\n          },\r\n          'second-y-axis': {\r\n            type: 'linear',\r\n            position: 'right',\r\n          },\r\n          x: {\r\n            type: 'time',\r\n\r\n            ticks: {\r\n              source: 'auto',\r\n              // Disabled rotation for performance\r\n              maxRotation: 0,\r\n              autoSkip: true,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      plugins: [this.canvasBackgroundColor],\r\n    });\r\n\r\n    this.chart3 = new Chart('myChart3', {\r\n      type: 'doughnut',\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n            borderColor: this.getDataColors(),\r\n            backgroundColor: this.getDataColors('20'),\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        plugins: {\r\n          legend: { position: 'left' },\r\n        },\r\n        maintainAspectRatio: false,\r\n      },\r\n    });\r\n    this.subscription = this._httpService.listaRegistroFiltrado.subscribe(\r\n      (message) => {\r\n        this.listDatos2 = message;\r\n        this.chart3.data.labels = this.listDatos2.map((x) => x._id);\r\n        this.chart3.data.datasets[0].data = this.listDatos2.map((x) => x.avg);\r\n        this.chart3.update();\r\n\r\n        //bar chart\r\n      }\r\n    );\r\n    this.expirationCheck();\r\n\r\n    this.subscription = this._httpService.listaRegistroFiltrado2.subscribe(\r\n      (message) => {\r\n        this.listDatos = message;\r\n        if (this.listDatos.length != 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n        this.chart.data.datasets[0].data = this.listDatos.map(\r\n          (x) =>\r\n            (this.dato = {\r\n              y: parseFloat(x.max.toFixed(2)),\r\n              x: new Date(x._id).getTime() + 10800000,\r\n            })\r\n        );\r\n        this.chart.data.datasets[1].data = this.listDatos.map(\r\n          (x) =>\r\n            (this.dato = {\r\n              y: parseFloat(x.min.toFixed(2)),\r\n              x: new Date(x._id).getTime() + 10800000,\r\n            })\r\n        );\r\n      }\r\n    );\r\n    this.subscription = this._httpService.listaDatos3.subscribe((message) => {\r\n      this.listDatos3 = message;\r\n\r\n      this.chart.data.datasets[2].data = this.listDatos3.map(\r\n        (x) =>\r\n          (this.dato = {\r\n            y: parseFloat(x.max.toFixed(2)),\r\n            x: new Date(x._id).getTime() + 10800000,\r\n          })\r\n      );\r\n      this.chart.update();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.id) {\r\n      clearInterval(this.id);\r\n    }\r\n  }\r\n\r\n  getRegistros() {\r\n    this._httpService\r\n      .getValores(this.listVariables[1]._id)\r\n      .subscribe((data) => {\r\n        this.listDatos = data['datos'];\r\n        this.chart.data.datasets[0].data = this.listDatos\r\n          .map(\r\n            (x) =>\r\n              (this.dato = {\r\n                y: parseFloat(x.max.toFixed(2)),\r\n                x: new Date(x._id).getTime() + 10800000,\r\n              })\r\n          )\r\n          .filter((x) => {\r\n            return x.x > new Date('2023-04-30').getTime();\r\n          });\r\n        this.chart.data.datasets[1].data = this.listDatos\r\n          .map(\r\n            (x) =>\r\n              (this.dato = {\r\n                y: parseFloat(x.min.toFixed(2)),\r\n                x: new Date(x._id).getTime() + 10800000,\r\n              })\r\n          )\r\n          .filter((x) => {\r\n            return x.x > new Date('2023-04-30').getTime();\r\n          });\r\n        this.chart.update();\r\n        console.log('datos: ', this.chart.data.datasets[0].data);\r\n      });\r\n    this._httpService\r\n      .getValores(this.listVariables[4]._id)\r\n      .subscribe((data) => {\r\n        this.listDatos3 = data['datos'];\r\n        this.chart.data.datasets[2].data = this.listDatos3\r\n          .map(\r\n            (x) =>\r\n              (this.dato = {\r\n                y: parseFloat(x.max.toFixed(2)),\r\n                x: new Date(x._id).getTime() + 10800000,\r\n              })\r\n          )\r\n          .filter((x) => {\r\n            return x.x > new Date('2023-04-30').getTime();\r\n          });\r\n        this.chart.update();\r\n        console.log('datos: ', this.chart.data.datasets[2].data);\r\n      });\r\n  }\r\n\r\n  makeCheckboxArray(value: any) {\r\n    let newValue = JSON.parse(value.source._value);\r\n    console.log('chip presionado', newValue);\r\n    if (value.selected == true) {\r\n      this.listCheckbox.push(newValue);\r\n    } else {\r\n      function desmarcar(valor: any) {\r\n        return value.source._value != valor;\r\n      }\r\n      this.listCheckbox = this.listCheckbox.filter((x) => desmarcar(x));\r\n    }\r\n    console.log(this.listCheckbox);\r\n  }\r\n  getVariables() {\r\n    this._httpService.getVariables().subscribe((data) => {\r\n      this._httpService.stream_Variables(data);\r\n      this.listVariables = data;\r\n      console.log(this.listVariables);\r\n      this.getRegistros();\r\n      this.chart.data.datasets[0].label = 'Pressione estrusione max';\r\n      this.chart.data.datasets[1].label = 'Pressione estrusione min';\r\n      this.chart.data.datasets[2].label = 'Corrente motore estrusore max';\r\n      this.getFiltrados();\r\n    });\r\n  }\r\n  getFiltrados() {\r\n    var inicio: any = this.sixMonthAgoDate.getTime().toString();\r\n    var final: any = this.todayDate.getTime().toString();\r\n    this._httpService\r\n      .getValoresFiltrados(this.listVariables[1]._id, inicio, final, 'max')\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this._httpService.stream_RegistroFiltrado(data['datos']);\r\n      });\r\n  }\r\n  getDaysInMonth = (year: number, month: number) =>\r\n    new Date(year, month, 0).getDate();\r\n\r\n  addMonths = (input: Date, months: number) => {\r\n    const date = new Date(input);\r\n    date.setDate(1);\r\n    date.setMonth(date.getMonth() + months);\r\n    date.setDate(\r\n      Math.min(\r\n        input.getDate(),\r\n        this.getDaysInMonth(date.getFullYear(), date.getMonth() + 1)\r\n      )\r\n    );\r\n    this.sixMonthAgoDate = date;\r\n  };\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.authService.expirationCounter(this.timeout);\r\n  }\r\n  getDataColors = (opacity?: String) => {\r\n    const colors = [\r\n      '#7448c2',\r\n      '#21c0d7',\r\n      '#d99e2b',\r\n      '#cd3a81',\r\n      '#9c99cc',\r\n      '#e14eca',\r\n      '#ffffff',\r\n      '#ff0000',\r\n      '#d6ff00',\r\n      '#0038ff',\r\n    ];\r\n    return colors.map((color) => (opacity ? `${color + opacity}` : color));\r\n  };\r\n}\r\n","<div class=\"grid grid-flow-row grid-cols-1 sm:grid-cols-1 p-3 fondo\">\r\n  <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2>Estrusione</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart\"></canvas>\r\n        <ngx-spinner\r\n          bdColor=\"rgba(51,51,51,0.8)\"\r\n          size=\"medium\"\r\n          color=\"#fff\"\r\n          type=\"ball-spin-clockwise\"\r\n          [fullScreen]=\"false\"\r\n          name=\"grafico\"\r\n        >\r\n        </ngx-spinner>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"grid grid-flow-row grid-cols-1 sm:grid-cols-2 p-3 fondo\">\r\n  <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2>Presión promedio por mes</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart3\"></canvas>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"p-3\">\r\n    <app-tabla></app-tabla>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  loginForm = this.builder.group({\r\n    username: this.builder.control('', Validators.required),\r\n    password: this.builder.control('', Validators.required),\r\n  });\r\n  userData: any;\r\n\r\n  proceedLogin() {\r\n    this.service.LogIn(this.loginForm.value).subscribe((res) => {\r\n      this.userData = res;\r\n      console.log(this.userData.status);\r\n      console.log(this.userData);\r\n      switch (this.userData.status) {\r\n        case 200:\r\n          if (this.userData['datos'].isActive) {\r\n            this.toastr.success('acceso concedido');\r\n            this.service.storeUserData(\r\n              this.userData.token,\r\n              this.userData['datos'],\r\n              this.userData.rtoken\r\n            );\r\n          } else {\r\n            this.toastr.error(\r\n              'Contactar con administrador',\r\n              'usuario inactivo'\r\n            );\r\n          }\r\n          break;\r\n        case 403:\r\n          this.toastr.error(\r\n            'Credenciales invalidas',\r\n            'usuario o contraseña incorrecta'\r\n          );\r\n          break;\r\n\r\n        default:\r\n          this.toastr.error(\r\n            'Credenciales invalidas',\r\n            'usuario o contraseña incorrecta'\r\n          );\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Login</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"loginForm\"\r\n      (ngSubmit)=\"proceedLogin()\"\r\n    >\r\n      <div class=\"flex flex-col p-5\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre de usuario</mat-label>\r\n          <input matInput formControlName=\"username\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Contraseña</mat-label>\r\n          <input type=\"password\" matInput formControlName=\"password\" />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Ingresar</button>\r\n        <a routerLink=\"/register\" mat-raised-button color=\"accent\"\r\n          >Nuevo usuario</a\r\n        >\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.minLength(5)])\r\n    ),\r\n    name: this.builder.control('', Validators.required),\r\n    password: this.builder.control(\r\n      '',\r\n      Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(\r\n          '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{8,}'\r\n        ),\r\n      ])\r\n    ),\r\n    email: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.email])\r\n    ),\r\n    role: this.builder.control('64f1f60e918724a5f931d909'),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  proceedRegistration() {\r\n    if (this.registerform.valid) {\r\n      console.log(this.registerform.value);\r\n      this.service.Proceedregister(this.registerform.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else if (res.status == 200) {\r\n            this.toastr.success(\r\n              'Solicitar acceso con el administrador ',\r\n              'Registro exitoso'\r\n            );\r\n            this.router.navigate(['login']);\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.toastr.warning('error', error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Registro</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"proceedRegistration()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre de usuario</mat-label>\r\n          <input matInput formControlName=\"username\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input matInput formControlName=\"name\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Contraseña</mat-label>\r\n          <input type=\"password\" matInput formControlName=\"password\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput formControlName=\"email\" />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Enviar</button>\r\n        <a routerLink=\"/login\" mat-raised-button color=\"accent\"\r\n          >Volver a pantalla de ingreso</a\r\n        >\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subscription } from 'rxjs';\nimport { CSVDato } from 'src/app/models/datos.model';\nimport { HttpService } from 'src/app/service/http.service';\nimport { SpinnerService } from 'src/app/service/spinner.service';\n\n@Component({\n  selector: 'app-tabla',\n  templateUrl: './tabla.component.html',\n  styleUrls: ['./tabla.component.css'],\n})\nexport class TablaComponent implements OnInit {\n  constructor(\n    private service: HttpService,\n    private spinnerService: SpinnerService\n  ) {}\n  exceedList: any = [];\n  dataSource: any;\n  listVariables: any = [];\n  subscription!: Subscription;\n  csv: any = '';\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  ngOnInit(): void {\n    this.subscription = this.service.listaDatosInRange.subscribe((message) => {\n      this.exceedList = message;\n\n      // console.log('prueba filter: ', this.removeDuplicates(this.exceedList));\n\n      this.dataSource = new MatTableDataSource(\n        this.removeDuplicates(this.exceedList)\n      );\n      if (this.exceedList.length != 0) {\n        this.spinnerService.detenerSpinner('tabla');\n      }\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  removeDuplicates(data: any) {\n    const ids = data.map(\n      ({ cTime_stamp }: { cTime_stamp: any }) => cTime_stamp\n    );\n    const filtered = data.filter(\n      ({ cTime_stamp }: { cTime_stamp: any }, index: number) =>\n        ids.includes(cTime_stamp, index + 1)\n    );\n\n    return filtered;\n  }\n  downloadCSV() {\n    let csvList: CSVDato[];\n    csvList = this.removeDuplicates(this.exceedList).map((e: any) => ({\n      valor_lectura: e.valor_lectura,\n      tiempo_inicio: e.time_stamp,\n      tiempo_fin: e.cTime_stamp,\n      diferencia: e.time,\n    }));\n\n    for (let row = 0; row < csvList.length; row++) {\n      let keysAmount = Object.keys(csvList[row]).length;\n      let keysCounter = 0;\n\n      // If this is the first row, generate the headings\n      if (row === 0) {\n        // Loop each property of the object\n        for (let key in csvList[row]) {\n          // This is to not add a comma at the last cell\n          // The '\\n' adds a new line\n          this.csv += key + (keysCounter + 1 < keysAmount ? ',' : '\\r\\n');\n          keysCounter++;\n        }\n      } else {\n        for (let key in csvList[row]) {\n          this.csv +=\n            csvList[row][key] + (keysCounter + 1 < keysAmount ? ',' : '\\r\\n');\n          keysCounter++;\n        }\n      }\n\n      keysCounter = 0;\n    }\n    console.log('csv: ', this.csv);\n    let link = document.createElement('a');\n    link.id = 'download-csv';\n    link.setAttribute(\n      'href',\n      'data:text/plain;charset=utf-8,' + encodeURIComponent(this.csv)\n    );\n    link.setAttribute('download', 'alertas_data.csv');\n    document.body.appendChild(link);\n    link.click();\n  }\n\n  displayedColumns: string[] = [\n    'exceed_value',\n    'tiempo_inicio',\n    'tiempo_fin',\n    'diferencia',\n  ];\n}\n","<mat-card class=\"mat-elevation-z8 carta\">\n  <div>\n    <mat-card-header class=\"flex justify-between\">\n      <h2>Alerta de valores excedidos</h2>\n      <button\n        [disabled]=\"exceedList.length == 0\"\n        mat-icon-button\n        (click)=\"downloadCSV()\"\n      >\n        <mat-icon>download</mat-icon>\n      </button>\n    </mat-card-header>\n  </div>\n\n  <mat-card-content>\n    <table mat-table matSort [dataSource]=\"dataSource\">\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"exceed_value\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>\n          Valor Excedido\n        </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.valor_lectura.toFixed(2) }}\n        </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"tiempo_inicio\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>\n          Tiempo de inicio\n        </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.time_stamp }}\n        </td>\n      </ng-container>\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"tiempo_fin\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>Tiempo de fin</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.cTime_stamp }}\n        </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"diferencia\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>\n          Diferencia en tiempo\n        </th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.time }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n    <mat-paginator\n      [pageSizeOptions]=\"[5, 10, 20]\"\n      showFirstLastButtons\n      aria-label=\"Select page of periodic elements\"\n    >\n    </mat-paginator>\n    <ngx-spinner\n      bdColor=\"rgba(51,51,51,0.8)\"\n      size=\"medium\"\n      color=\"#fff\"\n      type=\"ball-spin-clockwise\"\n      [fullScreen]=\"false\"\n      name=\"tabla\"\n    >\n    </ngx-spinner>\n  </mat-card-content>\n</mat-card>\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-updatepopup',\r\n  templateUrl: './updatepopup.component.html',\r\n  styleUrls: ['./updatepopup.component.css'],\r\n})\r\nexport class UpdatepopupComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private service: AuthService,\r\n    private toastr: ToastrService,\r\n    private dialog: MatDialogRef<UpdatepopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  editData: any;\r\n\r\n  ngOnInit(): void {\r\n    this.service.GetAllRoles().subscribe((res) => {\r\n      console.log('roles', res);\r\n      this.rolelist = res;\r\n    });\r\n    if (this.data.username != null && this.data.username != '') {\r\n      this.service.GetById(this.data.username).subscribe((res) => {\r\n        this.editData = res;\r\n        this.registerform.setValue({\r\n          username: this.editData.username,\r\n          name: this.editData.name,\r\n          password: this.editData.password,\r\n          email: this.editData.email,\r\n          role: this.editData.role,\r\n          isActive: this.editData.isActive,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  rolelist: any;\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(''),\r\n    name: this.builder.control(''),\r\n    password: this.builder.control(''),\r\n    email: this.builder.control(''),\r\n    role: this.builder.control('', Validators.required),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  updateUser() {\r\n    if (this.registerform.valid) {\r\n      this.service\r\n        .UpdateUser(this.registerform.value.username, this.registerform.value)\r\n        .subscribe((res) => {\r\n          this.toastr.success('Updated successfully');\r\n          this.dialog.close();\r\n        });\r\n    } else {\r\n      this.toastr.warning('Please select a role');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Update User</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"updateUser()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Role</mat-label>\r\n          <mat-select formControlName=\"role\">\r\n            <mat-option value=\"\">Select Role </mat-option>\r\n            <mat-option *ngFor=\"let item of rolelist\" [value]=\"item._id\">\r\n              {{ item.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-checkbox formControlName=\"isActive\">Is Active? </mat-checkbox>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Update</button>\r\n        <a mat-dialog-close mat-raised-button color=\"accent\">Close</a>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { UpdatepopupComponent } from '../updatepopup/updatepopup.component';\r\n\r\n@Component({\r\n  selector: 'app-userlisting',\r\n  templateUrl: './userlisting.component.html',\r\n  styleUrls: ['./userlisting.component.css'],\r\n})\r\nexport class UserlistingComponent {\r\n  constructor(private service: AuthService, private dialog: MatDialog) {\r\n    this.LoadUser();\r\n  }\r\n\r\n  userList: any;\r\n  dataSource: any;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  LoadUser() {\r\n    this.service.GetAll().subscribe((res) => {\r\n      this.userList = res;\r\n      this.dataSource = new MatTableDataSource(this.userList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  UpdateUser(username: any) {\r\n    const popup = this.dialog.open(UpdatepopupComponent, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '50%',\r\n      data: {\r\n        username: username,\r\n      },\r\n    });\r\n    popup.afterClosed().subscribe((res) => {\r\n      this.LoadUser();\r\n    });\r\n  }\r\n  displayedColumns: string[] = [\r\n    'username',\r\n    'name',\r\n    'email',\r\n    'status',\r\n    'role',\r\n    'action',\r\n  ];\r\n\r\n  opendialog() {}\r\n}\r\n","<div class=\"mat-elevation-z8 carta\">\r\n  <table mat-table matSort [dataSource]=\"dataSource\">\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"username\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>User name</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.username }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>Name</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"email\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>email</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"role\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>Role</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.role.name === \"\" ? \"Unassigned\" : element.role.name }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"status\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>Status</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.isActive ? \"Active\" : \"Inactive\" }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef>Action</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <a\r\n          (click)=\"UpdateUser(element.username)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          >Update</a\r\n        >\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    showFirstLastButtons\r\n    aria-label=\"Select page of periodic elements\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthService } from './service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  rtoken_url = environment.API_URL_RTOKEN;\r\n  rBody = {\r\n    token: sessionStorage.getItem('rtoken')?.toString(),\r\n    user: sessionStorage.getItem('username')?.toString(),\r\n  };\r\n  resData: any;\r\n  timeout: any;\r\n  token: any;\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  refreshToken(): void {\r\n    this.authService.postForm(this.rtoken_url, this.rBody).subscribe((res) => {\r\n      this.resData = res.body;\r\n      console.log(\r\n        'refresh token: ',\r\n        this.rBody,\r\n        'access Token: ',\r\n        this.resData\r\n      );\r\n      console.log('status code: ', res.status);\r\n      this.token = this.resData.accessToken;\r\n      sessionStorage.setItem('token', this.resData.accessToken);\r\n      sessionStorage.setItem('rtoken', this.resData.refreshToken);\r\n      this.timeout =\r\n        this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n        new Date().valueOf();\r\n      this.authService.expirationCounter(this.timeout);\r\n      if (res.status == 200) {\r\n        this.toastr.success('sesion extendida');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Sesion a punto de exipirar</h1>\r\n<div mat-dialog-content>\r\n  <p>Desea continuar con su sesion?</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No</button>\r\n  <button\r\n    class=\"m-3\"\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    mat-button\r\n    (click)=\"refreshToken()\"\r\n    [mat-dialog-close]\r\n    cdkFocusInitial\r\n  >\r\n    De acuerdo\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-empresa-form',\r\n  templateUrl: './empresa-form.component.html',\r\n  styleUrls: ['./empresa-form.component.css'],\r\n})\r\nexport class EmpresaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listLocalidades: any;\r\n  listEmpresas: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlantas = environment.API_URL_PLANTA;\r\n  isOptional = true;\r\n  id_localidad!: string;\r\n  id_empresa!: string;\r\n  empresaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLocalidades();\r\n    this.empresaForm = this.builder.group({\r\n      razon_social: this.builder.control('', Validators.required),\r\n      nombre_fantasia: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n      piso: this.builder.control('', Validators.required),\r\n      deptartamento: this.builder.control('', Validators.required),\r\n      rubro: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.listEmpresas.subscribe(\r\n      (message) => (this.listEmpresas = message)\r\n    );\r\n  }\r\n\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createEmpresa() {\r\n    if (this.empresaForm.valid) {\r\n      console.log(this.empresaForm.value);\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        razon_social: this.empresaForm.value.razon_social,\r\n        nombre_fantasia: this.empresaForm.value.nombre_fantasia,\r\n        calle: this.empresaForm.value.calle,\r\n        altura: this.empresaForm.value.altura,\r\n        piso: this.empresaForm.value.piso,\r\n        deptartamento: this.empresaForm.value.deptartamento,\r\n        rubro: this.empresaForm.value.rubro,\r\n      };\r\n      this.service.postForm(this.apiEmpresas, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Empresa registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n              .subscribe((res: any) => {\r\n                console.log('empresas res after crear: ', res);\r\n                this.listEmpresas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarEmpresa(id: string) {\r\n    console.log(this.apiEmpresas + id);\r\n    this.service.deleteForm(this.apiEmpresas, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Empresa borrada correctamente');\r\n          this.GetAllEmpresas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setEmpresa(id: any, nombre: any) {\r\n    console.log('set empresa', id, 'nombre', nombre);\r\n    this.id_empresa = id;\r\n    this.service.changeMessage(id);\r\n    this.service.empresaSelectedSource.next(id);\r\n    this.GetPlantasByEmpresas();\r\n  }\r\n\r\n  GetPlantasByEmpresas() {\r\n    this.service\r\n      .getForm(this.apiPlantas + this.id_empresa)\r\n      .subscribe((res: any) => {\r\n        console.log('empresa get plantas', res);\r\n        this.service.streamPlantas_EmpresaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Empresa</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Lista de Empresas </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"empresaForm\"\r\n            (ngSubmit)=\"createEmpresa()\"\r\n            (submit)=\"empresaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Razon Social</mat-label>\r\n              <input matInput formControlName=\"razon_social\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre Fantasia</mat-label>\r\n              <input matInput formControlName=\"nombre_fantasia\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Piso</mat-label>\r\n              <input matInput formControlName=\"piso\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Deptartamento</mat-label>\r\n              <input matInput formControlName=\"deptartamento\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Rubro</mat-label>\r\n              <input matInput formControlName=\"rubro\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Empresa </mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let empresa of listEmpresas\"\r\n            [value]=\"empresa._id\"\r\n            (click)=\"[setEmpresa(empresa._id, empresa.razon_social)]\"\r\n          >\r\n            <p>{{ empresa.razon_social }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-list role=\"list\" *ngFor=\"let empresa of listEmpresas\">\r\n              <mat-list-item role=\"listitem\">\r\n                {{ empresa.nombre_fantasia }}\r\n                <a\r\n                  (click)=\"borrarEmpresa(empresa._id)\"\r\n                  class=\"m-3\"\r\n                  mat-raised-button\r\n                  color=\"warn\"\r\n                >\r\n                  eliminar\r\n                </a>\r\n              </mat-list-item>\r\n            </mat-list> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-empresa-planta-form',\r\n  templateUrl: './empresa-planta-form.component.html',\r\n  styleUrls: ['./empresa-planta-form.component.css'],\r\n})\r\nexport class EmpresaPlantaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listEmpresas: any;\r\n  listLocalidades: any;\r\n  listPlantas: any;\r\n  id_empresa!: string;\r\n  id_localidad!: string;\r\n  id_planta!: string;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  isOptional = true;\r\n  plantaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLocalidades();\r\n    this.GetAllEmpresas();\r\n    this.plantaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.listPlantas.subscribe(\r\n      (message) => (this.listPlantas = message)\r\n    );\r\n    this.subscription = this.service.empresaSelected.subscribe(\r\n      (message) => (this.id_empresa = message)\r\n    );\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n  }\r\n\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createPlanta() {\r\n    if (this.plantaForm.valid) {\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        id_empresa: this.id_empresa,\r\n        nombre: this.plantaForm.value.nombre,\r\n        calle: this.plantaForm.value.calle,\r\n        altura: this.plantaForm.value.altura,\r\n      };\r\n      console.log(this.plantaForm.value);\r\n      this.service.postForm(this.apiPlanta, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else {\r\n            this.toastr.success('Planta registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiPlanta + this.id_empresa)\r\n              .subscribe((res: any) => {\r\n                this.listPlantas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarPlanta(id: string) {\r\n    console.log(this.apiPlanta + id);\r\n    this.service.deleteForm(this.apiPlanta, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Planta borrada correctamente');\r\n          this.GetAllPlantas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setPlanta(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_planta = id;\r\n    this.service.plantaSelectedSource.next(id);\r\n    this.GetLineaByPlanta();\r\n  }\r\n\r\n  GetLineaByPlanta() {\r\n    this.service\r\n      .getForm(this.apiLinea + this.id_planta)\r\n      .subscribe((res: any) => {\r\n        console.log('planta get lineas', res);\r\n        this.service.streamLinea_PlantaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Empresa</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>Formulario de Plantas de empresa</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"plantaForm\"\r\n            (ngSubmit)=\"createPlanta()\"\r\n            (submit)=\"plantaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una planta</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let planta of listPlantas\"\r\n            [value]=\"planta._id\"\r\n            (click)=\"[setPlanta(planta._id, planta.nombre)]\"\r\n          >\r\n            <p>{{ planta.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-linea-produccion-form',\r\n  templateUrl: './linea-produccion-form.component.html',\r\n  styleUrls: ['./linea-produccion-form.component.css'],\r\n})\r\nexport class LineaProduccionFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPlantas: any;\r\n  listLineas: any;\r\n  id_empresa_planta!: string;\r\n  id_linea!: string;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  lineaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPlantas();\r\n    this.lineaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n      identificador: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.listLineas.subscribe(\r\n      (message) => (this.listLineas = message)\r\n    );\r\n    this.subscription = this.service.plantaSelected.subscribe(\r\n      (message) => (this.id_empresa_planta = message)\r\n    );\r\n  }\r\n\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLinea() {\r\n    if (this.lineaForm.valid) {\r\n      console.log(this.lineaForm.value);\r\n      let body = {\r\n        id_empresa_planta: this.id_empresa_planta,\r\n        nombre: this.lineaForm.value.nombre,\r\n        descripcion: this.lineaForm.value.descripcion,\r\n        identificador: this.lineaForm.value.identificador,\r\n      };\r\n      this.service.postForm(this.apiLinea, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Linea de produccion registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiLinea + this.id_empresa_planta)\r\n              .subscribe((res: any) => {\r\n                this.listLineas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLineaProduccion(id: string) {\r\n    console.log(this.apiLinea + id);\r\n    this.service.deleteForm(this.apiLinea, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Linea de produccion borrada correctamente');\r\n          this.GetAllLineas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLinea(id: any, nombre: any) {\r\n    console.log('set linea', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_linea = id;\r\n    this.service.lineaSelectedSource.next(id);\r\n    this.GetMaquinaByLinea();\r\n  }\r\n\r\n  GetMaquinaByLinea() {\r\n    this.service\r\n      .getForm(this.apiMaquina + this.id_linea)\r\n      .subscribe((res: any) => {\r\n        console.log('linea get maquinas', res);\r\n        this.service.streamMaquinas_LineaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario Linea de produccion</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              Formulario de Linea de produccion\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"lineaForm\"\r\n            (ngSubmit)=\"createLinea()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>identificador</mat-label>\r\n              <input matInput formControlName=\"identificador\" />\r\n            </mat-form-field>\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Linea</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let linea of listLineas\"\r\n            [value]=\"linea._id\"\r\n            (click)=\"[setLinea(linea._id, linea.nombre)]\"\r\n          >\r\n            <p>{{ linea.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllLineas()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Lista de Lineas de produccion </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let linea of listLineas\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ linea.descripcion }}\r\n        <a\r\n          (click)=\"borrarLineaProduccion(linea._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-localidad-form',\r\n  templateUrl: './localidad-form.component.html',\r\n  styleUrls: ['./localidad-form.component.css'],\r\n})\r\nexport class LocalidadFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listProvincias: any;\r\n  listLocalidades: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiProvincias = environment.API_URL_PROVINCIAS;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  isOptional = true;\r\n  id_provincia!: string;\r\n  id_localidad!: string;\r\n  localidadForm!: FormGroup;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllProvincias();\r\n    this.localidadForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n    this.subscription2 = this.service.listLocalidades.subscribe(\r\n      (message) => (this.listLocalidades = message)\r\n    );\r\n  }\r\n\r\n  GetAllProvincias() {\r\n    this.service.getForm(this.apiProvincias).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProvincias = res['datos'];\r\n    });\r\n  }\r\n  //no esta en uso\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLocalidad() {\r\n    if (this.localidadForm.valid) {\r\n      console.log(this.localidadForm.value);\r\n      let body = {\r\n        nombre: this.localidadForm.value.nombre,\r\n        id_provincia: this.id_provincia,\r\n      };\r\n      this.service.postForm(this.apiLocalidad, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Localidad registrada correctamente');\r\n            this.service\r\n              .getForm(this.apiLocalidad + this.id_provincia)\r\n              .subscribe((res: any) => {\r\n                this.listLocalidades = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLocalidad(id: string) {\r\n    console.log(this.apiLocalidad + id);\r\n    this.service.deleteForm(this.apiLocalidad, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Localidad borrada correctamente');\r\n          this.GetAllLocalidades();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLocalidad(id: any, nombre: any) {\r\n    console.log('set localidad', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.service.localidadSelectedSource.next(id);\r\n\r\n    this.GetEmpresasByLocalidad();\r\n  }\r\n\r\n  GetEmpresasByLocalidad() {\r\n    this.service\r\n      .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n      .subscribe((res: any) => {\r\n        console.log('Localidad-form get empresas', res);\r\n        this.service.streamEmpresas_LocalidadSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Localidad</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>Formulario de Localidades</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"localidadForm\"\r\n            (ngSubmit)=\"createLocalidad()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre de Localidad</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label> Elegir una Localidad </mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let localidad of listLocalidades\"\r\n            [value]=\"localidad._id\"\r\n            (click)=\"[setLocalidad(localidad._id, localidad.nombre)]\"\r\n          >\r\n            <p>{{ localidad.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-maquina-form',\r\n  templateUrl: './maquina-form.component.html',\r\n  styleUrls: ['./maquina-form.component.css'],\r\n})\r\nexport class MaquinaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listLineas: any;\r\n  listTipoMaquina: any;\r\n  listMaquinas: any;\r\n  message: any;\r\n  id_linea_produccion!: string;\r\n  id_tipo_maquina!: string;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  maquinaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLineas();\r\n    this.GetAllTipos();\r\n\r\n    this.maquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      marca: this.builder.control('', Validators.required),\r\n      modelo: this.builder.control('', Validators.required),\r\n      detalle: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.currentMessage.subscribe(\r\n      (message) => (this.message = message)\r\n    );\r\n    this.subscription = this.service.listMaquinas.subscribe(\r\n      (message) => (this.listMaquinas = message)\r\n    );\r\n    this.subscription = this.service.lineaSelected.subscribe(\r\n      (message) => (this.id_linea_produccion = message)\r\n    );\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => (this.id_tipo_maquina = message)\r\n    );\r\n  }\r\n\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n  GetAllTipos() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquinas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createMaquina() {\r\n    if (this.maquinaForm.valid) {\r\n      console.log(this.maquinaForm.value);\r\n      let body = {\r\n        id_linea_produccion: this.id_linea_produccion,\r\n        id_tipo_maquina: this.id_tipo_maquina,\r\n        nombre: this.maquinaForm.value.nombre,\r\n        marca: this.maquinaForm.value.marca,\r\n        modelo: this.maquinaForm.value.modelo,\r\n        detalle: this.maquinaForm.value.detalle,\r\n      };\r\n      this.service.postForm(this.apiMaquina, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Maquina registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiMaquina + this.id_linea_produccion)\r\n              .subscribe((res: any) => {\r\n                console.log('res maquina: ', res);\r\n                this.listMaquinas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarMaquina(id: string) {\r\n    console.log(this.apiMaquina + id);\r\n    this.service.deleteForm(this.apiMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Maquina borrada correctamente');\r\n          this.GetAllMaquinas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setMaquina(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamMaquinaSelected(maquina_id: string) {\r\n    this.service.streamMaquinaSelected(maquina_id);\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario Maquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header hideToggle>\r\n            <mat-panel-title>Formulario de maquinas</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"maquinaForm\"\r\n            (ngSubmit)=\"createMaquina()\"\r\n            (submit)=\"maquinaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Marca</mat-label>\r\n              <input matInput formControlName=\"marca\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Modelo</mat-label>\r\n              <input matInput formControlName=\"modelo\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Detalle</mat-label>\r\n              <input matInput formControlName=\"detalle\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una maquina</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let maquina of listMaquinas\"\r\n            [value]=\"maquina._id\"\r\n            (click)=\"\r\n              [\r\n                setMaquina(maquina._id, maquina.nombre),\r\n                StreamMaquinaSelected(maquina._id)\r\n              ]\r\n            \"\r\n          >\r\n            <p>{{ maquina.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllMaquinas()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Lista de tipos de maquina </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let maquina of listMaquinas\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ maquina.nombre }}\r\n        <a\r\n          (click)=\"borrarMaquina(maquina._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-pais-form',\r\n  templateUrl: './pais-form.component.html',\r\n  styleUrls: ['./pais-form.component.css'],\r\n})\r\nexport class PaisFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  isOptional = true;\r\n  paisForm!: FormGroup;\r\n  id_pais!: string;\r\n  message2!: any;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  completed: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPaises();\r\n    this.paisForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.id_pais = message)\r\n    );\r\n  }\r\n  urlPaises = environment.API_URL_PAISES;\r\n\r\n  GetAllPaises() {\r\n    this.service.getForm(this.apiPaises).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPaises = res['datos'];\r\n    });\r\n  }\r\n  createPais() {\r\n    if (this.paisForm.valid) {\r\n      console.log(this.paisForm.value);\r\n      this.service.postForm(this.urlPaises, this.paisForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Pais registrado correctamente');\r\n            this.GetAllPaises();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarPais(id: string) {\r\n    console.log(this.urlPaises + id);\r\n    this.service.deleteForm(this.urlPaises, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Pais borrado correctamente');\r\n          this.GetAllPaises();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setPais(id: any, nombre: any) {\r\n    console.log('set pais', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.service.paisSelectedSource.next(id);\r\n    this.GetProvinciasByPais();\r\n  }\r\n\r\n  GetProvinciasByPais() {\r\n    console.log('pais nombre', this.id_pais);\r\n\r\n    this.service\r\n      .getForm(this.apiProvincia + this.id_pais)\r\n      .subscribe((res: any) => {\r\n        console.log('pais form get provincias', res);\r\n        this.service.streamProvincias_PaisSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta mat-elevation-z\">\r\n  <mat-card-header>\r\n    <h2>Formulario de país</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Formulario de pais </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"paisForm\"\r\n            (ngSubmit)=\"createPais()\"\r\n            (submit)=\"paisForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre de pais</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un pais</mat-label>\r\n\r\n        <mat-select (click)=\"GetAllPaises()\" (selectionChange)=\"(!completed)\">\r\n          <mat-option\r\n            *ngFor=\"let pais of listPaises\"\r\n            [value]=\"pais._id\"\r\n            (click)=\"[setPais(pais._id, pais.nombre)]\"\r\n          >\r\n            <p>{{ pais.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-proceso-form',\r\n  templateUrl: './proceso-form.component.html',\r\n  styleUrls: ['./proceso-form.component.css'],\r\n})\r\nexport class ProcesoFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  procesoForm!: FormGroup;\r\n  listProceso: any;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllProcesos();\r\n    this.procesoForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProceso = res['datos'];\r\n    });\r\n  }\r\n\r\n  crearProceso() {\r\n    if (this.procesoForm.valid) {\r\n      console.log(this.procesoForm.value);\r\n      this.service.postForm(this.apiProceso, this.procesoForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('proceso registrado correctamente');\r\n            this.GetAllProcesos();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarProcesos(id: string) {\r\n    console.log(this.apiProceso + id);\r\n    this.service.deleteForm(this.apiProceso, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Proceso borrado correctamente');\r\n          this.GetAllProcesos();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setProceso(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamProcesoSelected(proceso_id: string) {\r\n    this.service.streamProcesoSelected(proceso_id);\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de proceso</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>Formulario de Proceso</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"procesoForm\"\r\n            (ngSubmit)=\"crearProceso()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre del proceso</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Descripcion del proceso</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un proceso</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let proceso of listProceso\"\r\n            [value]=\"proceso._id\"\r\n            (click)=\"\r\n              [\r\n                setProceso(proceso._id, proceso.nombre),\r\n                StreamProcesoSelected(proceso._id)\r\n              ]\r\n            \"\r\n          >\r\n            <p>{{ proceso.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext>Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllProcesos()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Listado de procesos </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let proceso of listProceso\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ proceso.descripcion }}\r\n        <a\r\n          (click)=\"borrarProcesos(proceso._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-provincia-form',\r\n  templateUrl: './provincia-form.component.html',\r\n  styleUrls: ['./provincia-form.component.css'],\r\n})\r\nexport class ProvinciaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  listProvincias: any;\r\n  listProvinciasPais: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  isOptional = true;\r\n  provinciaForm!: FormGroup;\r\n  id_pais!: string;\r\n  id_provincia!: string;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPaises();\r\n    this.provinciaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.id_pais = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n\r\n    this.subscription2 = this.service.listProvincias.subscribe(\r\n      (message) => (this.listProvinciasPais = message)\r\n    );\r\n  }\r\n\r\n  GetAllPaises() {\r\n    this.service.getForm(this.apiPaises).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPaises = res['datos'];\r\n    });\r\n  }\r\n  // no esta en uso\r\n  GetAllProvincias() {\r\n    this.service.getForm(this.apiProvincia).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.listProvincias = res['datos'];\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  createProvincia() {\r\n    if (this.provinciaForm.valid) {\r\n      console.log(this.provinciaForm.value);\r\n      let body = {\r\n        nombre: this.provinciaForm.value.nombre,\r\n        id_pais: this.id_pais,\r\n      };\r\n      this.service.postForm(this.apiProvincia, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 200) {\r\n            this.toastr.success('provincia registrada correctamente');\r\n            this.service\r\n              .getForm(this.apiProvincia + this.id_pais)\r\n              .subscribe((res: any) => {\r\n                this.listProvinciasPais = res;\r\n              });\r\n          } else if (res.status == 403) {\r\n            this.toastr.warning('acceso denegado, token expirado');\r\n          } else {\r\n            this.toastr.warning(res.error.error);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarProvincia(id: string) {\r\n    console.log(this.apiProvincia + id);\r\n    this.service.deleteForm(this.apiProvincia, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Provincia borrada correctamente');\r\n          this.GetAllProvincias();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setProvincia(id: any, nombre: any) {\r\n    console.log('set provincia', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.service.provinciaSelectedSource.next(id);\r\n    this.GetLocalidadesByProvincia();\r\n  }\r\n\r\n  GetLocalidadesByProvincia() {\r\n    this.service\r\n      .getForm(this.apiLocalidad + this.id_provincia)\r\n      .subscribe((res: any) => {\r\n        console.log('provincia form get localidades', res);\r\n\r\n        this.service.streamLocalides_ProvinciaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Provincia</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Formulario de provincias </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"provinciaForm\"\r\n            (ngSubmit)=\"createProvincia()\"\r\n            (submit)=\"provinciaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre de provincia</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Provincia</mat-label>\r\n\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let provincia of listProvinciasPais\"\r\n            [value]=\"provincia._id\"\r\n            (click)=\"[setProvincia(provincia._id, provincia.nombre)]\"\r\n          >\r\n            <p>{{ provincia.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-tipo-maquina-form',\r\n  templateUrl: './tipo-maquina-form.component.html',\r\n  styleUrls: ['./tipo-maquina-form.component.css'],\r\n})\r\nexport class TipoMaquinaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  listTipoMaquina: any;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  isOptional = true;\r\n  tipoMaquinaForm!: FormGroup;\r\n  pais: any;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTiposMaquina();\r\n    this.tipoMaquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  createTipoMaquina() {\r\n    if (this.tipoMaquinaForm.valid) {\r\n      console.log(this.tipoMaquinaForm.value);\r\n      this.service\r\n        .postForm(this.apiTipoMaquina, this.tipoMaquinaForm.value)\r\n        .subscribe({\r\n          next: (res: any) => {\r\n            console.log('respuesta: ', res);\r\n            if (res.status == 500) {\r\n              this.toastr.warning(res.error.error);\r\n            } else {\r\n              this.toastr.success('Tipo de maquina registrada correctamente');\r\n              this.GetAllTiposMaquina();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.toastr.error(error);\r\n            console.log(error);\r\n          },\r\n        });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  GetAllTiposMaquina() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n\r\n  borrarTipoMaquina(id: string) {\r\n    console.log(this.apiTipoMaquina + id);\r\n    this.service.deleteForm(this.apiTipoMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Tipo de maquina borrada correctamente');\r\n          this.GetAllTiposMaquina();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTipo(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamTipoSelected(tipo_id: string) {\r\n    this.service.streamTipoSelected(tipo_id);\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario Tipo Maquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Formulario de Tipo de maquina </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"tipoMaquinaForm\"\r\n            (ngSubmit)=\"createTipoMaquina()\"\r\n            (submit)=\"tipoMaquinaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un Tipo de maquina</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let tipo of listTipoMaquina\"\r\n            [value]=\"tipo._id\"\r\n            (click)=\"\r\n              [setTipo(tipo._id, tipo.nombre), StreamTipoSelected(tipo._id)]\r\n            \"\r\n          >\r\n            <p>{{ tipo.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllTiposMaquina()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Lista de tipos de maquina </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let tipoMaquina of listTipoMaquina\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ tipoMaquina.descripcion }}\r\n        <a\r\n          (click)=\"borrarTipoMaquina(tipoMaquina._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-trigger-form',\r\n  templateUrl: './trigger-form.component.html',\r\n  styleUrls: ['./trigger-form.component.css'],\r\n})\r\nexport class TriggerFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  triggerForm!: FormGroup;\r\n  listTriggers: any;\r\n  trigger_descripcion!: string;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTriggers();\r\n    this.triggerForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTriggers = res;\r\n    });\r\n  }\r\n\r\n  crearTrigger() {\r\n    if (this.triggerForm.valid) {\r\n      console.log(this.triggerForm.value);\r\n      this.service.postForm(this.apiTrigger, this.triggerForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Trigger registrado correctamente');\r\n            this.GetAllTriggers();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarTrigger(id: string) {\r\n    console.log(this.apiTrigger + id);\r\n    this.service.deleteForm(this.apiTrigger, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Trigger borrado correctamente');\r\n          this.GetAllTriggers();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTrigger(id: any, nombre: any, descripcion: string) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.trigger_descripcion = descripcion;\r\n  }\r\n\r\n  StreamTriggerSelected(trigger_id: string) {\r\n    this.service.streamTriggerSelected(trigger_id);\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Trigger</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un Trigger</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let trigger of listTriggers\">\r\n            <mat-option\r\n              [value]=\"trigger._id\"\r\n              (click)=\"\r\n                [\r\n                  setTrigger(trigger._id, trigger.nombre, trigger.descripcion),\r\n                  StreamTriggerSelected(trigger._id)\r\n                ]\r\n              \"\r\n            >\r\n              <p>{{ trigger.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ trigger.descripcion }}\r\n            </p>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext>Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllTriggers()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Listado de triggers</mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let trigger of listTriggers\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ trigger.nombre }}\r\n        <a\r\n          (click)=\"borrarTrigger(trigger._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-variable-form',\r\n  templateUrl: './variable-form.component.html',\r\n  styleUrls: ['./variable-form.component.css'],\r\n})\r\nexport class VariableFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiVariables = environment.API_URL_VARIABLES;\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  apiMaquinas = environment.API_URL_MAQUINA;\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  variableForm!: FormGroup;\r\n  id_maquina: any;\r\n  id_proceso: any;\r\n  id_trigger: any;\r\n  listProcesos: any;\r\n  listMaquina: any;\r\n  listTrigger: any;\r\n  listaVariables: any;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllVariables();\r\n    this.GetAllProcesos();\r\n    this.GetAllMaquinas();\r\n    this.GetAllTriggers();\r\n    this.variableForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control(''),\r\n      trigger_valor: this._formBuilder.control(''),\r\n    });\r\n    this.subscription = this.service.maquinaSelected.subscribe(\r\n      (message) => (this.id_maquina = message)\r\n    );\r\n    this.subscription = this.service.procesoSelected.subscribe(\r\n      (message) => (this.id_proceso = message)\r\n    );\r\n    this.subscription = this.service.triggerSelected.subscribe(\r\n      (message) => (this.id_trigger = message)\r\n    );\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProcesos = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquinas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTrigger = res;\r\n    });\r\n  }\r\n  GetAllVariables() {\r\n    this.service.getForm(this.apiVariables).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listaVariables = res;\r\n    });\r\n  }\r\n\r\n  crearVariable() {\r\n    if (this.variableForm.valid) {\r\n      console.log(this.variableForm.value);\r\n      let body = {\r\n        id_maquina: this.id_maquina,\r\n        id_proceso: this.id_proceso,\r\n        id_trigger: this.id_trigger,\r\n        nombre: this.variableForm.value.nombre,\r\n        trigger_valor: this.variableForm.value.trigger_valor,\r\n      };\r\n      this.service.postForm(this.apiVariables, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Variable registrada correctamente');\r\n            this.GetAllVariables();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor ingrese datos validos');\r\n    }\r\n  }\r\n\r\n  borrarVariable(id: string) {\r\n    console.log(this.apiVariables + id);\r\n    this.service.deleteForm(this.apiVariables, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Variable borrada correctamente');\r\n          this.GetAllVariables();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Variables</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"variableForm\"\r\n      (ngSubmit)=\"crearVariable()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>nombre de la variable </mat-label>\r\n          <input matInput formControlName=\"nombre\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>descripcion de la variable </mat-label>\r\n          <input matInput formControlName=\"descripcion\" />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"\">\r\n          <mat-label>valor del trigger </mat-label>\r\n          <input matInput formControlName=\"trigger_valor\" />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div>\r\n        <mat-accordion>\r\n          <mat-expansion-panel (click)=\"GetAllVariables()\" hideToggle>\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title> Listado de variables</mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n            <mat-list role=\"list\" *ngFor=\"let variable of listaVariables\">\r\n              <mat-list-item role=\"listitem\">\r\n                {{ variable.nombre }}\r\n                <a\r\n                  (click)=\"borrarVariable(variable._id)\"\r\n                  class=\"m-3\"\r\n                  mat-raised-button\r\n                  color=\"warn\"\r\n                >\r\n                  eliminar\r\n                </a>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n      </div>\r\n\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Enviar</button>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { inject } from '@angular/core';\r\nimport { CanActivateFn, Router } from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const authGuard: CanActivateFn = (route, state) => {\r\n  const router = inject(Router);\r\n  const service = inject(AuthService);\r\n  const toastr = inject(ToastrService);\r\n\r\n  if (service.IsLoggedIn()) {\r\n    if (route.url.length > 0) {\r\n      let menu = route.url[0].path;\r\n      if (menu == 'user') {\r\n        if (service.getUserRole() == 'admin') {\r\n          return true;\r\n        } else {\r\n          toastr.warning('Acceso restringido, no es administrador');\r\n          router.navigate(['']);\r\n          return false;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  } else {\r\n    router.navigate(['login']);\r\n    return false;\r\n  }\r\n};\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  Subscription,\r\n  catchError,\r\n  delay,\r\n  Observable,\r\n  BehaviorSubject,\r\n  Subject,\r\n  of,\r\n} from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogOverviewExampleDialog } from '../dialog.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private jwtHelper: JwtHelperService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  apiUrl = environment.API_URL_USERS;\r\n  apiRole = environment.API_URL_ROLES;\r\n  authToken: any;\r\n  user: any;\r\n  tokenSubscription = new Subscription();\r\n  tokenSubscription2 = new Subscription();\r\n  timeout?: any;\r\n\r\n  private messageSource = new BehaviorSubject('default message');\r\n  //observables que recogen la respuesta de la llamada a la api\r\n  private provinciasSource = new BehaviorSubject('');\r\n  private localidadesSource = new BehaviorSubject('');\r\n  private empresasSource = new BehaviorSubject('');\r\n  private plantasSource = new BehaviorSubject('');\r\n  private lineaSource = new BehaviorSubject('');\r\n  private maquinaSource = new BehaviorSubject('');\r\n\r\n  //observables que recogen la opcion seleccionada\r\n  paisSelectedSource = new BehaviorSubject('');\r\n  provinciaSelectedSource = new BehaviorSubject('');\r\n  localidadSelectedSource = new BehaviorSubject('');\r\n  empresaSelectedSource = new BehaviorSubject('');\r\n  plantaSelectedSource = new BehaviorSubject('');\r\n  lineaSelectedSource = new BehaviorSubject('');\r\n  tipoMaquinaSelectedSource = new BehaviorSubject('');\r\n  maquinaSelectedSource = new BehaviorSubject('');\r\n  procesoSelectedSource = new BehaviorSubject('');\r\n  triggerSelectedSource = new BehaviorSubject('');\r\n\r\n  currentMessage = this.messageSource.asObservable();\r\n\r\n  // guardamos la respuesta en listas que son accesibles desde los componentes\r\n  listProvincias = this.provinciasSource.asObservable();\r\n  listLocalidades = this.localidadesSource.asObservable();\r\n  listEmpresas = this.empresasSource.asObservable();\r\n  listPlantas = this.plantasSource.asObservable();\r\n  listLineas = this.lineaSource.asObservable();\r\n  listMaquinas = this.maquinaSource.asObservable();\r\n\r\n  // guardamos la opcion seleccionada para que sea accesible a los componentes\r\n  paisSelected = this.paisSelectedSource.asObservable();\r\n  provinciaSelected = this.provinciaSelectedSource.asObservable();\r\n  localidadSelected = this.localidadSelectedSource.asObservable();\r\n  empresaSelected = this.empresaSelectedSource.asObservable();\r\n  plantaSelected = this.plantaSelectedSource.asObservable();\r\n  lineaSelected = this.lineaSelectedSource.asObservable();\r\n  tipoMaquinaSelected = this.tipoMaquinaSelectedSource.asObservable();\r\n  maquinaSelected = this.maquinaSelectedSource.asObservable();\r\n  procesoSelected = this.procesoSelectedSource.asObservable();\r\n  triggerSelected = this.triggerSelectedSource.asObservable();\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '50%',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  // get\r\n\r\n  GetAll() {\r\n    return this.http.get(this.apiUrl);\r\n  }\r\n\r\n  //\r\n\r\n  GetAllRoles() {\r\n    return this.http.get(this.apiRole);\r\n  }\r\n\r\n  GetById(id: any) {\r\n    return this.http.get(this.apiUrl + '/' + id);\r\n  }\r\n\r\n  LogIn(body: any) {\r\n    return this.http.post(this.apiUrl + 'login', body).pipe(\r\n      catchError(async (error) => {\r\n        console.log(error.message);\r\n        return error;\r\n      })\r\n    );\r\n  }\r\n  storeUserData(token: any, user: any, rtoken: any) {\r\n    console.log('storeUserData, user: ', user, 'token: ', token);\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(token)!.valueOf() -\r\n      new Date().valueOf();\r\n    sessionStorage.setItem('token', token);\r\n    sessionStorage.setItem('rtoken', rtoken);\r\n    sessionStorage.setItem('username', user.name);\r\n    sessionStorage.setItem('userrole', user.role.name);\r\n    this.authToken = token;\r\n    this.user = user;\r\n    // this.expirationCounter(this.timeout);\r\n    if (sessionStorage.getItem('userrole') == 'admin') {\r\n      this.router.navigate(['home5']);\r\n    } else {\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n\r\n  expirationCounter(timeout: any) {\r\n    console.log('timeout: ', timeout);\r\n    this.tokenSubscription.unsubscribe();\r\n    this.tokenSubscription = of(null)\r\n      .pipe(delay(timeout))\r\n      .subscribe((expired) => {\r\n        console.log('EXPIRED!!');\r\n        this.dialog.closeAll();\r\n        this.logout();\r\n        this.toastr.error('sesion expirada', 'vuelva a iniciar sesion');\r\n      });\r\n    this.pre_expirationCounter(timeout);\r\n  }\r\n\r\n  pre_expirationCounter(timeout: any) {\r\n    let timeNow = new Date();\r\n    console.log('time now: ', timeNow);\r\n    this.tokenSubscription2.unsubscribe();\r\n    this.tokenSubscription2 = of(null)\r\n      .pipe(delay(timeout - 120000))\r\n      .subscribe(() => {\r\n        this.openDialog();\r\n        console.log('about to expire !!');\r\n      });\r\n  }\r\n  logout() {\r\n    this.tokenSubscription.unsubscribe();\r\n    this.authToken = null;\r\n    this.user = null;\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/login']);\r\n    sessionStorage.setItem('token', '');\r\n    console.log(sessionStorage.getItem('token')?.toString());\r\n  }\r\n\r\n  IsLoggedIn() {\r\n    return sessionStorage.getItem('username') != null;\r\n  }\r\n  getUserRole() {\r\n    return sessionStorage.getItem('userrole') != null\r\n      ? sessionStorage.getItem('userrole')?.toString()\r\n      : '';\r\n  }\r\n  // post\r\n  Proceedregister(inputdata: any) {\r\n    return this.http\r\n      .post(this.apiUrl, inputdata, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  UpdateUser(id: any, inputdata: any) {\r\n    return this.http.post(this.apiUrl + '/' + id, inputdata);\r\n  }\r\n\r\n  // get formularios\r\n  getForm(url: string) {\r\n    return this.http\r\n      .get(url, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          if (error.status == 403) {\r\n            this.router.navigate(['/login']);\r\n          }\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  postForm(url: string, formData: any) {\r\n    return this.http\r\n      .post(url, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  deleteForm(url: string, id: string) {\r\n    return this.http\r\n      .delete(url + 'delete/' + id, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  changeMessage(message: string) {\r\n    console.log('change message: ', message);\r\n    this.messageSource.next(message);\r\n  }\r\n  streamProvincias_PaisSelected(provincias: string) {\r\n    console.log('change message: ', provincias);\r\n    this.provinciasSource.next(provincias);\r\n  }\r\n\r\n  streamLocalides_ProvinciaSelected(localidades: string) {\r\n    console.log('change message: ', localidades);\r\n    this.localidadesSource.next(localidades);\r\n  }\r\n\r\n  streamEmpresas_LocalidadSelected(empresas: string) {\r\n    console.log('change message: ', empresas);\r\n    this.empresasSource.next(empresas);\r\n  }\r\n  streamPlantas_EmpresaSelected(plantas: string) {\r\n    console.log('change message: ', plantas);\r\n    this.plantasSource.next(plantas);\r\n  }\r\n\r\n  streamLinea_PlantaSelected(linea: string) {\r\n    console.log('change message: ', linea);\r\n    this.lineaSource.next(linea);\r\n  }\r\n  streamMaquinas_LineaSelected(Maquinas: string) {\r\n    console.log('change message: ', Maquinas);\r\n    this.maquinaSource.next(Maquinas);\r\n  }\r\n  streamTipoSelected(TipoMaquina: string) {\r\n    console.log('tipo maquina selected: ', TipoMaquina);\r\n    this.tipoMaquinaSelectedSource.next(TipoMaquina);\r\n  }\r\n  streamMaquinaSelected(Maquina: string) {\r\n    console.log('maquina selected: ', Maquina);\r\n    this.maquinaSelectedSource.next(Maquina);\r\n  }\r\n  streamProcesoSelected(proceso: string) {\r\n    console.log('Proceso selected: ', proceso);\r\n    this.procesoSelectedSource.next(proceso);\r\n  }\r\n  streamTriggerSelected(trigger: string) {\r\n    console.log('Trigger selected: ', trigger);\r\n    this.triggerSelectedSource.next(trigger);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, catchError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RegistroFiltrado, Variable } from '../models/datos.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpService {\r\n  registroGeneral = environment.API_URL_RGENERAL;\r\n  variables = environment.API_URL_VARIABLES;\r\n  private listaVariablesSource = new BehaviorSubject(<Variable[]>[]);\r\n  private listaRegistroFiltradoSource = new BehaviorSubject(\r\n    <RegistroFiltrado[]>[]\r\n  );\r\n  private listaRegistroFiltrado2Source = new BehaviorSubject(<[]>[]);\r\n  private listaDatosSource3 = new BehaviorSubject(<[]>[]);\r\n  private listaDatosInRangeSource = new BehaviorSubject(<[]>[]);\r\n  listaVariables = this.listaVariablesSource.asObservable();\r\n  listaRegistroFiltrado = this.listaRegistroFiltradoSource.asObservable();\r\n  listaRegistroFiltrado2 = this.listaRegistroFiltrado2Source.asObservable();\r\n  listaDatos3 = this.listaDatosSource3.asObservable();\r\n  listaDatosInRange = this.listaDatosInRangeSource.asObservable();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getValores(variable: string): Observable<any> {\r\n    return this.http.get(this.registroGeneral + 'all/' + variable, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  getValoresFiltrados(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String,\r\n    operacion: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneral + `filter/${variable}/${inicio}/${fin}/${operacion}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getValoresFiltrados2(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneral + `filter/${variable}/${inicio}/${fin}/`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getAllInRange(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneral + `all/${variable}/${inicio}/${fin}/`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getVariables(): Observable<any> {\r\n    return this.http.get(this.variables, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  stream_Variables(variables: Variable[]) {\r\n    console.log('stream variables: ', variables);\r\n    this.listaVariablesSource.next(variables);\r\n  }\r\n  stream_RegistroFiltrado(datos: RegistroFiltrado[]) {\r\n    console.log('stream registro filtrado: ', datos);\r\n    this.listaRegistroFiltradoSource.next(datos);\r\n  }\r\n  stream_RegistroFiltrado2(datoGeneral: any) {\r\n    this.listaRegistroFiltrado2Source.next(datoGeneral);\r\n  }\r\n  stream_Datos3(datoGeneral: any) {\r\n    this.listaDatosSource3.next(datoGeneral);\r\n  }\r\n  stream_DatosInRange(datoGeneral: any) {\r\n    this.listaDatosInRangeSource.next(datoGeneral);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SpinnerService {\n  constructor(private _spinnerService: NgxSpinnerService) {}\n\n  public llamarSpinner(spinner: string) {\n    this._spinnerService.show(spinner);\n  }\n  public detenerSpinner(spinner: string) {\n    this._spinnerService.hide(spinner);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport colorLib from '@kurkle/color';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilsService {\n  constructor() {}\n  private CHART_COLORS = {\n    red: 'rgb(255, 99, 132)',\n    orange: 'rgb(255, 159, 64)',\n    yellow: 'rgb(255, 205, 86)',\n    green: 'rgb(75, 192, 192)',\n    blue: 'rgb(54, 162, 235)',\n    purple: 'rgb(153, 102, 255)',\n    grey: 'rgb(201, 203, 207)',\n  };\n\n  NAMED_COLORS = [\n    this.CHART_COLORS.red,\n    this.CHART_COLORS.orange,\n    this.CHART_COLORS.yellow,\n    this.CHART_COLORS.green,\n    this.CHART_COLORS.blue,\n    this.CHART_COLORS.purple,\n    this.CHART_COLORS.grey,\n  ];\n\n  namedColor(index: number) {\n    return this.NAMED_COLORS[index % this.NAMED_COLORS.length];\n  }\n  transparentize(value: string, opacity: number) {\n    var alpha = opacity === undefined ? 0.5 : 1 - opacity;\n    return colorLib(value).alpha(alpha).rgbString();\n  }\n}\n","export const environment = {\r\n  production: false,\r\n  API_URL_USERS: 'http://automatismopalmar.ddns.net:3001/api/users/',\r\n  API_URL_ROLES: 'http://automatismopalmar.ddns.net:3001/api/role/',\r\n  API_URL_RGENERAL:\r\n    'http://automatismopalmar.ddns.net:3001/api/registro-general/',\r\n  API_URL_VARIABLES: 'http://automatismopalmar.ddns.net:3001/api/variables/',\r\n  API_URL_PAISES: 'http://automatismopalmar.ddns.net:3001/api/paises/',\r\n  API_URL_PROVINCIAS: 'http://automatismopalmar.ddns.net:3001/api/provincias/',\r\n  API_URL_LOCALIDADES: 'http://automatismopalmar.ddns.net:3001/api/localidad/',\r\n  API_URL_EMPRESAS: 'http://automatismopalmar.ddns.net:3001/api/empresas/',\r\n  API_URL_PLANTA: 'http://automatismopalmar.ddns.net:3001/api/empresa-planta/',\r\n  API_URL_TIPO_MAQUINA:\r\n    'http://automatismopalmar.ddns.net:3001/api/tipo-maquina/',\r\n  API_URL_MAQUINA: 'http://automatismopalmar.ddns.net:3001/api/maquinas/',\r\n  API_URL_LINEA_PRODUCCION:\r\n    'http://automatismopalmar.ddns.net:3001/api/linea-produccion/',\r\n  API_URL_PROCESO: 'http://automatismopalmar.ddns.net:3001/api/proceso/',\r\n  API_URL_TRIGGER: 'http:///automatismopalmar.ddns.net:3001/api/trigger/',\r\n  API_URL_RTOKEN: 'http:///automatismopalmar.ddns.net:3001/api/refresh',\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatStepperModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n"],"names":["RouterModule","ListarDatosComponent","RegisterComponent","LoginComponent","UserlistingComponent","authGuard","Home5Component","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","i1","exports","FormControl","FormGroup","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_div_27_Template_button_click_1_listener","ɵɵrestoreView","_r6","ɵɵnextContext","_r0","ɵɵreference","ɵɵresetView","toggle","ɵɵtemplate","AppComponent_div_27_a_6_Template","AppComponent_div_27_a_7_Template","ɵɵelement","AppComponent_div_27_Template_a_click_9_listener","ctx_r7","logOut","ɵɵadvance","ɵɵproperty","ctx_r2","isAdminUser","AppComponent","constructor","builder","router","service","_httpService","spinnerService","opened","range","start","end","title","isMenuRequired","listVariables","listDatos","exceedList","notExceedList2","ngOnInit","valor","group","threshold","subscription","listaVariables","subscribe","message","subscription2","listaDatosInRange","ngDoCheck","currentUrl","url","getUserRole","logout","getFiltrados","inicio","value","getTime","toString","final","llamarSpinner","getValoresFiltrados","_id","data","stream_RegistroFiltrado","getValoresFiltrados2","stream_RegistroFiltrado2","getInRangeTabla","console","log","stream_Datos3","notExceedList","getAllInRange","filter","x","valor_lectura","n","length","myBlock","i","map","e","index","time","formatTime","Date","time_stamp","cTime_stamp","formatDate","stream_DatosInRange","j","push","notExceed","exceed","seconds","hours","Math","floor","minutes","remainingSeconds","formattedHours","String","padStart","formattedMinutes","formattedSeconds","padTo2Digits","num","date","getFullYear","getMonth","getDate","join","getHours","getMinutes","getSeconds","ɵɵdirectiveInject","FormBuilder","i2","Router","i3","AuthService","i4","HttpService","i5","SpinnerService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_Template_mat_sidenav_openedChange_1_listener","$event","AppComponent_Template_button_click_16_listener","AppComponent_Template_form_ngSubmit_19_listener","AppComponent_div_27_Template","_r1","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","BrowserAnimationsModule","MaterialModule","ToastrModule","UpdatepopupComponent","PaisFormComponent","ProvinciaFormComponent","LocalidadFormComponent","EmpresaFormComponent","EmpresaPlantaFormComponent","MaquinaFormComponent","TipoMaquinaFormComponent","LineaProduccionFormComponent","ProcesoFormComponent","VariableFormComponent","JwtModule","TriggerFormComponent","TablaComponent","NgxSpinnerModule","tokenGetter","localStorage","getItem","AppModule","bootstrap","config","allowedDomains","declarations","Home5Component_mat_step_6_ng_template_1_Template","provinciaForm","Home5Component_mat_step_7_ng_template_1_Template","ctx_r3","localidadForm","Home5Component_mat_step_8_ng_template_1_Template","ctx_r4","empresaForm","Home5Component_mat_step_9_ng_template_1_Template","ctx_r5","plantaForm","Home5Component_mat_step_10_ng_template_1_Template","ctx_r6","lineaProduccionForm","Home5Component_mat_step_11_ng_template_1_Template","tipoMaquinaForm","Home5Component_mat_step_12_ng_template_1_Template","ctx_r8","maquinaForm","Home5Component_mat_step_13_ng_template_1_Template","ctx_r9","Home5Component_mat_step_14_ng_template_1_Template","ctx_r10","Home5Component_mat_step_15_ng_template_1_Template","ctx_r11","jwtHelper","breakpointObserver","isLinear","isTrue","isPaisCompleted","isProvinciaCompleted","isLocalidadCompleted","isEmpresaCompleted","isPlantaCompleted","isTipoMaquinaCompleted","isLineaProduccionCompleted","isMaquinaCompleted","isProcesoCompleted","isTriggerCompleted","stepperOrientation","observe","pipe","matches","expirationCheck","paisSelected","provinciaSelected","localidadSelected","empresaSelected","plantaSelected","lineaSelected","tipoMaquinaSelected","maquinaSelected","procesoSelected","triggerSelected","token","sessionStorage","timeout","getTokenExpirationDate","valueOf","expirationCounter","JwtHelperService","BreakpointObserver","viewQuery","Home5Component_Query","Home5Component_ng_template_4_Template","Home5Component_mat_step_6_Template","Home5Component_mat_step_7_Template","Home5Component_mat_step_8_Template","Home5Component_mat_step_9_Template","Home5Component_mat_step_10_Template","Home5Component_mat_step_11_Template","Home5Component_mat_step_12_Template","Home5Component_mat_step_13_Template","Home5Component_mat_step_14_Template","Home5Component_mat_step_15_Template","ɵɵpipeBind1","paisForm","Chart","registerables","register","utils","authService","listDatos2","listDatos3","listCheckbox","todayDate","sensor_1","sensor_2","pulsador","id","canvasBackgroundColor","beforeDraw","chart","args","pluginOptions","chartArea","top","bottom","left","right","width","scales","y","bgColors","bracketLow","bracketHigh","color","fillStyle","fillRect","getPixelForValue","decimation","enabled","algorithm","samples","getDaysInMonth","year","month","addMonths","input","months","setDate","setMonth","min","sixMonthAgoDate","getDataColors","opacity","colors","getVariables","type","labels","datasets","yAxisID","options","aspectRatio","maintainAspectRatio","animation","parsing","plugins","beginAtZero","ticks","max","grid","position","source","maxRotation","autoSkip","chart3","borderColor","backgroundColor","legend","listaRegistroFiltrado","avg","update","listaRegistroFiltrado2","detenerSpinner","dato","parseFloat","toFixed","listaDatos3","ngOnDestroy","clearInterval","getRegistros","getValores","makeCheckboxArray","newValue","JSON","parse","_value","selected","desmarcar","stream_Variables","label","UtilsService","ListarDatosComponent_Template","Validators","toastr","loginForm","username","control","required","password","clear","proceedLogin","LogIn","res","userData","status","isActive","success","storeUserData","rtoken","error","ToastrService","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_5_listener","registerform","compose","minLength","name","pattern","email","role","proceedRegistration","valid","Proceedregister","next","warning","navigate","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_5_listener","MatPaginator","MatSort","MatTableDataSource","ɵɵtextInterpolate1","element_r10","element_r11","element_r12","ɵɵtextInterpolate","element_r13","csv","displayedColumns","dataSource","removeDuplicates","paginator","sort","ids","filtered","includes","downloadCSV","csvList","tiempo_inicio","tiempo_fin","diferencia","row","keysAmount","Object","keys","keysCounter","key","link","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","TablaComponent_Query","TablaComponent_Template_button_click_5_listener","ɵɵelementContainerStart","TablaComponent_th_11_Template","TablaComponent_td_12_Template","ɵɵelementContainerEnd","TablaComponent_th_14_Template","TablaComponent_td_15_Template","TablaComponent_th_17_Template","TablaComponent_td_18_Template","TablaComponent_th_20_Template","TablaComponent_td_21_Template","TablaComponent_tr_22_Template","TablaComponent_tr_23_Template","ɵɵpureFunction0","_c0","MAT_DIALOG_DATA","item_r1","dialog","GetAllRoles","rolelist","GetById","editData","setValue","updateUser","UpdateUser","close","MatDialogRef","UpdatepopupComponent_Template","UpdatepopupComponent_Template_form_ngSubmit_5_listener","UpdatepopupComponent_mat_option_13_Template","element_r14","element_r15","element_r16","element_r17","element_r18","UserlistingComponent_td_19_Template_a_click_1_listener","restoredCtx","_r21","element_r19","$implicit","ctx_r20","LoadUser","GetAll","userList","popup","open","enterAnimationDuration","exitAnimationDuration","afterClosed","opendialog","MatDialog","UserlistingComponent_Query","UserlistingComponent_th_3_Template","UserlistingComponent_td_4_Template","UserlistingComponent_th_6_Template","UserlistingComponent_td_7_Template","UserlistingComponent_th_9_Template","UserlistingComponent_td_10_Template","UserlistingComponent_th_12_Template","UserlistingComponent_td_13_Template","UserlistingComponent_th_15_Template","UserlistingComponent_td_16_Template","UserlistingComponent_th_18_Template","UserlistingComponent_td_19_Template","UserlistingComponent_tr_20_Template","UserlistingComponent_tr_21_Template","MatButtonModule","MatDialogModule","MatFormFieldModule","MatInputModule","environment","DialogOverviewExampleDialog","dialogRef","rtoken_url","API_URL_RTOKEN","rBody","user","onNoClick","refreshToken","postForm","resData","accessToken","setItem","standalone","features","ɵɵStandaloneFeature","DialogOverviewExampleDialog_Template","DialogOverviewExampleDialog_Template_button_click_6_listener","DialogOverviewExampleDialog_Template_button_click_8_listener","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","MatButton","encapsulation","EmpresaFormComponent_mat_option_48_Template_mat_option_click_0_listener","_r3","empresa_r1","setEmpresa","razon_social","apiLocalidad","API_URL_LOCALIDADES","apiEmpresas","API_URL_EMPRESAS","apiPlantas","API_URL_PLANTA","isOptional","GetAllLocalidades","nombre_fantasia","calle","altura","piso","deptartamento","rubro","id_localidad","listEmpresas","getForm","listLocalidades","GetAllEmpresas","createEmpresa","borrarEmpresa","deleteForm","nombre","id_empresa","changeMessage","empresaSelectedSource","GetPlantasByEmpresas","streamPlantas_EmpresaSelected","EmpresaFormComponent_Template","EmpresaFormComponent_Template_form_ngSubmit_11_listener","EmpresaFormComponent_Template_form_submit_11_listener","reset","EmpresaFormComponent_mat_option_48_Template","EmpresaPlantaFormComponent_mat_option_32_Template_mat_option_click_0_listener","planta_r1","setPlanta","apiPlanta","apiLinea","API_URL_LINEA_PRODUCCION","listPlantas","GetAllPlantas","createPlanta","borrarPlanta","id_planta","plantaSelectedSource","GetLineaByPlanta","streamLinea_PlantaSelected","EmpresaPlantaFormComponent_Template","EmpresaPlantaFormComponent_Template_form_ngSubmit_11_listener","EmpresaPlantaFormComponent_Template_form_submit_11_listener","EmpresaPlantaFormComponent_mat_option_32_Template","LineaProduccionFormComponent_mat_option_32_Template_mat_option_click_0_listener","linea_r1","setLinea","apiMaquina","API_URL_MAQUINA","lineaForm","descripcion","identificador","listLineas","id_empresa_planta","GetAllLineas","createLinea","borrarLineaProduccion","id_linea","lineaSelectedSource","GetMaquinaByLinea","streamMaquinas_LineaSelected","LineaProduccionFormComponent_Template","LineaProduccionFormComponent_Template_form_ngSubmit_11_listener","LineaProduccionFormComponent_mat_option_32_Template","LocalidadFormComponent_mat_option_24_Template_mat_option_click_0_listener","localidad_r1","setLocalidad","apiProvincias","API_URL_PROVINCIAS","GetAllProvincias","id_provincia","listProvincias","createLocalidad","borrarLocalidad","localidadSelectedSource","GetEmpresasByLocalidad","streamEmpresas_LocalidadSelected","LocalidadFormComponent_Template","LocalidadFormComponent_Template_form_ngSubmit_11_listener","LocalidadFormComponent_mat_option_24_Template","MaquinaFormComponent_mat_option_36_Template_mat_option_click_0_listener","maquina_r1","setMaquina","StreamMaquinaSelected","apiTipoMaquina","API_URL_TIPO_MAQUINA","GetAllTipos","marca","modelo","detalle","currentMessage","listMaquinas","id_linea_produccion","id_tipo_maquina","listTipoMaquina","GetAllMaquinas","createMaquina","borrarMaquina","maquina_id","streamMaquinaSelected","MaquinaFormComponent_Template","MaquinaFormComponent_Template_form_ngSubmit_11_listener","MaquinaFormComponent_Template_form_submit_11_listener","MaquinaFormComponent_mat_option_36_Template","PaisFormComponent_mat_option_24_Template_mat_option_click_0_listener","pais_r1","setPais","_formBuilder","apiPaises","API_URL_PAISES","apiProvincia","completed","urlPaises","GetAllPaises","id_pais","listPaises","createPais","borrarPais","paisSelectedSource","GetProvinciasByPais","streamProvincias_PaisSelected","PaisFormComponent_Template","PaisFormComponent_Template_form_ngSubmit_11_listener","PaisFormComponent_Template_form_submit_11_listener","PaisFormComponent_Template_mat_select_click_23_listener","PaisFormComponent_Template_mat_select_selectionChange_23_listener","PaisFormComponent_mat_option_24_Template","ProcesoFormComponent_mat_option_28_Template_mat_option_click_0_listener","proceso_r1","setProceso","StreamProcesoSelected","apiProceso","API_URL_PROCESO","GetAllProcesos","procesoForm","listProceso","crearProceso","borrarProcesos","proceso_id","streamProcesoSelected","ProcesoFormComponent_Template","ProcesoFormComponent_Template_form_ngSubmit_11_listener","ProcesoFormComponent_mat_option_28_Template","ProvinciaFormComponent_mat_option_24_Template_mat_option_click_0_listener","provincia_r1","setProvincia","listProvinciasPais","createProvincia","borrarProvincia","provinciaSelectedSource","GetLocalidadesByProvincia","streamLocalides_ProvinciaSelected","ProvinciaFormComponent_Template","ProvinciaFormComponent_Template_form_ngSubmit_11_listener","ProvinciaFormComponent_Template_form_submit_11_listener","ProvinciaFormComponent_mat_option_24_Template","TipoMaquinaFormComponent_mat_option_28_Template_mat_option_click_0_listener","tipo_r1","setTipo","StreamTipoSelected","GetAllTiposMaquina","createTipoMaquina","borrarTipoMaquina","tipo_id","streamTipoSelected","TipoMaquinaFormComponent_Template","TipoMaquinaFormComponent_Template_form_ngSubmit_11_listener","TipoMaquinaFormComponent_Template_form_submit_11_listener","TipoMaquinaFormComponent_mat_option_28_Template","TriggerFormComponent_div_10_Template_mat_option_click_1_listener","trigger_r1","setTrigger","StreamTriggerSelected","apiTrigger","API_URL_TRIGGER","GetAllTriggers","triggerForm","listTriggers","crearTrigger","borrarTrigger","trigger_descripcion","trigger_id","streamTriggerSelected","TriggerFormComponent_Template","TriggerFormComponent_div_10_Template","VariableFormComponent_mat_list_25_Template_a_click_3_listener","variable_r1","borrarVariable","apiVariables","API_URL_VARIABLES","apiMaquinas","GetAllVariables","variableForm","trigger_valor","id_maquina","id_proceso","id_trigger","listProcesos","listMaquina","listTrigger","crearVariable","VariableFormComponent_Template","VariableFormComponent_Template_form_ngSubmit_5_listener","VariableFormComponent_Template_mat_expansion_panel_click_21_listener","VariableFormComponent_mat_list_25_Template","inject","route","state","IsLoggedIn","menu","Subscription","catchError","delay","BehaviorSubject","of","http","apiUrl","API_URL_USERS","apiRole","API_URL_ROLES","tokenSubscription","tokenSubscription2","messageSource","provinciasSource","localidadesSource","empresasSource","plantasSource","lineaSource","maquinaSource","tipoMaquinaSelectedSource","maquinaSelectedSource","procesoSelectedSource","triggerSelectedSource","asObservable","openDialog","result","get","post","_ref","_asyncToGenerator","_x","apply","arguments","authToken","unsubscribe","expired","closeAll","pre_expirationCounter","timeNow","inputdata","headers","_ref2","_x2","_this","Authorization","_ref3","_x3","formData","_ref4","_x4","delete","_ref5","_x5","provincias","localidades","empresas","plantas","linea","Maquinas","TipoMaquina","Maquina","proceso","trigger","ɵɵinject","HttpClient","factory","ɵfac","providedIn","registroGeneral","API_URL_RGENERAL","variables","listaVariablesSource","listaRegistroFiltradoSource","listaRegistroFiltrado2Source","listaDatosSource3","listaDatosInRangeSource","variable","fin","operacion","datos","datoGeneral","_spinnerService","spinner","show","hide","NgxSpinnerService","colorLib","CHART_COLORS","red","orange","yellow","green","blue","purple","grey","NAMED_COLORS","namedColor","transparentize","alpha","undefined","rgbString","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","MatSelectModule","MatCardModule","MatRadioModule","MatCheckboxModule","MatTableModule","MatPaginatorModule","MatSortModule","MatExpansionModule","MatStepperModule","MatIconModule","MatListModule","MatChipsModule","MatDatepickerModule","MatNativeDateModule","MatSidenavModule","MatProgressSpinnerModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}