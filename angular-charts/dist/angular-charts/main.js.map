{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home2/home2.component.ts","./src/app/components/home2/home2.component.html","./src/app/components/home3/home3.component.ts","./src/app/components/home3/home3.component.html","./src/app/components/home4/home4.component.ts","./src/app/components/home4/home4.component.html","./src/app/components/home5/home5.component.ts","./src/app/components/home5/home5.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/listar-datos/listar-datos.component.ts","./src/app/components/listar-datos/listar-datos.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/updatepopup/updatepopup.component.ts","./src/app/components/updatepopup/updatepopup.component.html","./src/app/components/userlisting/userlisting.component.ts","./src/app/components/userlisting/userlisting.component.html","./src/app/dialog.component.ts","./src/app/dialog.component.html","./src/app/forms/empresa-form/empresa-form.component.ts","./src/app/forms/empresa-form/empresa-form.component.html","./src/app/forms/empresa-planta-form/empresa-planta-form.component.ts","./src/app/forms/empresa-planta-form/empresa-planta-form.component.html","./src/app/forms/linea-produccion-form/linea-produccion-form.component.ts","./src/app/forms/linea-produccion-form/linea-produccion-form.component.html","./src/app/forms/localidad-form/localidad-form.component.ts","./src/app/forms/localidad-form/localidad-form.component.html","./src/app/forms/maquina-form/maquina-form.component.ts","./src/app/forms/maquina-form/maquina-form.component.html","./src/app/forms/pais-form/pais-form.component.ts","./src/app/forms/pais-form/pais-form.component.html","./src/app/forms/proceso-form/proceso-form.component.ts","./src/app/forms/proceso-form/proceso-form.component.html","./src/app/forms/provincia-form/provincia-form.component.ts","./src/app/forms/provincia-form/provincia-form.component.html","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.ts","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.html","./src/app/forms/trigger-form/trigger-form.component.ts","./src/app/forms/trigger-form/trigger-form.component.html","./src/app/forms/variable-form/variable-form.component.ts","./src/app/forms/variable-form/variable-form.component.html","./src/app/guard/auth.guard.ts","./src/app/service/auth.service.ts","./src/app/service/http-service.service.ts","./src/app/service/utils.service.ts","./src/environments/environment.staging.ts","./src/main.ts","./src/material.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { authGuard } from './guard/auth.guard';\r\nimport { Home2Component } from './components/home2/home2.component';\r\nimport { Home3Component } from './components/home3/home3.component';\r\nimport { Home4Component } from './components/home4/home4.component';\r\nimport { Home5Component } from './components/home5/home5.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ListarDatosComponent, canActivate: [authGuard] },\r\n  { path: 'home', component: HomeComponent, canActivate: [authGuard] },\r\n  { path: 'home2', component: Home2Component, canActivate: [authGuard] },\r\n  { path: 'home3', component: Home3Component, canActivate: [authGuard] },\r\n  { path: 'home4', component: Home4Component, canActivate: [authGuard] },\r\n  { path: 'home5', component: Home5Component, canActivate: [authGuard] },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'user', component: UserlistingComponent, canActivate: [authGuard] },\r\n  { path: '**', redirectTo: 'login', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, DoCheck } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements DoCheck {\r\n  title = 'angular-charts';\r\n  isMenuRequired = false;\r\n  isAdminUser = false;\r\n  constructor(private router: Router, private service: AuthService) {}\r\n  ngDoCheck(): void {\r\n    let currentUrl = this.router.url;\r\n    if (currentUrl == '/login' || currentUrl == '/register') {\r\n      this.isMenuRequired = false;\r\n    } else {\r\n      this.isMenuRequired = true;\r\n    }\r\n    if (this.service.getUserRole() === 'admin') {\r\n      this.isAdminUser = true;\r\n    } else {\r\n      this.isAdminUser = false;\r\n    }\r\n  }\r\n  logOut() {\r\n    this.service.logout();\r\n  }\r\n}\r\n","<style>\r\n  :host {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\r\n      \"Segoe UI Symbol\";\r\n    font-size: 14px;\r\n    color: #333;\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n\r\n  .spacer {\r\n    flex: 1;\r\n  }\r\n\r\n  .toolbar {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 60px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #1976d2;\r\n    color: white;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .toolbar img {\r\n    margin: 0 16px;\r\n  }\r\n\r\n  .content {\r\n    margin: 82px auto 32px;\r\n    padding: 0 32px;\r\n    max-width: auto;\r\n  }\r\n\r\n  svg.material-icons {\r\n    height: 24px;\r\n    width: auto;\r\n  }\r\n\r\n  svg.material-icons:not(:last-child) {\r\n    margin-right: 8px;\r\n  }\r\n\r\n  .card svg.material-icons path {\r\n    fill: #888;\r\n  }\r\n\r\n  .card-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-top: 16px;\r\n  }\r\n\r\n  .card {\r\n    all: unset;\r\n    border-radius: 4px;\r\n    border: 1px solid #eee;\r\n    background-color: #fafafa;\r\n    height: 40px;\r\n    width: 200px;\r\n    margin: 0 8px 16px;\r\n    padding: 16px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: all 0.2s ease-in-out;\r\n    line-height: 24px;\r\n  }\r\n\r\n  .card-container .card:not(:last-child) {\r\n    margin-right: 0;\r\n  }\r\n\r\n  .card.card-small {\r\n    height: 16px;\r\n    width: 168px;\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card) {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card):hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card):hover .material-icons path {\r\n    fill: rgb(105, 103, 103);\r\n  }\r\n\r\n  .card.highlight-card {\r\n    background-color: #1976d2;\r\n    color: white;\r\n    font-weight: 600;\r\n    border: none;\r\n    width: auto;\r\n    min-width: 30%;\r\n    position: relative;\r\n  }\r\n\r\n  .card.card.highlight-card span {\r\n    margin-left: 60px;\r\n  }\r\n\r\n  svg#rocket {\r\n    width: 80px;\r\n    position: absolute;\r\n    left: -10px;\r\n    top: -24px;\r\n  }\r\n\r\n  svg#rocket-smoke {\r\n    height: calc(100vh - 95px);\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 180px;\r\n    z-index: -10;\r\n  }\r\n\r\n  a,\r\n  a:visited,\r\n  a:hover {\r\n    text-decoration: none;\r\n    padding: 10px;\r\n  }\r\n\r\n  a:hover {\r\n    color: #125699;\r\n  }\r\n\r\n  footer {\r\n    margin-top: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    line-height: 20px;\r\n  }\r\n\r\n  footer a {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  svg#clouds {\r\n    position: fixed;\r\n    bottom: -160px;\r\n    left: -230px;\r\n    z-index: -10;\r\n    width: 1920px;\r\n  }\r\n\r\n  /* Responsive Styles */\r\n  @media screen and (max-width: 767px) {\r\n    .card-container > *:not(.circle-link),\r\n    .terminal {\r\n      width: 100%;\r\n    }\r\n\r\n    .card:not(.highlight-card) {\r\n      height: 16px;\r\n      margin: 8px 0;\r\n    }\r\n\r\n    .card.highlight-card span {\r\n      margin-left: 72px;\r\n    }\r\n\r\n    svg#rocket-smoke {\r\n      right: 120px;\r\n      transform: rotate(-5deg);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 575px) {\r\n    svg#rocket-smoke {\r\n      display: none;\r\n      visibility: hidden;\r\n    }\r\n  }\r\n</style>\r\n\r\n<!-- Toolbar -->\r\n<div class=\"toolbar\" *ngIf=\"isMenuRequired\" role=\"banner\">\r\n  <a routerLink=\"/\">Graficos</a>\r\n  <!-- <a *ngIf=\"isAdminUser\" routerLink=\"/home2\">Pais form</a>\r\n  <a *ngIf=\"isAdminUser\" routerLink=\"/home\">Empresa form</a>\r\n  <a *ngIf=\"isAdminUser\" routerLink=\"/home3\">Linea form</a>\r\n  <a *ngIf=\"isAdminUser\" routerLink=\"/home4\">Variable form</a> -->\r\n  <a *ngIf=\"isAdminUser\" routerLink=\"/home5\">Formularios</a>\r\n  <a *ngIf=\"isAdminUser\" routerLink=\"/user\">Usuarios</a>\r\n  <div class=\"spacer\"></div>\r\n  <a style=\"cursor: pointer\" (click)=\"logOut()\">Logout</a>\r\n</div>\r\n\r\n<div class=\"content\" role=\"main\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// Import FusionCharts library and chart modules\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from 'src/material.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { UpdatepopupComponent } from './components/updatepopup/updatepopup.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { PaisFormComponent } from './forms/pais-form/pais-form.component';\r\nimport { ProvinciaFormComponent } from './forms/provincia-form/provincia-form.component';\r\nimport { LocalidadFormComponent } from './forms/localidad-form/localidad-form.component';\r\nimport { Home2Component } from './components/home2/home2.component';\r\nimport { EmpresaFormComponent } from './forms/empresa-form/empresa-form.component';\r\nimport { EmpresaPlantaFormComponent } from './forms/empresa-planta-form/empresa-planta-form.component';\r\nimport { MaquinaFormComponent } from './forms/maquina-form/maquina-form.component';\r\nimport { TipoMaquinaFormComponent } from './forms/tipo-maquina-form/tipo-maquina-form.component';\r\nimport { LineaProduccionFormComponent } from './forms/linea-produccion-form/linea-produccion-form.component';\r\nimport { Home3Component } from './components/home3/home3.component';\r\nimport { ProcesoFormComponent } from './forms/proceso-form/proceso-form.component';\r\nimport { Home4Component } from './components/home4/home4.component';\r\nimport { VariableFormComponent } from './forms/variable-form/variable-form.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { TriggerFormComponent } from './forms/trigger-form/trigger-form.component';\r\nimport { Home5Component } from './components/home5/home5.component';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListarDatosComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    UpdatepopupComponent,\r\n    UserlistingComponent,\r\n    PaisFormComponent,\r\n    ProvinciaFormComponent,\r\n    LocalidadFormComponent,\r\n    Home2Component,\r\n    EmpresaFormComponent,\r\n    EmpresaPlantaFormComponent,\r\n    MaquinaFormComponent,\r\n    TipoMaquinaFormComponent,\r\n    LineaProduccionFormComponent,\r\n    Home3Component,\r\n    ProcesoFormComponent,\r\n    Home4Component,\r\n    VariableFormComponent,\r\n    TriggerFormComponent,\r\n    Home5Component,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: ['localhost'],\r\n      },\r\n    }),\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    ToastrModule.forRoot(),\r\n  ],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-home2',\r\n  templateUrl: './home2.component.html',\r\n  styleUrls: ['./home2.component.css'],\r\n})\r\nexport class Home2Component implements OnInit {\r\n  isLinear = false;\r\n\r\n  paisForm!: FormGroup;\r\n  provinciaForm!: FormGroup;\r\n  localidadForm!: FormGroup;\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.paisForm = this._formBuilder.group({});\r\n    this.provinciaForm = this._formBuilder.group({});\r\n    this.localidadForm = this._formBuilder.group({});\r\n  }\r\n}\r\n","<mat-stepper [linear]=\"isLinear\" #stepper>\r\n  <mat-step [stepControl]=\"paisForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>País</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-pais-form></app-pais-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"provinciaForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Provincia</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-provincia-form></app-provincia-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"localidadForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Localidad</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-localidad-form></app-localidad-form>\r\n  </mat-step>\r\n</mat-stepper>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-home3',\r\n  templateUrl: './home3.component.html',\r\n  styleUrls: ['./home3.component.css'],\r\n})\r\nexport class Home3Component {\r\n  isLinear = false;\r\n\r\n  tipoMaquinaForm!: FormGroup;\r\n  maquinaForm!: FormGroup;\r\n  lineaForm!: FormGroup;\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.tipoMaquinaForm = this._formBuilder.group({});\r\n    this.maquinaForm = this._formBuilder.group({});\r\n    this.lineaForm = this._formBuilder.group({});\r\n  }\r\n}\r\n","<mat-stepper [linear]=\"isLinear\" #stepper>\r\n  <mat-step [stepControl]=\"tipoMaquinaForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Tipo de maquina</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-tipo-maquina-form></app-tipo-maquina-form>\r\n  </mat-step>\r\n\r\n  <mat-step [stepControl]=\"lineaForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span\r\n          >Linea de produccion</span\r\n        >\r\n      </div>\r\n    </ng-template>\r\n    <app-linea-produccion-form></app-linea-produccion-form>\r\n  </mat-step>\r\n\r\n  <mat-step [stepControl]=\"maquinaForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Maquina</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-maquina-form></app-maquina-form>\r\n  </mat-step>\r\n</mat-stepper>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-home4',\r\n  templateUrl: './home4.component.html',\r\n  styleUrls: ['./home4.component.css'],\r\n})\r\nexport class Home4Component {\r\n  isLinear = false;\r\n\r\n  procesoForm!: FormGroup;\r\n  variableForm!: FormGroup;\r\n  triggerForm!: FormGroup;\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.procesoForm = this._formBuilder.group({});\r\n    this.variableForm = this._formBuilder.group({});\r\n    this.triggerForm = this._formBuilder.group({});\r\n  }\r\n}\r\n","<mat-stepper [linear]=\"isLinear\" #stepper>\r\n  <mat-step [stepControl]=\"procesoForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Procesos</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-proceso-form></app-proceso-form>\r\n  </mat-step>\r\n\r\n  <mat-step [stepControl]=\"triggerForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Trigger</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-trigger-form></app-trigger-form>\r\n  </mat-step>\r\n\r\n  <mat-step [stepControl]=\"variableForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Variables</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-variable-form></app-variable-form>\r\n  </mat-step>\r\n</mat-stepper>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home5',\r\n  templateUrl: './home5.component.html',\r\n  styleUrls: ['./home5.component.css'],\r\n})\r\nexport class Home5Component implements OnInit {\r\n  @ViewChild('stepper') stepper!: MatStepper;\r\n\r\n  isLinear = true;\r\n\r\n  paisForm!: FormGroup;\r\n  provinciaForm!: FormGroup;\r\n  localidadForm!: FormGroup;\r\n  empresaForm!: FormGroup;\r\n  plantaForm!: FormGroup;\r\n  tipoMaquinaForm!: FormGroup;\r\n  lineaProduccionForm!: FormGroup;\r\n  maquinaForm!: FormGroup;\r\n  procesoForm!: FormGroup;\r\n  triggerForm!: FormGroup;\r\n  timeout: any;\r\n  token: any;\r\n  isTrue: boolean = false;\r\n\r\n  isPaisCompleted: boolean = false;\r\n  isProvinciaCompleted: boolean = false;\r\n  isLocalidadCompleted: boolean = false;\r\n  isEmpresaCompleted: boolean = false;\r\n  isPlantaCompleted: boolean = false;\r\n  isTipoMaquinaCompleted: boolean = false;\r\n  isLineaProduccionCompleted: boolean = false;\r\n  isMaquinaCompleted: boolean = false;\r\n  isProcesoCompleted: boolean = false;\r\n  isTriggerCompleted: boolean = false;\r\n\r\n  subscription!: Subscription;\r\n\r\n  constructor(\r\n    private service: AuthService,\r\n    private jwtHelper: JwtHelperService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.expirationCheck();\r\n    this.subscription = this.service.paisSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPaisCompleted = true;\r\n      } else {\r\n        this.isPaisCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.provinciaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProvinciaCompleted = true;\r\n      } else {\r\n        this.isProvinciaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLocalidadCompleted = true;\r\n      } else {\r\n        this.isLocalidadCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.empresaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isEmpresaCompleted = true;\r\n      } else {\r\n        this.isEmpresaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.plantaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPlantaCompleted = true;\r\n      } else {\r\n        this.isPlantaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.lineaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLineaProduccionCompleted = true;\r\n      } else {\r\n        this.isLineaProduccionCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => {\r\n        if (message != '') {\r\n          this.isTipoMaquinaCompleted = true;\r\n        } else {\r\n          this.isTipoMaquinaCompleted = false;\r\n        }\r\n      }\r\n    );\r\n    this.subscription = this.service.maquinaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isMaquinaCompleted = true;\r\n      } else {\r\n        this.isMaquinaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.procesoSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProcesoCompleted = true;\r\n      } else {\r\n        this.isProcesoCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.triggerSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isTriggerCompleted = true;\r\n      } else {\r\n        this.isTriggerCompleted = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.service.expirationCounter(this.timeout);\r\n  }\r\n}\r\n","<mat-stepper orientation=\"horizontal\" [linear]=\"isLinear\" #stepper>\r\n  <mat-step [stepControl]=\"paisForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>País</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-pais-form></app-pais-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"provinciaForm\" *ngIf=\"isPaisCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Provincia</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-provincia-form></app-provincia-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"localidadForm\" *ngIf=\"isProvinciaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Localidad</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-localidad-form></app-localidad-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"empresaForm\" *ngIf=\"isLocalidadCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Empresa</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-empresa-form></app-empresa-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"plantaForm\" *ngIf=\"isEmpresaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Planta</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-empresa-planta-form></app-empresa-planta-form>\r\n  </mat-step>\r\n\r\n  <mat-step [stepControl]=\"lineaProduccionForm\" *ngIf=\"isPlantaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span\r\n          >Linea de produccion\r\n        </span>\r\n      </div>\r\n    </ng-template>\r\n    <app-linea-produccion-form></app-linea-produccion-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"tipoMaquinaForm\" *ngIf=\"isLineaProduccionCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Tipo de maquina </span>\r\n      </div>\r\n    </ng-template>\r\n    <app-tipo-maquina-form></app-tipo-maquina-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isTipoMaquinaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Maquina</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-maquina-form></app-maquina-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isMaquinaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Proceso</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-proceso-form></app-proceso-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isProcesoCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Trigger</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-trigger-form></app-trigger-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isTriggerCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Variable</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-variable-form></app-variable-form>\r\n  </mat-step>\r\n</mat-stepper>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent {\r\n  isLinear = false;\r\n\r\n  empresaForm!: FormGroup;\r\n  plantaForm!: FormGroup;\r\n  lineaForm!: FormGroup;\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.empresaForm = this._formBuilder.group({});\r\n    this.plantaForm = this._formBuilder.group({});\r\n    this.lineaForm = this._formBuilder.group({});\r\n  }\r\n}\r\n","<mat-stepper [linear]=\"isLinear\" #stepper>\r\n  <mat-step [stepControl]=\"empresaForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Empresa</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-empresa-form></app-empresa-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"plantaForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Planta</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-empresa-planta-form></app-empresa-planta-form>\r\n  </mat-step>\r\n</mat-stepper>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { HttpServiceService } from 'src/app/service/http-service.service';\r\nimport { Chart, registerables } from 'node_modules/chart.js';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { UtilsService } from 'src/app/service/utils.service';\r\nChart.register(...registerables);\r\n\r\n@Component({\r\n  selector: 'app-listar-datos',\r\n  templateUrl: './listar-datos.component.html',\r\n  styleUrls: ['./listar-datos.component.css'],\r\n})\r\nexport class ListarDatosComponent implements OnInit, OnDestroy {\r\n  listDatos: any[] = [];\r\n  listDatos2: any[] = [];\r\n  listVariables: any[] = [];\r\n  listCheckbox: any[] = [];\r\n  sensor_1: string = 'sensor 1';\r\n  sensor_2: string = 'sensor 2';\r\n  pulsador: string = 'Pulsador';\r\n  id: any = 0;\r\n  chart: any;\r\n  chart2: any;\r\n  chart3: any;\r\n  title: string = 'Prueba angular';\r\n  timeout: any;\r\n  token: any;\r\n  range = new FormGroup({\r\n    start: new FormControl<Date | null>(null),\r\n    end: new FormControl<Date | null>(null),\r\n  });\r\n\r\n  constructor(\r\n    private _httpService: HttpServiceService,\r\n    private utils: UtilsService,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService\r\n  ) {\r\n    // Preparing the chart data\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getVariables();\r\n    this.chart = new Chart('myChart', {\r\n      type: 'line',\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n    // this.chart2 = new Chart('myChart2', {\r\n    //   type: 'bar',\r\n    //   data: {\r\n    //     labels: [],\r\n    //     datasets: [],\r\n    //   },\r\n    // });\r\n    this.chart3 = new Chart('myChart3', {\r\n      type: 'doughnut',\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n            borderColor: this.getDataColors(),\r\n            backgroundColor: this.getDataColors('20'),\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        plugins: {\r\n          legend: { position: 'left' },\r\n        },\r\n      },\r\n    });\r\n    this.expirationCheck();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.id) {\r\n      clearInterval(this.id);\r\n    }\r\n  }\r\n\r\n  getRegistros() {\r\n    this._httpService\r\n      .getValores(this.listVariables[1]._id)\r\n      .subscribe((data) => {\r\n        this.listDatos = data['datos'];\r\n        console.log('datos: ', this.listDatos);\r\n        this.chart.data.labels = this.listDatos.map((x) =>\r\n          new Date(x._id).toLocaleDateString()\r\n        );\r\n        console.log('despues del for each', this.chart.data.labels);\r\n        this.chart.data.datasets[0].data = this.listDatos.map((x) => x.max);\r\n        this.chart.update();\r\n      });\r\n  }\r\n\r\n  makeCheckboxArray(value: any) {\r\n    let newValue = JSON.parse(value.source._value);\r\n    console.log('chip presionado', newValue);\r\n    if (value.selected == true) {\r\n      this.listCheckbox.push(newValue);\r\n    } else {\r\n      function desmarcar(valor: any) {\r\n        return value.source._value != valor;\r\n      }\r\n      this.listCheckbox = this.listCheckbox.filter((x) => desmarcar(x));\r\n    }\r\n    console.log(this.listCheckbox);\r\n  }\r\n  getVariables() {\r\n    this._httpService.getVariables().subscribe((data) => {\r\n      this.listVariables = data;\r\n      console.log(this.listVariables);\r\n      this.getRegistros();\r\n      this.chart.data.datasets[0].label = this.listVariables[1].nombre;\r\n      // for (let i = 0; i < this.listVariables.length; i++) {\r\n      //   this.chart.data.datasets[i] = {\r\n      //     data: [],\r\n      //     label: [this.listVariables[i].nombre],\r\n      //     fill: false,\r\n      //     borderColor: this.getDataColors(),\r\n      //     backgroundColor: this.getDataColors('20'),\r\n      //     tension: 0.1,\r\n      //   };\r\n      // }\r\n    });\r\n  }\r\n  getFiltrados() {\r\n    var inicio: any = this.range.value.start?.getTime().toString();\r\n    var final: any = this.range.value.end?.getTime().toString();\r\n    this._httpService\r\n      .getValoresFiltrados(this.listVariables[1]._id, inicio, final, 'max')\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this.listDatos2 = data['datos'];\r\n        this.chart3.data.labels = this.listDatos2.map((x) => x._id);\r\n        this.chart3.data.datasets[0].data = this.listDatos2.map(\r\n          (x) => x.respuesta\r\n        );\r\n        this.chart3.update();\r\n        // this.chart2.data.labels = this.listDatos.map((x) => {\r\n        //   x._id;\r\n        // });\r\n\r\n        this.listDatos2.forEach((datos) => {\r\n          const dsColor = this.utils.namedColor(\r\n            this.chart2.data.datasets.length\r\n          );\r\n          var newDataSet = {\r\n            label: 'Dataset ' + (this.chart2.data.datasets.length + 1),\r\n            backgroundColor: this.utils.transparentize(dsColor, 0.5),\r\n            borderColor: dsColor,\r\n            data: [datos.respuesta],\r\n          };\r\n          this.chart2.data.datasets.push(newDataSet);\r\n          this.chart2.data.labels.push(datos._id);\r\n\r\n          this.chart2.update();\r\n          console.log(this.chart2.data.datasets);\r\n          console.log(this.chart2.data.labels);\r\n        });\r\n      });\r\n  }\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.authService.expirationCounter(this.timeout);\r\n  }\r\n  getDataColors = (opacity?: String) => {\r\n    const colors = [\r\n      '#7448c2',\r\n      '#21c0d7',\r\n      '#d99e2b',\r\n      '#cd3a81',\r\n      '#9c99cc',\r\n      '#e14eca',\r\n      '#ffffff',\r\n      '#ff0000',\r\n      '#d6ff00',\r\n      '#0038ff',\r\n    ];\r\n    return colors.map((color) => (opacity ? `${color + opacity}` : color));\r\n  };\r\n}\r\n","<div class=\"grid gap-4 grid-cols-2 p-5\">\r\n  <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2>Corte Extrusora</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart\"></canvas>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <!-- <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2>Bar chart</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart2\"></canvas>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div> -->\r\n\r\n  <div class=\"p-3\">\r\n    <mat-form-field>\r\n      <mat-label>Por favor elija 2 fechas </mat-label>\r\n      <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n        <input matStartDate formControlName=\"start\" placeholder=\"Start date\" />\r\n        <input matEndDate formControlName=\"end\" placeholder=\"End date\" />\r\n      </mat-date-range-input>\r\n      <mat-datepicker-toggle\r\n        matIconSuffix\r\n        [for]=\"picker\"\r\n      ></mat-datepicker-toggle>\r\n      <mat-date-range-picker #picker>\r\n        <mat-date-range-picker-actions>\r\n          <button mat-button matDateRangePickerCancel>Cancel</button>\r\n          <button\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"getFiltrados()\"\r\n            matDateRangePickerApply\r\n          >\r\n            Apply\r\n          </button>\r\n        </mat-date-range-picker-actions>\r\n      </mat-date-range-picker>\r\n    </mat-form-field>\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2>Corte Extrusora</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart3\"></canvas>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  loginForm = this.builder.group({\r\n    username: this.builder.control('', Validators.required),\r\n    password: this.builder.control('', Validators.required),\r\n  });\r\n  userData: any;\r\n\r\n  proceedLogin() {\r\n    this.service.LogIn(this.loginForm.value).subscribe((res) => {\r\n      this.userData = res;\r\n      console.log(this.userData.status);\r\n      console.log(this.userData);\r\n      switch (this.userData.status) {\r\n        case 200:\r\n          if (this.userData['datos'].isActive) {\r\n            // sessionStorage.setItem('token', this.userData.token);\r\n            // sessionStorage.setItem('username', this.userData['datos'].username);\r\n            // sessionStorage.setItem(\r\n            //   'userrole',\r\n            //   this.userData['datos'].role.name\r\n            // );\r\n            // console.log(sessionStorage.getItem('userrole')?.toString());\r\n            this.toastr.success('acceso concedido');\r\n            this.service.storeUserData(\r\n              this.userData.token,\r\n              this.userData['datos'],\r\n              this.userData.rtoken\r\n            );\r\n          } else {\r\n            this.toastr.error(\r\n              'Contactar con administrador',\r\n              'usuario inactivo'\r\n            );\r\n          }\r\n          break;\r\n        case 403:\r\n          this.toastr.error(\r\n            'Credenciales invalidas',\r\n            'usuario o contraseña incorrecta'\r\n          );\r\n          break;\r\n\r\n        default:\r\n          this.toastr.error(\r\n            'Credenciales invalidas',\r\n            'usuario o contraseña incorrecta'\r\n          );\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// if (\r\n//   this.userData['datos'].username === this.loginForm.value.username &&\r\n//   this.userData['datos'].password === this.loginForm.value.password\r\n// ) {\r\n//   if (this.userData['datos'].isActive) {\r\n//     sessionStorage.setItem('token', this.userData.token);\r\n//     sessionStorage.setItem('username', this.userData['datos'].username);\r\n//     sessionStorage.setItem('userrole', this.userData['datos'].role.name);\r\n//     this.router.navigate(['']);\r\n//     this.toastr.success('acceso concedido');\r\n//     console.log(sessionStorage.getItem('userrole')?.toString());\r\n//   } else {\r\n//     this.toastr.error('Contactar con administrador', 'usuario inactivo');\r\n//   }\r\n// } else if (this.userData.status == 403) {\r\n//   console.log('else if');\r\n//   this.toastr.error(\r\n//     'Credenciales invalidas',\r\n//     'usuario o contraseña incorrecta'\r\n//   );\r\n// }\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Login</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"loginForm\"\r\n      (ngSubmit)=\"proceedLogin()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre de usuario</mat-label>\r\n          <input matInput formControlName=\"username\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Contraseña</mat-label>\r\n          <input type=\"password\" matInput formControlName=\"password\" />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Ingresar</button>\r\n        <a routerLink=\"/register\" mat-raised-button color=\"accent\"\r\n          >Nuevo usuario</a\r\n        >\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.minLength(5)])\r\n    ),\r\n    name: this.builder.control('', Validators.required),\r\n    password: this.builder.control(\r\n      '',\r\n      Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(\r\n          '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{8,}'\r\n        ),\r\n      ])\r\n    ),\r\n    email: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.email])\r\n    ),\r\n    role: this.builder.control('64f1f60e918724a5f931d909'),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  proceedRegistration() {\r\n    if (this.registerform.valid) {\r\n      console.log(this.registerform.value);\r\n      this.service.Proceedregister(this.registerform.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else if (res.status == 200) {\r\n            this.toastr.success(\r\n              'Solicitar acceso con el administrador ',\r\n              'Registro exitoso'\r\n            );\r\n            this.router.navigate(['login']);\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.toastr.warning('error', error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Registro</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"proceedRegistration()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre de usuario</mat-label>\r\n          <input matInput formControlName=\"username\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input matInput formControlName=\"name\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Contraseña</mat-label>\r\n          <input type=\"password\" matInput formControlName=\"password\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput formControlName=\"email\" />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Enviar</button>\r\n        <a routerLink=\"/login\" mat-raised-button color=\"accent\"\r\n          >Volver a pantalla de ingreso</a\r\n        >\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-updatepopup',\r\n  templateUrl: './updatepopup.component.html',\r\n  styleUrls: ['./updatepopup.component.css'],\r\n})\r\nexport class UpdatepopupComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private service: AuthService,\r\n    private toastr: ToastrService,\r\n    private dialog: MatDialogRef<UpdatepopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  editData: any;\r\n\r\n  ngOnInit(): void {\r\n    this.service.GetAllRoles().subscribe((res) => {\r\n      console.log('roles', res);\r\n      this.rolelist = res;\r\n    });\r\n    if (this.data.username != null && this.data.username != '') {\r\n      this.service.GetById(this.data.username).subscribe((res) => {\r\n        this.editData = res;\r\n        this.registerform.setValue({\r\n          username: this.editData.username,\r\n          name: this.editData.name,\r\n          password: this.editData.password,\r\n          email: this.editData.email,\r\n          role: this.editData.role,\r\n          isActive: this.editData.isActive,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  rolelist: any;\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(''),\r\n    name: this.builder.control(''),\r\n    password: this.builder.control(''),\r\n    email: this.builder.control(''),\r\n    role: this.builder.control('', Validators.required),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  updateUser() {\r\n    if (this.registerform.valid) {\r\n      this.service\r\n        .UpdateUser(this.registerform.value.username, this.registerform.value)\r\n        .subscribe((res) => {\r\n          this.toastr.success('Updated successfully');\r\n          this.dialog.close();\r\n        });\r\n    } else {\r\n      this.toastr.warning('Please select a role');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Update User</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"updateUser()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Role</mat-label>\r\n          <mat-select formControlName=\"role\">\r\n            <mat-option value=\"\">Select Role </mat-option>\r\n            <mat-option *ngFor=\"let item of rolelist\" [value]=\"item._id\">\r\n              {{ item.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-checkbox formControlName=\"isActive\">Is Active? </mat-checkbox>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Update</button>\r\n        <a mat-dialog-close mat-raised-button color=\"accent\">Close</a>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { UpdatepopupComponent } from '../updatepopup/updatepopup.component';\r\n\r\n@Component({\r\n  selector: 'app-userlisting',\r\n  templateUrl: './userlisting.component.html',\r\n  styleUrls: ['./userlisting.component.css'],\r\n})\r\nexport class UserlistingComponent {\r\n  constructor(private service: AuthService, private dialog: MatDialog) {\r\n    this.LoadUser();\r\n  }\r\n\r\n  userList: any;\r\n  dataSource: any;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  LoadUser() {\r\n    this.service.GetAll().subscribe((res) => {\r\n      this.userList = res;\r\n      this.dataSource = new MatTableDataSource(this.userList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  UpdateUser(username: any) {\r\n    const popup = this.dialog.open(UpdatepopupComponent, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '50%',\r\n      data: {\r\n        username: username,\r\n      },\r\n    });\r\n    popup.afterClosed().subscribe((res) => {\r\n      this.LoadUser();\r\n    });\r\n  }\r\n  displayedColumns: string[] = [\r\n    'username',\r\n    'name',\r\n    'email',\r\n    'status',\r\n    'role',\r\n    'action',\r\n  ];\r\n\r\n  opendialog() {}\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n  <table mat-table matSort [dataSource]=\"dataSource\">\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"username\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>User name</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.username }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>Name</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"email\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>email</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"role\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>Role</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.role.name === \"\" ? \"Unassigned\" : element.role.name }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"status\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>Status</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.isActive ? \"Active\" : \"Inactive\" }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef>Action</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <a\r\n          (click)=\"UpdateUser(element.username)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          >Update</a\r\n        >\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    showFirstLastButtons\r\n    aria-label=\"Select page of periodic elements\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthService } from './service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  rtoken_url = environment.API_URL_RTOKEN;\r\n  rBody = {\r\n    token: sessionStorage.getItem('rtoken')?.toString(),\r\n    user: sessionStorage.getItem('username')?.toString(),\r\n  };\r\n  resData: any;\r\n  timeout: any;\r\n  token: any;\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  refreshToken(): void {\r\n    this.authService.postForm(this.rtoken_url, this.rBody).subscribe((res) => {\r\n      this.resData = res.body;\r\n      console.log(\r\n        'refresh token: ',\r\n        this.rBody,\r\n        'access Token: ',\r\n        this.resData\r\n      );\r\n      console.log('status code: ', res.status);\r\n      this.token = this.resData.accessToken;\r\n      sessionStorage.setItem('token', this.resData.accessToken);\r\n      sessionStorage.setItem('rtoken', this.resData.refreshToken);\r\n      this.timeout =\r\n        this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n        new Date().valueOf();\r\n      this.authService.expirationCounter(this.timeout);\r\n      if (res.status == 200) {\r\n        this.toastr.success('sesion extendida');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Sesion a punto de exipirar</h1>\r\n<div mat-dialog-content>\r\n  <p>Desea continuar con su sesion?</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No</button>\r\n  <button\r\n    class=\"m-3\"\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    mat-button\r\n    (click)=\"refreshToken()\"\r\n    [mat-dialog-close]\r\n    cdkFocusInitial\r\n  >\r\n    De acuerdo\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-empresa-form',\r\n  templateUrl: './empresa-form.component.html',\r\n  styleUrls: ['./empresa-form.component.css'],\r\n})\r\nexport class EmpresaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listLocalidades: any;\r\n  listEmpresas: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlantas = environment.API_URL_PLANTA;\r\n  isOptional = true;\r\n  id_localidad!: string;\r\n  id_empresa!: string;\r\n  empresaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLocalidades();\r\n    this.empresaForm = this.builder.group({\r\n      razon_social: this.builder.control('', Validators.required),\r\n      nombre_fantasia: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n      piso: this.builder.control('', Validators.required),\r\n      deptartamento: this.builder.control('', Validators.required),\r\n      rubro: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.listEmpresas.subscribe(\r\n      (message) => (this.listEmpresas = message)\r\n    );\r\n  }\r\n\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createEmpresa() {\r\n    if (this.empresaForm.valid) {\r\n      console.log(this.empresaForm.value);\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        razon_social: this.empresaForm.value.razon_social,\r\n        nombre_fantasia: this.empresaForm.value.nombre_fantasia,\r\n        calle: this.empresaForm.value.calle,\r\n        altura: this.empresaForm.value.altura,\r\n        piso: this.empresaForm.value.piso,\r\n        deptartamento: this.empresaForm.value.deptartamento,\r\n        rubro: this.empresaForm.value.rubro,\r\n      };\r\n      this.service.postForm(this.apiEmpresas, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Empresa registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n              .subscribe((res: any) => {\r\n                console.log('empresas res after crear: ', res);\r\n                this.listEmpresas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarEmpresa(id: string) {\r\n    console.log(this.apiEmpresas + id);\r\n    this.service.deleteForm(this.apiEmpresas, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Empresa borrada correctamente');\r\n          this.GetAllEmpresas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setEmpresa(id: any, nombre: any) {\r\n    console.log('set empresa', id, 'nombre', nombre);\r\n    this.id_empresa = id;\r\n    this.service.changeMessage(id);\r\n    this.service.empresaSelectedSource.next(id);\r\n    this.GetPlantasByEmpresas();\r\n  }\r\n\r\n  GetPlantasByEmpresas() {\r\n    this.service\r\n      .getForm(this.apiPlantas + this.id_empresa)\r\n      .subscribe((res: any) => {\r\n        console.log('empresa get plantas', res);\r\n        this.service.streamPlantas_EmpresaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Formulario de Empresa</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Lista de Empresas </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"empresaForm\"\r\n            (ngSubmit)=\"createEmpresa()\"\r\n            (submit)=\"empresaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Razon Social</mat-label>\r\n              <input matInput formControlName=\"razon_social\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre Fantasia</mat-label>\r\n              <input matInput formControlName=\"nombre_fantasia\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Piso</mat-label>\r\n              <input matInput formControlName=\"piso\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Deptartamento</mat-label>\r\n              <input matInput formControlName=\"deptartamento\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Rubro</mat-label>\r\n              <input matInput formControlName=\"rubro\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Empresa </mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let empresa of listEmpresas\"\r\n            [value]=\"empresa._id\"\r\n            (click)=\"[setEmpresa(empresa._id, empresa.razon_social)]\"\r\n          >\r\n            <p>{{ empresa.razon_social }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-list role=\"list\" *ngFor=\"let empresa of listEmpresas\">\r\n              <mat-list-item role=\"listitem\">\r\n                {{ empresa.nombre_fantasia }}\r\n                <a\r\n                  (click)=\"borrarEmpresa(empresa._id)\"\r\n                  class=\"m-3\"\r\n                  mat-raised-button\r\n                  color=\"warn\"\r\n                >\r\n                  eliminar\r\n                </a>\r\n              </mat-list-item>\r\n            </mat-list> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-empresa-planta-form',\r\n  templateUrl: './empresa-planta-form.component.html',\r\n  styleUrls: ['./empresa-planta-form.component.css'],\r\n})\r\nexport class EmpresaPlantaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listEmpresas: any;\r\n  listLocalidades: any;\r\n  listPlantas: any;\r\n  id_empresa!: string;\r\n  id_localidad!: string;\r\n  id_planta!: string;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  isOptional = true;\r\n  plantaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLocalidades();\r\n    this.GetAllEmpresas();\r\n    this.plantaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.listPlantas.subscribe(\r\n      (message) => (this.listPlantas = message)\r\n    );\r\n    this.subscription = this.service.empresaSelected.subscribe(\r\n      (message) => (this.id_empresa = message)\r\n    );\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n  }\r\n\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createPlanta() {\r\n    if (this.plantaForm.valid) {\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        id_empresa: this.id_empresa,\r\n        nombre: this.plantaForm.value.nombre,\r\n        calle: this.plantaForm.value.calle,\r\n        altura: this.plantaForm.value.altura,\r\n      };\r\n      console.log(this.plantaForm.value);\r\n      this.service.postForm(this.apiPlanta, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else {\r\n            this.toastr.success('Planta registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiPlanta + this.id_empresa)\r\n              .subscribe((res: any) => {\r\n                this.listPlantas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarPlanta(id: string) {\r\n    console.log(this.apiPlanta + id);\r\n    this.service.deleteForm(this.apiPlanta, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Planta borrada correctamente');\r\n          this.GetAllPlantas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setPlanta(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_planta = id;\r\n    this.service.plantaSelectedSource.next(id);\r\n    this.GetLineaByPlanta();\r\n  }\r\n\r\n  GetLineaByPlanta() {\r\n    this.service\r\n      .getForm(this.apiLinea + this.id_planta)\r\n      .subscribe((res: any) => {\r\n        console.log('planta get lineas', res);\r\n        this.service.streamLinea_PlantaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Formulario de Empresa</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>Formulario de Plantas de empresa</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"plantaForm\"\r\n            (ngSubmit)=\"createPlanta()\"\r\n            (submit)=\"plantaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una planta</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let planta of listPlantas\"\r\n            [value]=\"planta._id\"\r\n            (click)=\"[setPlanta(planta._id, planta.nombre)]\"\r\n          >\r\n            <p>{{ planta.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-linea-produccion-form',\r\n  templateUrl: './linea-produccion-form.component.html',\r\n  styleUrls: ['./linea-produccion-form.component.css'],\r\n})\r\nexport class LineaProduccionFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPlantas: any;\r\n  listLineas: any;\r\n  id_empresa_planta!: string;\r\n  id_linea!: string;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  lineaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPlantas();\r\n    this.lineaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n      identificador: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.listLineas.subscribe(\r\n      (message) => (this.listLineas = message)\r\n    );\r\n    this.subscription = this.service.plantaSelected.subscribe(\r\n      (message) => (this.id_empresa_planta = message)\r\n    );\r\n  }\r\n\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLinea() {\r\n    if (this.lineaForm.valid) {\r\n      console.log(this.lineaForm.value);\r\n      let body = {\r\n        id_empresa_planta: this.id_empresa_planta,\r\n        nombre: this.lineaForm.value.nombre,\r\n        descripcion: this.lineaForm.value.descripcion,\r\n        identificador: this.lineaForm.value.identificador,\r\n      };\r\n      this.service.postForm(this.apiLinea, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Linea de produccion registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiLinea + this.id_empresa_planta)\r\n              .subscribe((res: any) => {\r\n                this.listLineas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLineaProduccion(id: string) {\r\n    console.log(this.apiLinea + id);\r\n    this.service.deleteForm(this.apiLinea, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Linea de produccion borrada correctamente');\r\n          this.GetAllLineas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLinea(id: any, nombre: any) {\r\n    console.log('set linea', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_linea = id;\r\n    this.service.lineaSelectedSource.next(id);\r\n    this.GetMaquinaByLinea();\r\n  }\r\n\r\n  GetMaquinaByLinea() {\r\n    this.service\r\n      .getForm(this.apiMaquina + this.id_linea)\r\n      .subscribe((res: any) => {\r\n        console.log('linea get maquinas', res);\r\n        this.service.streamMaquinas_LineaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Formulario Linea de produccion</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              Formulario de Linea de produccion\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"lineaForm\"\r\n            (ngSubmit)=\"createLinea()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>identificador</mat-label>\r\n              <input matInput formControlName=\"identificador\" />\r\n            </mat-form-field>\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Linea</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let linea of listLineas\"\r\n            [value]=\"linea._id\"\r\n            (click)=\"[setLinea(linea._id, linea.nombre)]\"\r\n          >\r\n            <p>{{ linea.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllLineas()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Lista de Lineas de produccion </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let linea of listLineas\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ linea.descripcion }}\r\n        <a\r\n          (click)=\"borrarLineaProduccion(linea._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-localidad-form',\r\n  templateUrl: './localidad-form.component.html',\r\n  styleUrls: ['./localidad-form.component.css'],\r\n})\r\nexport class LocalidadFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listProvincias: any;\r\n  listLocalidades: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiProvincias = environment.API_URL_PROVINCIAS;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  isOptional = true;\r\n  id_provincia!: string;\r\n  id_localidad!: string;\r\n  localidadForm!: FormGroup;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllProvincias();\r\n    this.localidadForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n    this.subscription2 = this.service.listLocalidades.subscribe(\r\n      (message) => (this.listLocalidades = message)\r\n    );\r\n  }\r\n\r\n  GetAllProvincias() {\r\n    this.service.getForm(this.apiProvincias).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProvincias = res['datos'];\r\n    });\r\n  }\r\n  //no esta en uso\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLocalidad() {\r\n    if (this.localidadForm.valid) {\r\n      console.log(this.localidadForm.value);\r\n      let body = {\r\n        nombre: this.localidadForm.value.nombre,\r\n        id_provincia: this.id_provincia,\r\n      };\r\n      this.service.postForm(this.apiLocalidad, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Localidad registrada correctamente');\r\n            this.service\r\n              .getForm(this.apiLocalidad + this.id_provincia)\r\n              .subscribe((res: any) => {\r\n                this.listLocalidades = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLocalidad(id: string) {\r\n    console.log(this.apiLocalidad + id);\r\n    this.service.deleteForm(this.apiLocalidad, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Localidad borrada correctamente');\r\n          this.GetAllLocalidades();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLocalidad(id: any, nombre: any) {\r\n    console.log('set localidad', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.service.localidadSelectedSource.next(id);\r\n\r\n    this.GetEmpresasByLocalidad();\r\n  }\r\n\r\n  GetEmpresasByLocalidad() {\r\n    this.service\r\n      .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n      .subscribe((res: any) => {\r\n        console.log('Localidad-form get empresas', res);\r\n        this.service.streamEmpresas_LocalidadSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Formulario de Localidad</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>Formulario de Localidades</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"localidadForm\"\r\n            (ngSubmit)=\"createLocalidad()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre de Localidad</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label> Elegir una Localidad </mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let localidad of listLocalidades\"\r\n            [value]=\"localidad._id\"\r\n            (click)=\"[setLocalidad(localidad._id, localidad.nombre)]\"\r\n          >\r\n            <p>{{ localidad.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-maquina-form',\r\n  templateUrl: './maquina-form.component.html',\r\n  styleUrls: ['./maquina-form.component.css'],\r\n})\r\nexport class MaquinaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listLineas: any;\r\n  listTipoMaquina: any;\r\n  listMaquinas: any;\r\n  message: any;\r\n  id_linea_produccion!: string;\r\n  id_tipo_maquina!: string;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  maquinaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLineas();\r\n    this.GetAllTipos();\r\n\r\n    this.maquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      marca: this.builder.control('', Validators.required),\r\n      modelo: this.builder.control('', Validators.required),\r\n      detalle: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.currentMessage.subscribe(\r\n      (message) => (this.message = message)\r\n    );\r\n    this.subscription = this.service.listMaquinas.subscribe(\r\n      (message) => (this.listMaquinas = message)\r\n    );\r\n    this.subscription = this.service.lineaSelected.subscribe(\r\n      (message) => (this.id_linea_produccion = message)\r\n    );\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => (this.id_tipo_maquina = message)\r\n    );\r\n  }\r\n\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n  GetAllTipos() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquinas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createMaquina() {\r\n    if (this.maquinaForm.valid) {\r\n      console.log(this.maquinaForm.value);\r\n      let body = {\r\n        id_linea_produccion: this.id_linea_produccion,\r\n        id_tipo_maquina: this.id_tipo_maquina,\r\n        nombre: this.maquinaForm.value.nombre,\r\n        marca: this.maquinaForm.value.marca,\r\n        modelo: this.maquinaForm.value.modelo,\r\n        detalle: this.maquinaForm.value.detalle,\r\n      };\r\n      this.service.postForm(this.apiMaquina, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Maquina registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiMaquina + this.id_linea_produccion)\r\n              .subscribe((res: any) => {\r\n                console.log('res maquina: ', res);\r\n                this.listMaquinas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarMaquina(id: string) {\r\n    console.log(this.apiMaquina + id);\r\n    this.service.deleteForm(this.apiMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Maquina borrada correctamente');\r\n          this.GetAllMaquinas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setMaquina(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamMaquinaSelected(maquina_id: string) {\r\n    this.service.streamMaquinaSelected(maquina_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Formulario Maquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header hideToggle>\r\n            <mat-panel-title>Formulario de maquinas</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"maquinaForm\"\r\n            (ngSubmit)=\"createMaquina()\"\r\n            (submit)=\"maquinaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Marca</mat-label>\r\n              <input matInput formControlName=\"marca\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Modelo</mat-label>\r\n              <input matInput formControlName=\"modelo\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Detalle</mat-label>\r\n              <input matInput formControlName=\"detalle\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una maquina</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let maquina of listMaquinas\"\r\n            [value]=\"maquina._id\"\r\n            (click)=\"\r\n              [\r\n                setMaquina(maquina._id, maquina.nombre),\r\n                StreamMaquinaSelected(maquina._id)\r\n              ]\r\n            \"\r\n          >\r\n            <p>{{ maquina.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllMaquinas()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Lista de tipos de maquina </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let maquina of listMaquinas\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ maquina.nombre }}\r\n        <a\r\n          (click)=\"borrarMaquina(maquina._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-pais-form',\r\n  templateUrl: './pais-form.component.html',\r\n  styleUrls: ['./pais-form.component.css'],\r\n})\r\nexport class PaisFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  isOptional = true;\r\n  paisForm!: FormGroup;\r\n  id_pais!: string;\r\n  message2!: any;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  completed: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPaises();\r\n    this.paisForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.id_pais = message)\r\n    );\r\n  }\r\n  urlPaises = environment.API_URL_PAISES;\r\n\r\n  GetAllPaises() {\r\n    this.service.getForm(this.apiPaises).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPaises = res['datos'];\r\n    });\r\n  }\r\n  createPais() {\r\n    if (this.paisForm.valid) {\r\n      console.log(this.paisForm.value);\r\n      this.service.postForm(this.urlPaises, this.paisForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Pais registrado correctamente');\r\n            this.GetAllPaises();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarPais(id: string) {\r\n    console.log(this.urlPaises + id);\r\n    this.service.deleteForm(this.urlPaises, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Pais borrado correctamente');\r\n          this.GetAllPaises();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setPais(id: any, nombre: any) {\r\n    console.log('set pais', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.service.paisSelectedSource.next(id);\r\n    this.GetProvinciasByPais();\r\n  }\r\n\r\n  GetProvinciasByPais() {\r\n    console.log('pais nombre', this.id_pais);\r\n\r\n    this.service\r\n      .getForm(this.apiProvincia + this.id_pais)\r\n      .subscribe((res: any) => {\r\n        console.log('pais form get provincias', res);\r\n        this.service.streamProvincias_PaisSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Formulario de país</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Formulario de pais </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"paisForm\"\r\n            (ngSubmit)=\"createPais()\"\r\n            (submit)=\"paisForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre de pais</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un pais</mat-label>\r\n\r\n        <mat-select (click)=\"GetAllPaises()\" (selectionChange)=\"(!completed)\">\r\n          <mat-option\r\n            *ngFor=\"let pais of listPaises\"\r\n            [value]=\"pais._id\"\r\n            (click)=\"[setPais(pais._id, pais.nombre)]\"\r\n          >\r\n            <p>{{ pais.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-proceso-form',\r\n  templateUrl: './proceso-form.component.html',\r\n  styleUrls: ['./proceso-form.component.css'],\r\n})\r\nexport class ProcesoFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  procesoForm!: FormGroup;\r\n  listProceso: any;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllProcesos();\r\n    this.procesoForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProceso = res['datos'];\r\n    });\r\n  }\r\n\r\n  crearProceso() {\r\n    if (this.procesoForm.valid) {\r\n      console.log(this.procesoForm.value);\r\n      this.service.postForm(this.apiProceso, this.procesoForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('proceso registrado correctamente');\r\n            this.GetAllProcesos();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarProcesos(id: string) {\r\n    console.log(this.apiProceso + id);\r\n    this.service.deleteForm(this.apiProceso, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Proceso borrado correctamente');\r\n          this.GetAllProcesos();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setProceso(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamProcesoSelected(proceso_id: string) {\r\n    this.service.streamProcesoSelected(proceso_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Formulario de proceso</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>Formulario de Proceso</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"procesoForm\"\r\n            (ngSubmit)=\"crearProceso()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre del proceso</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Descripcion del proceso</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un proceso</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let proceso of listProceso\"\r\n            [value]=\"proceso._id\"\r\n            (click)=\"\r\n              [\r\n                setProceso(proceso._id, proceso.nombre),\r\n                StreamProcesoSelected(proceso._id)\r\n              ]\r\n            \"\r\n          >\r\n            <p>{{ proceso.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext>Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllProcesos()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Listado de procesos </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let proceso of listProceso\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ proceso.descripcion }}\r\n        <a\r\n          (click)=\"borrarProcesos(proceso._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-provincia-form',\r\n  templateUrl: './provincia-form.component.html',\r\n  styleUrls: ['./provincia-form.component.css'],\r\n})\r\nexport class ProvinciaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  listProvincias: any;\r\n  listProvinciasPais: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  isOptional = true;\r\n  provinciaForm!: FormGroup;\r\n  id_pais!: string;\r\n  id_provincia!: string;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPaises();\r\n    this.provinciaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.id_pais = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n\r\n    this.subscription2 = this.service.listProvincias.subscribe(\r\n      (message) => (this.listProvinciasPais = message)\r\n    );\r\n  }\r\n\r\n  GetAllPaises() {\r\n    this.service.getForm(this.apiPaises).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPaises = res['datos'];\r\n    });\r\n  }\r\n  // no esta en uso\r\n  GetAllProvincias() {\r\n    this.service.getForm(this.apiProvincia).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.listProvincias = res['datos'];\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  createProvincia() {\r\n    if (this.provinciaForm.valid) {\r\n      console.log(this.provinciaForm.value);\r\n      let body = {\r\n        nombre: this.provinciaForm.value.nombre,\r\n        id_pais: this.id_pais,\r\n      };\r\n      this.service.postForm(this.apiProvincia, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 200) {\r\n            this.toastr.success('provincia registrada correctamente');\r\n            this.service\r\n              .getForm(this.apiProvincia + this.id_pais)\r\n              .subscribe((res: any) => {\r\n                this.listProvinciasPais = res;\r\n              });\r\n          } else if (res.status == 403) {\r\n            this.toastr.warning('acceso denegado, token expirado');\r\n          } else {\r\n            this.toastr.warning(res.error.error);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarProvincia(id: string) {\r\n    console.log(this.apiProvincia + id);\r\n    this.service.deleteForm(this.apiProvincia, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Provincia borrada correctamente');\r\n          this.GetAllProvincias();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setProvincia(id: any, nombre: any) {\r\n    console.log('set provincia', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.service.provinciaSelectedSource.next(id);\r\n    this.GetLocalidadesByProvincia();\r\n  }\r\n\r\n  GetLocalidadesByProvincia() {\r\n    this.service\r\n      .getForm(this.apiLocalidad + this.id_provincia)\r\n      .subscribe((res: any) => {\r\n        console.log('provincia form get localidades', res);\r\n\r\n        this.service.streamLocalides_ProvinciaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Formulario de Provincia</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Formulario de provincias </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"provinciaForm\"\r\n            (ngSubmit)=\"createProvincia()\"\r\n            (submit)=\"provinciaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre de provincia</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Provincia</mat-label>\r\n\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let provincia of listProvinciasPais\"\r\n            [value]=\"provincia._id\"\r\n            (click)=\"[setProvincia(provincia._id, provincia.nombre)]\"\r\n          >\r\n            <p>{{ provincia.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-tipo-maquina-form',\r\n  templateUrl: './tipo-maquina-form.component.html',\r\n  styleUrls: ['./tipo-maquina-form.component.css'],\r\n})\r\nexport class TipoMaquinaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  listTipoMaquina: any;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  isOptional = true;\r\n  tipoMaquinaForm!: FormGroup;\r\n  pais: any;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTiposMaquina();\r\n    this.tipoMaquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  createTipoMaquina() {\r\n    if (this.tipoMaquinaForm.valid) {\r\n      console.log(this.tipoMaquinaForm.value);\r\n      this.service\r\n        .postForm(this.apiTipoMaquina, this.tipoMaquinaForm.value)\r\n        .subscribe({\r\n          next: (res: any) => {\r\n            console.log('respuesta: ', res);\r\n            if (res.status == 500) {\r\n              this.toastr.warning(res.error.error);\r\n            } else {\r\n              this.toastr.success('Tipo de maquina registrada correctamente');\r\n              this.GetAllTiposMaquina();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.toastr.error(error);\r\n            console.log(error);\r\n          },\r\n        });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  GetAllTiposMaquina() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n\r\n  borrarTipoMaquina(id: string) {\r\n    console.log(this.apiTipoMaquina + id);\r\n    this.service.deleteForm(this.apiTipoMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Tipo de maquina borrada correctamente');\r\n          this.GetAllTiposMaquina();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTipo(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamTipoSelected(tipo_id: string) {\r\n    this.service.streamTipoSelected(tipo_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Formulario Tipo Maquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Formulario de Tipo de maquina </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"tipoMaquinaForm\"\r\n            (ngSubmit)=\"createTipoMaquina()\"\r\n            (submit)=\"tipoMaquinaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un Tipo de maquina</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let tipo of listTipoMaquina\"\r\n            [value]=\"tipo._id\"\r\n            (click)=\"\r\n              [setTipo(tipo._id, tipo.nombre), StreamTipoSelected(tipo._id)]\r\n            \"\r\n          >\r\n            <p>{{ tipo.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllTiposMaquina()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Lista de tipos de maquina </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let tipoMaquina of listTipoMaquina\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ tipoMaquina.descripcion }}\r\n        <a\r\n          (click)=\"borrarTipoMaquina(tipoMaquina._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-trigger-form',\r\n  templateUrl: './trigger-form.component.html',\r\n  styleUrls: ['./trigger-form.component.css'],\r\n})\r\nexport class TriggerFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  triggerForm!: FormGroup;\r\n  listTriggers: any;\r\n  trigger_descripcion!: string;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTriggers();\r\n    this.triggerForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTriggers = res;\r\n    });\r\n  }\r\n\r\n  crearTrigger() {\r\n    if (this.triggerForm.valid) {\r\n      console.log(this.triggerForm.value);\r\n      this.service.postForm(this.apiTrigger, this.triggerForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Trigger registrado correctamente');\r\n            this.GetAllTriggers();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarTrigger(id: string) {\r\n    console.log(this.apiTrigger + id);\r\n    this.service.deleteForm(this.apiTrigger, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Trigger borrado correctamente');\r\n          this.GetAllTriggers();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTrigger(id: any, nombre: any, descripcion: string) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.trigger_descripcion = descripcion;\r\n  }\r\n\r\n  StreamTriggerSelected(trigger_id: string) {\r\n    this.service.streamTriggerSelected(trigger_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Formulario de Trigger</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un Trigger</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let trigger of listTriggers\">\r\n            <mat-option\r\n              [value]=\"trigger._id\"\r\n              (click)=\"\r\n                [\r\n                  setTrigger(trigger._id, trigger.nombre, trigger.descripcion),\r\n                  StreamTriggerSelected(trigger._id)\r\n                ]\r\n              \"\r\n            >\r\n              <p>{{ trigger.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ trigger.descripcion }}\r\n            </p>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext>Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllTriggers()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Listado de triggers</mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let trigger of listTriggers\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ trigger.nombre }}\r\n        <a\r\n          (click)=\"borrarTrigger(trigger._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-variable-form',\r\n  templateUrl: './variable-form.component.html',\r\n  styleUrls: ['./variable-form.component.css'],\r\n})\r\nexport class VariableFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiVariables = environment.API_URL_VARIABLES;\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  apiMaquinas = environment.API_URL_MAQUINA;\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  variableForm!: FormGroup;\r\n  id_maquina: any;\r\n  id_proceso: any;\r\n  id_trigger: any;\r\n  listProcesos: any;\r\n  listMaquina: any;\r\n  listTrigger: any;\r\n  listaVariables: any;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllVariables();\r\n    this.GetAllProcesos();\r\n    this.GetAllMaquinas();\r\n    this.GetAllTriggers();\r\n    this.variableForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control(''),\r\n      trigger_valor: this._formBuilder.control(''),\r\n    });\r\n    this.subscription = this.service.maquinaSelected.subscribe(\r\n      (message) => (this.id_maquina = message)\r\n    );\r\n    this.subscription = this.service.procesoSelected.subscribe(\r\n      (message) => (this.id_proceso = message)\r\n    );\r\n    this.subscription = this.service.triggerSelected.subscribe(\r\n      (message) => (this.id_trigger = message)\r\n    );\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProcesos = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquinas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTrigger = res;\r\n    });\r\n  }\r\n  GetAllVariables() {\r\n    this.service.getForm(this.apiVariables).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listaVariables = res;\r\n    });\r\n  }\r\n\r\n  crearVariable() {\r\n    if (this.variableForm.valid) {\r\n      console.log(this.variableForm.value);\r\n      let body = {\r\n        id_maquina: this.id_maquina,\r\n        id_proceso: this.id_proceso,\r\n        id_trigger: this.id_trigger,\r\n        nombre: this.variableForm.value.nombre,\r\n        trigger_valor: this.variableForm.value.trigger_valor,\r\n      };\r\n      this.service.postForm(this.apiVariables, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Variable registrada correctamente');\r\n            this.GetAllVariables();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor ingrese datos validos');\r\n    }\r\n  }\r\n\r\n  borrarVariable(id: string) {\r\n    console.log(this.apiVariables + id);\r\n    this.service.deleteForm(this.apiVariables, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Variable borrada correctamente');\r\n          this.GetAllVariables();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Formulario de Variables</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"variableForm\"\r\n      (ngSubmit)=\"crearVariable()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>nombre de la variable </mat-label>\r\n          <input matInput formControlName=\"nombre\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>descripcion de la variable </mat-label>\r\n          <input matInput formControlName=\"descripcion\" />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"\">\r\n          <mat-label>valor del trigger </mat-label>\r\n          <input matInput formControlName=\"trigger_valor\" />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div>\r\n        <mat-accordion>\r\n          <mat-expansion-panel (click)=\"GetAllVariables()\" hideToggle>\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title> Listado de variables</mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n            <mat-list role=\"list\" *ngFor=\"let variable of listaVariables\">\r\n              <mat-list-item role=\"listitem\">\r\n                {{ variable.nombre }}\r\n                <a\r\n                  (click)=\"borrarVariable(variable._id)\"\r\n                  class=\"m-3\"\r\n                  mat-raised-button\r\n                  color=\"warn\"\r\n                >\r\n                  eliminar\r\n                </a>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n      </div>\r\n\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Enviar</button>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { inject } from '@angular/core';\r\nimport { CanActivateFn, Router } from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const authGuard: CanActivateFn = (route, state) => {\r\n  const router = inject(Router);\r\n  const service = inject(AuthService);\r\n  const toastr = inject(ToastrService);\r\n\r\n  if (service.IsLoggedIn()) {\r\n    if (route.url.length > 0) {\r\n      let menu = route.url[0].path;\r\n      if (menu == 'user' || 'home' || 'home2' || 'home3') {\r\n        if (service.getUserRole() == 'admin') {\r\n          return true;\r\n        } else {\r\n          toastr.warning('Acceso restringido, no es administrador');\r\n          router.navigate(['']);\r\n          return false;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  } else {\r\n    router.navigate(['login']);\r\n    return false;\r\n  }\r\n};\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  Subscription,\r\n  catchError,\r\n  delay,\r\n  Observable,\r\n  BehaviorSubject,\r\n  Subject,\r\n  of,\r\n} from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogOverviewExampleDialog } from '../dialog.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private jwtHelper: JwtHelperService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  apiUrl = environment.API_URL_USERS;\r\n  apiRole = environment.API_URL_ROLES;\r\n  authToken: any;\r\n  user: any;\r\n  tokenSubscription = new Subscription();\r\n  tokenSubscription2 = new Subscription();\r\n  timeout?: any;\r\n\r\n  private messageSource = new BehaviorSubject('default message');\r\n  //observables que recogen la respuesta de la llamada a la api\r\n  private provinciasSource = new BehaviorSubject('');\r\n  private localidadesSource = new BehaviorSubject('');\r\n  private empresasSource = new BehaviorSubject('');\r\n  private plantasSource = new BehaviorSubject('');\r\n  private lineaSource = new BehaviorSubject('');\r\n  private maquinaSource = new BehaviorSubject('');\r\n\r\n  //observables que recogen la opcion seleccionada\r\n  paisSelectedSource = new BehaviorSubject('');\r\n  provinciaSelectedSource = new BehaviorSubject('');\r\n  localidadSelectedSource = new BehaviorSubject('');\r\n  empresaSelectedSource = new BehaviorSubject('');\r\n  plantaSelectedSource = new BehaviorSubject('');\r\n  lineaSelectedSource = new BehaviorSubject('');\r\n  tipoMaquinaSelectedSource = new BehaviorSubject('');\r\n  maquinaSelectedSource = new BehaviorSubject('');\r\n  procesoSelectedSource = new BehaviorSubject('');\r\n  triggerSelectedSource = new BehaviorSubject('');\r\n\r\n  currentMessage = this.messageSource.asObservable();\r\n\r\n  // guardamos la respuesta en listas que son accesibles desde los componentes\r\n  listProvincias = this.provinciasSource.asObservable();\r\n  listLocalidades = this.localidadesSource.asObservable();\r\n  listEmpresas = this.empresasSource.asObservable();\r\n  listPlantas = this.plantasSource.asObservable();\r\n  listLineas = this.lineaSource.asObservable();\r\n  listMaquinas = this.maquinaSource.asObservable();\r\n\r\n  // guardamos la opcion seleccionada para que sea accesible a los componentes\r\n  paisSelected = this.paisSelectedSource.asObservable();\r\n  provinciaSelected = this.provinciaSelectedSource.asObservable();\r\n  localidadSelected = this.localidadSelectedSource.asObservable();\r\n  empresaSelected = this.empresaSelectedSource.asObservable();\r\n  plantaSelected = this.plantaSelectedSource.asObservable();\r\n  lineaSelected = this.lineaSelectedSource.asObservable();\r\n  tipoMaquinaSelected = this.tipoMaquinaSelectedSource.asObservable();\r\n  maquinaSelected = this.maquinaSelectedSource.asObservable();\r\n  procesoSelected = this.procesoSelectedSource.asObservable();\r\n  triggerSelected = this.triggerSelectedSource.asObservable();\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '50%',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  // get\r\n\r\n  GetAll() {\r\n    return this.http.get(this.apiUrl);\r\n  }\r\n\r\n  //\r\n\r\n  GetAllRoles() {\r\n    return this.http.get(this.apiRole);\r\n  }\r\n\r\n  GetById(id: any) {\r\n    return this.http.get(this.apiUrl + '/' + id);\r\n  }\r\n\r\n  LogIn(body: any) {\r\n    return this.http.post(this.apiUrl + 'login', body).pipe(\r\n      catchError(async (error) => {\r\n        console.log(error.message);\r\n        return error;\r\n      })\r\n    );\r\n  }\r\n  storeUserData(token: any, user: any, rtoken: any) {\r\n    console.log('storeUserData, user: ', user, 'token: ', token);\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(token)!.valueOf() -\r\n      new Date().valueOf();\r\n    sessionStorage.setItem('token', token);\r\n    sessionStorage.setItem('rtoken', rtoken);\r\n    sessionStorage.setItem('username', user.name);\r\n    sessionStorage.setItem('userrole', user.role.name);\r\n    this.authToken = token;\r\n    this.user = user;\r\n    // this.expirationCounter(this.timeout);\r\n    if (sessionStorage.getItem('userrole') == 'admin') {\r\n      this.router.navigate(['home5']);\r\n    } else {\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n\r\n  expirationCounter(timeout: any) {\r\n    console.log('timeout: ', timeout);\r\n    this.tokenSubscription.unsubscribe();\r\n    this.tokenSubscription = of(null)\r\n      .pipe(delay(timeout))\r\n      .subscribe((expired) => {\r\n        console.log('EXPIRED!!');\r\n        this.dialog.closeAll();\r\n        this.logout();\r\n        this.toastr.error('sesion expirada', 'vuelva a iniciar sesion');\r\n      });\r\n    this.pre_expirationCounter(timeout);\r\n  }\r\n\r\n  pre_expirationCounter(timeout: any) {\r\n    let timeNow = new Date();\r\n    console.log('time now: ', timeNow);\r\n    this.tokenSubscription2.unsubscribe();\r\n    this.tokenSubscription2 = of(null)\r\n      .pipe(delay(timeout - 120000))\r\n      .subscribe(() => {\r\n        this.openDialog();\r\n        console.log('about to expire !!');\r\n      });\r\n  }\r\n  logout() {\r\n    this.tokenSubscription.unsubscribe();\r\n    this.authToken = null;\r\n    this.user = null;\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/login']);\r\n    sessionStorage.setItem('token', '');\r\n    console.log(sessionStorage.getItem('token')?.toString());\r\n  }\r\n\r\n  IsLoggedIn() {\r\n    return sessionStorage.getItem('username') != null;\r\n  }\r\n  getUserRole() {\r\n    return sessionStorage.getItem('userrole') != null\r\n      ? sessionStorage.getItem('userrole')?.toString()\r\n      : '';\r\n  }\r\n  // post\r\n  Proceedregister(inputdata: any) {\r\n    return this.http\r\n      .post(this.apiUrl, inputdata, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  UpdateUser(id: any, inputdata: any) {\r\n    return this.http.post(this.apiUrl + '/' + id, inputdata);\r\n  }\r\n\r\n  // get formularios\r\n  getForm(url: string) {\r\n    return this.http\r\n      .get(url, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          if (error.status == 403) {\r\n            this.router.navigate(['/login']);\r\n          }\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  postForm(url: string, formData: any) {\r\n    return this.http\r\n      .post(url, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  deleteForm(url: string, id: string) {\r\n    return this.http\r\n      .delete(url + 'delete/' + id, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  changeMessage(message: string) {\r\n    console.log('change message: ', message);\r\n    this.messageSource.next(message);\r\n  }\r\n  streamProvincias_PaisSelected(provincias: string) {\r\n    console.log('change message: ', provincias);\r\n    this.provinciasSource.next(provincias);\r\n  }\r\n\r\n  streamLocalides_ProvinciaSelected(localidades: string) {\r\n    console.log('change message: ', localidades);\r\n    this.localidadesSource.next(localidades);\r\n  }\r\n\r\n  streamEmpresas_LocalidadSelected(empresas: string) {\r\n    console.log('change message: ', empresas);\r\n    this.empresasSource.next(empresas);\r\n  }\r\n  streamPlantas_EmpresaSelected(plantas: string) {\r\n    console.log('change message: ', plantas);\r\n    this.plantasSource.next(plantas);\r\n  }\r\n\r\n  streamLinea_PlantaSelected(linea: string) {\r\n    console.log('change message: ', linea);\r\n    this.lineaSource.next(linea);\r\n  }\r\n  streamMaquinas_LineaSelected(Maquinas: string) {\r\n    console.log('change message: ', Maquinas);\r\n    this.maquinaSource.next(Maquinas);\r\n  }\r\n  streamTipoSelected(TipoMaquina: string) {\r\n    console.log('tipo maquina selected: ', TipoMaquina);\r\n    this.tipoMaquinaSelectedSource.next(TipoMaquina);\r\n  }\r\n  streamMaquinaSelected(Maquina: string) {\r\n    console.log('maquina selected: ', Maquina);\r\n    this.maquinaSelectedSource.next(Maquina);\r\n  }\r\n  streamProcesoSelected(proceso: string) {\r\n    console.log('Proceso selected: ', proceso);\r\n    this.procesoSelectedSource.next(proceso);\r\n  }\r\n  streamTriggerSelected(trigger: string) {\r\n    console.log('Trigger selected: ', trigger);\r\n    this.triggerSelectedSource.next(trigger);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpServiceService {\r\n  registroGeneral = environment.API_URL_RGENERAL;\r\n  variables = environment.API_URL_VARIABLES;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getValores(variable: string): Observable<any> {\r\n    return this.http.get(this.registroGeneral + 'all/' + variable, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  getValoresFiltrados(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String,\r\n    operacion: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneral + `filter/${variable}/${inicio}/${fin}/${operacion}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getVariables(): Observable<any> {\r\n    return this.http.get(this.variables, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport colorLib from '@kurkle/color';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilsService {\n  constructor() {}\n  private CHART_COLORS = {\n    red: 'rgb(255, 99, 132)',\n    orange: 'rgb(255, 159, 64)',\n    yellow: 'rgb(255, 205, 86)',\n    green: 'rgb(75, 192, 192)',\n    blue: 'rgb(54, 162, 235)',\n    purple: 'rgb(153, 102, 255)',\n    grey: 'rgb(201, 203, 207)',\n  };\n\n  NAMED_COLORS = [\n    this.CHART_COLORS.red,\n    this.CHART_COLORS.orange,\n    this.CHART_COLORS.yellow,\n    this.CHART_COLORS.green,\n    this.CHART_COLORS.blue,\n    this.CHART_COLORS.purple,\n    this.CHART_COLORS.grey,\n  ];\n\n  namedColor(index: number) {\n    return this.NAMED_COLORS[index % this.NAMED_COLORS.length];\n  }\n  transparentize(value: string, opacity: number) {\n    var alpha = opacity === undefined ? 0.5 : 1 - opacity;\n    return colorLib(value).alpha(alpha).rgbString();\n  }\n}\n","export const environment = {\r\n  production: false,\r\n  API_URL_USERS: 'http://automatismo-dev.ddns.net:3001/api/users/',\r\n  API_URL_ROLES: 'http://automatismo-dev.ddns.net:3001/api/role/',\r\n  API_URL_RGENERAL:\r\n    'http://automatismo-dev.ddns.net:3001/api/registro-general//',\r\n  API_URL_VARIABLES: 'http://automatismo-dev.ddns.net:3001/api/variables/',\r\n  API_URL_PAISES: 'http://automatismo-dev.ddns.net:3001/api/paises/',\r\n  API_URL_PROVINCIAS: 'http://automatismo-dev.ddns.net:3001/api/provincias/',\r\n  API_URL_LOCALIDADES: 'http://automatismo-dev.ddns.net:3001/api/localidad/',\r\n  API_URL_EMPRESAS: 'http://automatismo-dev.ddns.net:3001/api/empresas/',\r\n  API_URL_PLANTA: 'http://automatismo-dev.ddns.net:3001/api/empresa-planta/',\r\n  API_URL_TIPO_MAQUINA:\r\n    'http://automatismo-dev.ddns.net:3001/api/tipo-maquina/',\r\n  API_URL_MAQUINA: 'http://automatismo-dev.ddns.net:3001/api/maquinas/',\r\n  API_URL_LINEA_PRODUCCION:\r\n    'http://automatismo-dev.ddns.net:3001/api/linea-produccion/',\r\n  API_URL_PROCESO: 'http://automatismo-dev.ddns.net:3001/api/proceso/',\r\n  API_URL_TRIGGER: 'http:///automatismo-dev.ddns.net:3001/api/trigger/',\r\n  API_URL_RTOKEN: 'http:///automatismo-dev.ddns.net:3001/api/refresh',\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatStepperModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n"],"names":["RouterModule","ListarDatosComponent","HomeComponent","RegisterComponent","LoginComponent","UserlistingComponent","authGuard","Home2Component","Home3Component","Home4Component","Home5Component","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","i1","exports","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AppComponent_div_0_a_3_Template","AppComponent_div_0_a_4_Template","ɵɵelement","ɵɵlistener","AppComponent_div_0_Template_a_click_6_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","logOut","ɵɵadvance","ɵɵproperty","ctx_r0","isAdminUser","AppComponent","constructor","router","service","title","isMenuRequired","ngDoCheck","currentUrl","url","getUserRole","logout","ɵɵdirectiveInject","Router","i2","AuthService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_div_0_Template","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","BrowserAnimationsModule","MaterialModule","ToastrModule","UpdatepopupComponent","PaisFormComponent","ProvinciaFormComponent","LocalidadFormComponent","EmpresaFormComponent","EmpresaPlantaFormComponent","MaquinaFormComponent","TipoMaquinaFormComponent","LineaProduccionFormComponent","ProcesoFormComponent","VariableFormComponent","JwtModule","TriggerFormComponent","MAT_DATE_LOCALE","tokenGetter","localStorage","getItem","AppModule","bootstrap","provide","useValue","config","allowedDomains","declarations","_formBuilder","isLinear","ngOnInit","paisForm","group","provinciaForm","localidadForm","FormBuilder","Home2Component_Template","Home2Component_ng_template_3_Template","Home2Component_ng_template_6_Template","Home2Component_ng_template_9_Template","tipoMaquinaForm","maquinaForm","lineaForm","Home3Component_Template","Home3Component_ng_template_3_Template","Home3Component_ng_template_6_Template","Home3Component_ng_template_9_Template","procesoForm","variableForm","triggerForm","Home4Component_Template","Home4Component_ng_template_3_Template","Home4Component_ng_template_6_Template","Home4Component_ng_template_9_Template","Home5Component_mat_step_5_ng_template_1_Template","ctx_r2","Home5Component_mat_step_6_ng_template_1_Template","Home5Component_mat_step_7_ng_template_1_Template","ctx_r4","empresaForm","Home5Component_mat_step_8_ng_template_1_Template","ctx_r5","plantaForm","Home5Component_mat_step_9_ng_template_1_Template","ctx_r6","lineaProduccionForm","Home5Component_mat_step_10_ng_template_1_Template","ctx_r7","Home5Component_mat_step_11_ng_template_1_Template","ctx_r8","Home5Component_mat_step_12_ng_template_1_Template","ctx_r9","Home5Component_mat_step_13_ng_template_1_Template","ctx_r10","Home5Component_mat_step_14_ng_template_1_Template","ctx_r11","jwtHelper","isTrue","isPaisCompleted","isProvinciaCompleted","isLocalidadCompleted","isEmpresaCompleted","isPlantaCompleted","isTipoMaquinaCompleted","isLineaProduccionCompleted","isMaquinaCompleted","isProcesoCompleted","isTriggerCompleted","expirationCheck","subscription","paisSelected","subscribe","message","provinciaSelected","localidadSelected","empresaSelected","plantaSelected","lineaSelected","tipoMaquinaSelected","maquinaSelected","procesoSelected","triggerSelected","token","sessionStorage","toString","timeout","getTokenExpirationDate","valueOf","Date","expirationCounter","JwtHelperService","viewQuery","Home5Component_Query","Home5Component_ng_template_3_Template","Home5Component_mat_step_5_Template","Home5Component_mat_step_6_Template","Home5Component_mat_step_7_Template","Home5Component_mat_step_8_Template","Home5Component_mat_step_9_Template","Home5Component_mat_step_10_Template","Home5Component_mat_step_11_Template","Home5Component_mat_step_12_Template","Home5Component_mat_step_13_Template","Home5Component_mat_step_14_Template","HomeComponent_Template","HomeComponent_ng_template_3_Template","HomeComponent_ng_template_6_Template","Chart","registerables","FormControl","FormGroup","register","_httpService","utils","authService","listDatos","listDatos2","listVariables","listCheckbox","sensor_1","sensor_2","pulsador","id","range","start","end","getDataColors","opacity","colors","map","color","getVariables","chart","type","data","labels","datasets","options","scales","y","beginAtZero","chart3","borderColor","backgroundColor","plugins","legend","position","ngOnDestroy","clearInterval","getRegistros","getValores","_id","console","log","x","toLocaleDateString","max","update","makeCheckboxArray","value","newValue","JSON","parse","source","_value","selected","push","desmarcar","valor","filter","label","nombre","getFiltrados","inicio","getTime","final","getValoresFiltrados","respuesta","forEach","datos","dsColor","namedColor","chart2","length","newDataSet","transparentize","HttpServiceService","UtilsService","i3","i4","ListarDatosComponent_Template","ListarDatosComponent_Template_button_click_21_listener","_r0","Validators","builder","toastr","loginForm","username","control","required","password","clear","proceedLogin","LogIn","res","userData","status","isActive","success","storeUserData","rtoken","error","ToastrService","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_5_listener","registerform","compose","minLength","name","pattern","email","role","proceedRegistration","valid","Proceedregister","next","warning","navigate","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_5_listener","MAT_DIALOG_DATA","item_r1","ɵɵtextInterpolate1","dialog","GetAllRoles","rolelist","GetById","editData","setValue","updateUser","UpdateUser","close","MatDialogRef","UpdatepopupComponent_Template","UpdatepopupComponent_Template_form_ngSubmit_5_listener","UpdatepopupComponent_mat_option_13_Template","MatTableDataSource","MatPaginator","MatSort","ɵɵtextInterpolate","element_r14","element_r15","element_r16","element_r17","element_r18","UserlistingComponent_td_19_Template_a_click_1_listener","restoredCtx","_r21","element_r19","$implicit","ctx_r20","displayedColumns","LoadUser","GetAll","userList","dataSource","paginator","sort","popup","open","enterAnimationDuration","exitAnimationDuration","width","afterClosed","opendialog","MatDialog","UserlistingComponent_Query","ɵɵelementContainerStart","UserlistingComponent_th_3_Template","UserlistingComponent_td_4_Template","ɵɵelementContainerEnd","UserlistingComponent_th_6_Template","UserlistingComponent_td_7_Template","UserlistingComponent_th_9_Template","UserlistingComponent_td_10_Template","UserlistingComponent_th_12_Template","UserlistingComponent_td_13_Template","UserlistingComponent_th_15_Template","UserlistingComponent_td_16_Template","UserlistingComponent_th_18_Template","UserlistingComponent_td_19_Template","UserlistingComponent_tr_20_Template","UserlistingComponent_tr_21_Template","ɵɵpureFunction0","_c0","MatButtonModule","MatDialogModule","MatFormFieldModule","MatInputModule","environment","DialogOverviewExampleDialog","dialogRef","rtoken_url","API_URL_RTOKEN","rBody","user","onNoClick","refreshToken","postForm","resData","body","accessToken","setItem","standalone","features","ɵɵStandaloneFeature","DialogOverviewExampleDialog_Template","DialogOverviewExampleDialog_Template_button_click_6_listener","DialogOverviewExampleDialog_Template_button_click_8_listener","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","i5","MatButton","encapsulation","EmpresaFormComponent_mat_option_48_Template_mat_option_click_0_listener","_r3","empresa_r1","setEmpresa","razon_social","apiLocalidad","API_URL_LOCALIDADES","apiEmpresas","API_URL_EMPRESAS","apiPlantas","API_URL_PLANTA","isOptional","GetAllLocalidades","nombre_fantasia","calle","altura","piso","deptartamento","rubro","id_localidad","listEmpresas","getForm","listLocalidades","GetAllEmpresas","createEmpresa","borrarEmpresa","deleteForm","id_empresa","changeMessage","empresaSelectedSource","GetPlantasByEmpresas","streamPlantas_EmpresaSelected","EmpresaFormComponent_Template","EmpresaFormComponent_Template_form_ngSubmit_11_listener","EmpresaFormComponent_Template_form_submit_11_listener","reset","EmpresaFormComponent_mat_option_48_Template","EmpresaPlantaFormComponent_mat_option_32_Template_mat_option_click_0_listener","planta_r1","setPlanta","apiPlanta","apiLinea","API_URL_LINEA_PRODUCCION","listPlantas","GetAllPlantas","createPlanta","borrarPlanta","id_planta","plantaSelectedSource","GetLineaByPlanta","streamLinea_PlantaSelected","EmpresaPlantaFormComponent_Template","EmpresaPlantaFormComponent_Template_form_ngSubmit_11_listener","EmpresaPlantaFormComponent_Template_form_submit_11_listener","EmpresaPlantaFormComponent_mat_option_32_Template","LineaProduccionFormComponent_mat_option_32_Template_mat_option_click_0_listener","linea_r1","setLinea","apiMaquina","API_URL_MAQUINA","descripcion","identificador","listLineas","id_empresa_planta","GetAllLineas","createLinea","borrarLineaProduccion","id_linea","lineaSelectedSource","GetMaquinaByLinea","streamMaquinas_LineaSelected","LineaProduccionFormComponent_Template","LineaProduccionFormComponent_Template_form_ngSubmit_11_listener","LineaProduccionFormComponent_mat_option_32_Template","LocalidadFormComponent_mat_option_24_Template_mat_option_click_0_listener","localidad_r1","setLocalidad","apiProvincias","API_URL_PROVINCIAS","GetAllProvincias","id_provincia","subscription2","listProvincias","createLocalidad","borrarLocalidad","localidadSelectedSource","GetEmpresasByLocalidad","streamEmpresas_LocalidadSelected","LocalidadFormComponent_Template","LocalidadFormComponent_Template_form_ngSubmit_11_listener","LocalidadFormComponent_mat_option_24_Template","MaquinaFormComponent_mat_option_36_Template_mat_option_click_0_listener","maquina_r1","setMaquina","StreamMaquinaSelected","apiTipoMaquina","API_URL_TIPO_MAQUINA","GetAllTipos","marca","modelo","detalle","currentMessage","listMaquinas","id_linea_produccion","id_tipo_maquina","listTipoMaquina","GetAllMaquinas","createMaquina","borrarMaquina","maquina_id","streamMaquinaSelected","MaquinaFormComponent_Template","MaquinaFormComponent_Template_form_ngSubmit_11_listener","MaquinaFormComponent_Template_form_submit_11_listener","MaquinaFormComponent_mat_option_36_Template","PaisFormComponent_mat_option_24_Template_mat_option_click_0_listener","pais_r1","setPais","apiPaises","API_URL_PAISES","apiProvincia","completed","urlPaises","GetAllPaises","id_pais","listPaises","createPais","borrarPais","paisSelectedSource","GetProvinciasByPais","streamProvincias_PaisSelected","PaisFormComponent_Template","PaisFormComponent_Template_form_ngSubmit_11_listener","PaisFormComponent_Template_form_submit_11_listener","PaisFormComponent_Template_mat_select_click_23_listener","PaisFormComponent_Template_mat_select_selectionChange_23_listener","PaisFormComponent_mat_option_24_Template","ProcesoFormComponent_mat_option_28_Template_mat_option_click_0_listener","proceso_r1","setProceso","StreamProcesoSelected","apiProceso","API_URL_PROCESO","GetAllProcesos","listProceso","crearProceso","borrarProcesos","proceso_id","streamProcesoSelected","ProcesoFormComponent_Template","ProcesoFormComponent_Template_form_ngSubmit_11_listener","ProcesoFormComponent_mat_option_28_Template","ProvinciaFormComponent_mat_option_24_Template_mat_option_click_0_listener","provincia_r1","setProvincia","listProvinciasPais","createProvincia","borrarProvincia","provinciaSelectedSource","GetLocalidadesByProvincia","streamLocalides_ProvinciaSelected","ProvinciaFormComponent_Template","ProvinciaFormComponent_Template_form_ngSubmit_11_listener","ProvinciaFormComponent_Template_form_submit_11_listener","ProvinciaFormComponent_mat_option_24_Template","TipoMaquinaFormComponent_mat_option_28_Template_mat_option_click_0_listener","tipo_r1","setTipo","StreamTipoSelected","GetAllTiposMaquina","createTipoMaquina","borrarTipoMaquina","tipo_id","streamTipoSelected","TipoMaquinaFormComponent_Template","TipoMaquinaFormComponent_Template_form_ngSubmit_11_listener","TipoMaquinaFormComponent_Template_form_submit_11_listener","TipoMaquinaFormComponent_mat_option_28_Template","TriggerFormComponent_div_10_Template_mat_option_click_1_listener","trigger_r1","setTrigger","StreamTriggerSelected","apiTrigger","API_URL_TRIGGER","GetAllTriggers","listTriggers","crearTrigger","borrarTrigger","trigger_descripcion","trigger_id","streamTriggerSelected","TriggerFormComponent_Template","TriggerFormComponent_div_10_Template","VariableFormComponent_mat_list_25_Template_a_click_3_listener","variable_r1","borrarVariable","apiVariables","API_URL_VARIABLES","apiMaquinas","GetAllVariables","trigger_valor","id_maquina","id_proceso","id_trigger","listProcesos","listMaquina","listTrigger","listaVariables","crearVariable","VariableFormComponent_Template","VariableFormComponent_Template_form_ngSubmit_5_listener","VariableFormComponent_Template_mat_expansion_panel_click_21_listener","VariableFormComponent_mat_list_25_Template","inject","route","state","IsLoggedIn","menu","Subscription","catchError","delay","BehaviorSubject","of","http","apiUrl","API_URL_USERS","apiRole","API_URL_ROLES","tokenSubscription","tokenSubscription2","messageSource","provinciasSource","localidadesSource","empresasSource","plantasSource","lineaSource","maquinaSource","tipoMaquinaSelectedSource","maquinaSelectedSource","procesoSelectedSource","triggerSelectedSource","asObservable","openDialog","result","get","post","pipe","_ref","_asyncToGenerator","_x","apply","arguments","authToken","unsubscribe","expired","closeAll","pre_expirationCounter","timeNow","inputdata","headers","observe","_ref2","_x2","_this","Authorization","_ref3","_x3","formData","_ref4","_x4","delete","_ref5","_x5","provincias","localidades","empresas","plantas","linea","Maquinas","TipoMaquina","Maquina","proceso","trigger","ɵɵinject","HttpClient","factory","ɵfac","providedIn","registroGeneral","API_URL_RGENERAL","variables","variable","fin","operacion","colorLib","CHART_COLORS","red","orange","yellow","green","blue","purple","grey","NAMED_COLORS","index","alpha","undefined","rgbString","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","MatSelectModule","MatCardModule","MatRadioModule","MatCheckboxModule","MatTableModule","MatPaginatorModule","MatSortModule","MatExpansionModule","MatStepperModule","MatIconModule","MatListModule","MatChipsModule","MatDatepickerModule","MatNativeDateModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}