{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home5/home5.component.ts","./src/app/components/home5/home5.component.html","./src/app/components/listar-datos/listar-datos.component.ts","./src/app/components/listar-datos/listar-datos.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/tabla/tabla.component.ts","./src/app/components/tabla/tabla.component.html","./src/app/components/updatepopup/updatepopup.component.ts","./src/app/components/updatepopup/updatepopup.component.html","./src/app/components/userlisting/userlisting.component.ts","./src/app/components/userlisting/userlisting.component.html","./src/app/dialog.component.ts","./src/app/dialog.component.html","./src/app/forms/empresa-form/empresa-form.component.ts","./src/app/forms/empresa-form/empresa-form.component.html","./src/app/forms/empresa-planta-form/empresa-planta-form.component.ts","./src/app/forms/empresa-planta-form/empresa-planta-form.component.html","./src/app/forms/linea-produccion-form/linea-produccion-form.component.ts","./src/app/forms/linea-produccion-form/linea-produccion-form.component.html","./src/app/forms/localidad-form/localidad-form.component.ts","./src/app/forms/localidad-form/localidad-form.component.html","./src/app/forms/maquina-form/maquina-form.component.ts","./src/app/forms/maquina-form/maquina-form.component.html","./src/app/forms/pais-form/pais-form.component.ts","./src/app/forms/pais-form/pais-form.component.html","./src/app/forms/proceso-form/proceso-form.component.ts","./src/app/forms/proceso-form/proceso-form.component.html","./src/app/forms/provincia-form/provincia-form.component.ts","./src/app/forms/provincia-form/provincia-form.component.html","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.ts","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.html","./src/app/forms/trigger-form/trigger-form.component.ts","./src/app/forms/trigger-form/trigger-form.component.html","./src/app/forms/variable-form/variable-form.component.ts","./src/app/forms/variable-form/variable-form.component.html","./src/app/guard/auth.guard.ts","./src/app/login-modal/login-modal.component.ts","./src/app/login-modal/login-modal.component.html","./src/app/service/auth.service.ts","./src/app/service/http.service.ts","./src/app/service/spinner.service.ts","./src/app/service/utils.service.ts","./src/environments/environment.staging.ts","./src/main.ts","./src/material.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { authGuard } from './guard/auth.guard';\r\n\r\nimport { Home5Component } from './components/home5/home5.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ListarDatosComponent, canActivate: [authGuard] },\r\n  { path: 'home5', component: Home5Component, canActivate: [authGuard] },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'user', component: UserlistingComponent, canActivate: [authGuard] },\r\n  { path: '**', redirectTo: 'login', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, DoCheck, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './service/auth.service';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { HttpService } from './service/http.service';\r\nimport { Subscription, catchError } from 'rxjs';\r\nimport { RegistroFiltrado, Variable } from './models/datos.model';\r\nimport { SpinnerService } from './service/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements DoCheck, OnInit {\r\n  opened: boolean = false;\r\n\r\n  range!: FormGroup;\r\n\r\n  valor!: FormGroup;\r\n  title = 'angular-charts';\r\n  isMenuRequired = false;\r\n  isAdminUser = false;\r\n  listVariables: Variable[] = [];\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  listDatos: RegistroFiltrado[] = [];\r\n  exceedList: any = [];\r\n\r\n  notExceedList2: any = [];\r\n\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private router: Router,\r\n    private service: AuthService,\r\n    private _httpService: HttpService,\r\n    private spinnerService: SpinnerService\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.valor = this.builder.group({\r\n      threshold: new FormControl<number>(25),\r\n    });\r\n    this.range = this.builder.group({\r\n      start: new FormControl<Date | null>(null),\r\n      end: new FormControl<Date | null>(null),\r\n      granularidad: new FormControl<string>('day'),\r\n    });\r\n    this.subscription = this._httpService.listaVariables.subscribe(\r\n      (message) => (this.listVariables = message)\r\n    );\r\n\r\n    this.subscription2 = this._httpService.listaDatosInRange.subscribe(\r\n      (message) => {\r\n        // console.log('app component datos in range: ', message);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    let currentUrl = this.router.url;\r\n    if (currentUrl == '/login' || currentUrl == '/register') {\r\n      this.isMenuRequired = false;\r\n      this.opened = false;\r\n    } else {\r\n      this.isMenuRequired = true;\r\n    }\r\n    if (this.service.getUserRole() === 'admin') {\r\n      this.isAdminUser = true;\r\n    } else {\r\n      this.isAdminUser = false;\r\n    }\r\n  }\r\n  logOut() {\r\n    this.service.logout();\r\n  }\r\n\r\n  getFiltrados() {\r\n    var inicio: any = this.range.value.start?.getTime().toString();\r\n    var final: any = this.range.value.end?.getTime().toString();\r\n    this.spinnerService.llamarSpinner('grafico');\r\n\r\n    this._httpService\r\n      .getValoresFiltrados(this.listVariables[1]._id, inicio, final, 'max')\r\n      .subscribe((data) => {\r\n        // console.log(data);\r\n        this._httpService.stream_RegistroFiltrado(data['datos']);\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n      });\r\n    this._httpService\r\n      .getValoresFiltrados2(\r\n        this.listVariables[1]._id,\r\n        inicio,\r\n        final,\r\n        this.range.value.granularidad\r\n      )\r\n      .subscribe((data) => {\r\n        // console.log(data);\r\n        this._httpService.stream_RegistroFiltrado2(data['datos']);\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n      });\r\n    this.getInRangeTabla();\r\n    this._httpService\r\n      .getValoresFiltrados2(\r\n        this.listVariables[4]._id,\r\n        inicio,\r\n        final,\r\n        this.range.value.granularidad\r\n      )\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this._httpService.stream_Datos3(data['datos']);\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n      });\r\n\r\n    this.opened = false;\r\n  }\r\n\r\n  getInRangeTabla() {\r\n    const notExceedList: any = [];\r\n    this.spinnerService.llamarSpinner('tabla');\r\n    var inicio: any = this.range.value.start?.getTime().toString();\r\n    var final: any = this.range.value.end?.getTime().toString();\r\n    this._httpService\r\n      .getAllInRange(this.listVariables[1]._id, inicio, final)\r\n      .subscribe((data) => {\r\n        this.exceedList = data['datos'].filter((x: any) => {\r\n          return x.valor_lectura > this.valor.value.threshold;\r\n        });\r\n        this.notExceedList2 = data['datos'].filter((n: any) => {\r\n          return n.valor_lectura < this.valor.value.threshold;\r\n        });\r\n        console.log(\r\n          'exceed: ',\r\n          this.exceedList.length,\r\n          'not exceed: ',\r\n          this.notExceedList2.length\r\n        );\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('tabla');\r\n          this._httpService.stream_DatosInRange(this.exceedList);\r\n        }\r\n        myBlock: for (let i = 0; i < this.exceedList.length; i++) {\r\n          // console.log('i es ', i);\r\n          if (i == this.exceedList.length - 1) {\r\n            // console.log('not exceed list: ', notExceedList);\r\n            this.exceedList.map((e: any, index: number) => {\r\n              e.time = this.formatTime(\r\n                new Date(\r\n                  notExceedList[\r\n                    index < notExceedList.length\r\n                      ? index\r\n                      : notExceedList.length - 1\r\n                  ].time_stamp\r\n                ).getTime(),\r\n                new Date(e.time_stamp).getTime()\r\n              );\r\n              e.cTime_stamp = this.formatDate(\r\n                notExceedList[\r\n                  index < notExceedList.length\r\n                    ? index\r\n                    : notExceedList.length - 1\r\n                ].time_stamp\r\n              );\r\n              e.time_stamp = this.formatDate(e.time_stamp);\r\n            });\r\n            this._httpService.stream_DatosInRange(this.exceedList);\r\n          }\r\n          for (let j = 0; j < this.notExceedList2.length; j++) {\r\n            if (\r\n              this.notExceedList2[j].valor_lectura <\r\n                this.valor.value.threshold &&\r\n              new Date(this.notExceedList2[j]?.time_stamp).getTime() >\r\n                new Date(this.exceedList[i]?.time_stamp).getTime()\r\n            ) {\r\n              notExceedList.push(this.notExceedList2[j]);\r\n              continue myBlock;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    this.opened = false;\r\n  }\r\n\r\n  formatTime(notExceed: number, exceed: number) {\r\n    var seconds = (notExceed - exceed) / 1000;\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const remainingSeconds = seconds % 60;\r\n\r\n    const formattedHours = String(hours).padStart(2, '0');\r\n    const formattedMinutes = String(minutes).padStart(2, '0');\r\n    const formattedSeconds = String(remainingSeconds).padStart(2, '0');\r\n\r\n    return `${formattedHours}H ${formattedMinutes}M ${formattedSeconds}S`;\r\n  }\r\n  padTo2Digits(num: number) {\r\n    return num.toString().padStart(2, '0');\r\n  }\r\n\r\n  formatDate(data: string) {\r\n    const date = new Date(data);\r\n    return (\r\n      [\r\n        date.getFullYear(),\r\n        this.padTo2Digits(date.getMonth() + 1),\r\n        this.padTo2Digits(date.getDate()),\r\n      ].join('-') +\r\n      ' ' +\r\n      [\r\n        this.padTo2Digits(date.getHours()),\r\n        this.padTo2Digits(date.getMinutes()),\r\n        this.padTo2Digits(date.getSeconds()),\r\n      ].join(':')\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  :host {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\r\n      \"Segoe UI Symbol\";\r\n    font-size: 14px;\r\n    color: #333;\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n\r\n  /* .spacer {\r\n    flex: 1;\r\n  } */\r\n\r\n  .toolbar {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 60px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #1976d2;\r\n    color: white;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .toolbar img {\r\n    margin: 0 16px;\r\n  }\r\n  /*\r\n  .content {\r\n    margin: 82px auto 32px;\r\n    padding: 0 32px;\r\n    max-width: auto;\r\n   background-color: rgb(223, 215, 215);\r\n  } */\r\n\r\n  svg.material-icons {\r\n    height: 24px;\r\n    width: auto;\r\n  }\r\n\r\n  svg.material-icons:not(:last-child) {\r\n    margin-right: 8px;\r\n  }\r\n\r\n  .card svg.material-icons path {\r\n    fill: #888;\r\n  }\r\n\r\n  .card-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-top: 16px;\r\n  }\r\n\r\n  .card {\r\n    all: unset;\r\n    border-radius: 4px;\r\n    border: 1px solid #eee;\r\n    background-color: #5f5e5e;\r\n    height: 40px;\r\n    width: 200px;\r\n    margin: 0 8px 16px;\r\n    padding: 16px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: all 0.2s ease-in-out;\r\n    line-height: 24px;\r\n  }\r\n\r\n  .card-container .card:not(:last-child) {\r\n    margin-right: 0;\r\n  }\r\n\r\n  .card.card-small {\r\n    height: 16px;\r\n    width: 168px;\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card) {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card):hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card):hover .material-icons path {\r\n    fill: rgb(105, 103, 103);\r\n  }\r\n\r\n  .card.highlight-card {\r\n    background-color: #1976d2;\r\n    color: white;\r\n    font-weight: 600;\r\n    border: none;\r\n    width: auto;\r\n    min-width: 30%;\r\n  }\r\n\r\n  .card.card.highlight-card span {\r\n    margin-left: 60px;\r\n  }\r\n\r\n  svg#rocket {\r\n    width: 80px;\r\n    position: absolute;\r\n    left: -10px;\r\n    top: -24px;\r\n  }\r\n\r\n  svg#rocket-smoke {\r\n    height: calc(100vh - 95px);\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 180px;\r\n    z-index: -10;\r\n  }\r\n\r\n  a,\r\n  a:visited,\r\n  a:hover {\r\n    text-decoration: none;\r\n    padding: 10px;\r\n  }\r\n\r\n  a:hover {\r\n    color: #050505;\r\n  }\r\n\r\n  footer {\r\n    margin-top: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    line-height: 20px;\r\n  }\r\n\r\n  footer a {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  svg#clouds {\r\n    position: fixed;\r\n    bottom: -160px;\r\n    left: -230px;\r\n    z-index: -10;\r\n    width: 1920px;\r\n  }\r\n\r\n  /* Responsive Styles */\r\n  @media screen and (max-width: 767px) {\r\n    .card-container > *:not(.circle-link),\r\n    .terminal {\r\n      width: 100%;\r\n    }\r\n\r\n    .card:not(.highlight-card) {\r\n      height: 16px;\r\n      margin: 8px 0;\r\n    }\r\n\r\n    .card.highlight-card span {\r\n      margin-left: 72px;\r\n    }\r\n\r\n    svg#rocket-smoke {\r\n      right: 120px;\r\n      transform: rotate(-5deg);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 575px) {\r\n    svg#rocket-smoke {\r\n      display: none;\r\n      visibility: hidden;\r\n    }\r\n  }\r\n</style>\r\n<!-- fechas ahora estan puestas en el app component antes en listar datos\r\nvamos a hacer un cambio grande del programa para poder mandar los datos y que funcionen bien \r\nen el otro componente\r\n-->\r\n<mat-sidenav-container>\r\n  <mat-sidenav #sidenav mode=\"side\" [(opened)]=\"opened\">\r\n    <div class=\"p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir 2 fechas </mat-label>\r\n        <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n          <input\r\n            matStartDate\r\n            formControlName=\"start\"\r\n            placeholder=\"Start date\"\r\n          />\r\n          <input matEndDate formControlName=\"end\" placeholder=\"End date\" />\r\n        </mat-date-range-input>\r\n        <mat-datepicker-toggle\r\n          matIconSuffix\r\n          [for]=\"picker\"\r\n        ></mat-datepicker-toggle>\r\n        <mat-date-range-picker #picker>\r\n          <mat-date-range-picker-actions>\r\n            <button mat-button matDateRangePickerCancel>Cancel</button>\r\n            <button\r\n              mat-raised-button\r\n              color=\"primary\"\r\n              (click)=\"getFiltrados()\"\r\n              matDateRangePickerApply\r\n            >\r\n              Aplicar\r\n            </button>\r\n          </mat-date-range-picker-actions>\r\n        </mat-date-range-picker>\r\n      </mat-form-field>\r\n      <mat-icon\r\n        matTooltip=\"Seleccionar 2 fechas para actualizar los contenidos del grafico y la tabla de alertas \"\r\n      >\r\n        help\r\n      </mat-icon>\r\n    </div>\r\n\r\n    <div class=\"p-3\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"valor\"\r\n        (ngSubmit)=\"getInRangeTabla()\"\r\n      >\r\n        <mat-form-field>\r\n          <mat-label>Elegir valor limite </mat-label>\r\n          <input matInput formControlName formControlName=\"threshold\" />\r\n        </mat-form-field>\r\n        <mat-icon\r\n          matTooltip=\"Luego de seleccionar las dos fechas estara disponible el boton para cambiar los limites de la tabla \"\r\n        >\r\n          help\r\n        </mat-icon>\r\n\r\n        <button\r\n          class=\"m-3\"\r\n          [disabled]=\"!range.value.start && !range.value.end\"\r\n          mat-raised-button\r\n          color=\"primary\"\r\n        >\r\n          Enviar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content class=\"fondo\">\r\n    <div class=\"toolbar\" *ngIf=\"isMenuRequired\" role=\"banner\">\r\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n\r\n      <a routerLink=\"/\">Graficos</a>\r\n      <a *ngIf=\"isAdminUser\" routerLink=\"/home5\">Formularios</a>\r\n      <a *ngIf=\"isAdminUser\" routerLink=\"/user\">Usuarios</a>\r\n      <div class=\"spacer\"></div>\r\n      <a style=\"cursor: pointer\" (click)=\"logOut()\">Logout</a>\r\n    </div>\r\n\r\n    <div class=\"content\" role=\"main\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </mat-sidenav-content>\r\n  <!-- Toolbar -->\r\n</mat-sidenav-container>\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\n\r\n// Import FusionCharts library and chart modules\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from 'src/material.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UpdatepopupComponent } from './components/updatepopup/updatepopup.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { PaisFormComponent } from './forms/pais-form/pais-form.component';\r\nimport { ProvinciaFormComponent } from './forms/provincia-form/provincia-form.component';\r\nimport { LocalidadFormComponent } from './forms/localidad-form/localidad-form.component';\r\nimport { EmpresaFormComponent } from './forms/empresa-form/empresa-form.component';\r\nimport { EmpresaPlantaFormComponent } from './forms/empresa-planta-form/empresa-planta-form.component';\r\nimport { MaquinaFormComponent } from './forms/maquina-form/maquina-form.component';\r\nimport { TipoMaquinaFormComponent } from './forms/tipo-maquina-form/tipo-maquina-form.component';\r\nimport { LineaProduccionFormComponent } from './forms/linea-produccion-form/linea-produccion-form.component';\r\nimport { ProcesoFormComponent } from './forms/proceso-form/proceso-form.component';\r\nimport { VariableFormComponent } from './forms/variable-form/variable-form.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { TriggerFormComponent } from './forms/trigger-form/trigger-form.component';\r\nimport { Home5Component } from './components/home5/home5.component';\r\nimport { TablaComponent } from './components/tabla/tabla.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { InterceptorService } from './service/interceptor.service';\nimport { LoginModalComponent } from './login-modal/login-modal.component';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListarDatosComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    UpdatepopupComponent,\r\n    UserlistingComponent,\r\n    PaisFormComponent,\r\n    ProvinciaFormComponent,\r\n    LocalidadFormComponent,\r\n    EmpresaFormComponent,\r\n    EmpresaPlantaFormComponent,\r\n    MaquinaFormComponent,\r\n    TipoMaquinaFormComponent,\r\n    LineaProduccionFormComponent,\r\n    ProcesoFormComponent,\r\n    VariableFormComponent,\r\n    TriggerFormComponent,\r\n    Home5Component,\r\n    TablaComponent,\r\n    LoginModalComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgxSpinnerModule,\r\n    MatTooltipModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: ['localhost'],\r\n      },\r\n    }),\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    ToastrModule.forRoot(),\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatStepper, StepperOrientation } from '@angular/material/stepper';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n  selector: 'app-home5',\r\n  templateUrl: './home5.component.html',\r\n  styleUrls: ['./home5.component.css'],\r\n})\r\nexport class Home5Component implements OnInit {\r\n  @ViewChild('stepper') stepper!: MatStepper;\r\n\r\n  isLinear = true;\r\n\r\n  paisForm!: FormGroup;\r\n  provinciaForm!: FormGroup;\r\n  localidadForm!: FormGroup;\r\n  empresaForm!: FormGroup;\r\n  plantaForm!: FormGroup;\r\n  tipoMaquinaForm!: FormGroup;\r\n  lineaProduccionForm!: FormGroup;\r\n  maquinaForm!: FormGroup;\r\n  procesoForm!: FormGroup;\r\n  triggerForm!: FormGroup;\r\n  timeout: any;\r\n  token: any;\r\n  isTrue: boolean = false;\r\n\r\n  isPaisCompleted: boolean = false;\r\n  isProvinciaCompleted: boolean = false;\r\n  isLocalidadCompleted: boolean = false;\r\n  isEmpresaCompleted: boolean = false;\r\n  isPlantaCompleted: boolean = false;\r\n  isTipoMaquinaCompleted: boolean = false;\r\n  isLineaProduccionCompleted: boolean = false;\r\n  isMaquinaCompleted: boolean = false;\r\n  isProcesoCompleted: boolean = false;\r\n  isTriggerCompleted: boolean = false;\r\n\r\n  subscription!: Subscription;\r\n  stepperOrientation: Observable<StepperOrientation>;\r\n\r\n  constructor(\r\n    private service: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    breakpointObserver: BreakpointObserver\r\n  ) {\r\n    this.stepperOrientation = breakpointObserver\r\n      .observe('(min-width: 800px)')\r\n      .pipe(map(({ matches }) => (matches ? 'horizontal' : 'vertical')));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.expirationCheck();\r\n    this.subscription = this.service.paisSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPaisCompleted = true;\r\n      } else {\r\n        this.isPaisCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.provinciaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProvinciaCompleted = true;\r\n      } else {\r\n        this.isProvinciaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLocalidadCompleted = true;\r\n      } else {\r\n        this.isLocalidadCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.empresaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isEmpresaCompleted = true;\r\n      } else {\r\n        this.isEmpresaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.plantaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPlantaCompleted = true;\r\n      } else {\r\n        this.isPlantaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.lineaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLineaProduccionCompleted = true;\r\n      } else {\r\n        this.isLineaProduccionCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => {\r\n        if (message != '') {\r\n          this.isTipoMaquinaCompleted = true;\r\n        } else {\r\n          this.isTipoMaquinaCompleted = false;\r\n        }\r\n      }\r\n    );\r\n    this.subscription = this.service.maquinaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isMaquinaCompleted = true;\r\n      } else {\r\n        this.isMaquinaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.procesoSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProcesoCompleted = true;\r\n      } else {\r\n        this.isProcesoCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.triggerSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isTriggerCompleted = true;\r\n      } else {\r\n        this.isTriggerCompleted = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.service.expirationCounter(this.timeout);\r\n  }\r\n}\r\n","<mat-stepper\r\n  [orientation]=\"(stepperOrientation | async)!\"\r\n  [linear]=\"isLinear\"\r\n  #stepper\r\n>\r\n  <mat-step [stepControl]=\"paisForm\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>País</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-pais-form></app-pais-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"provinciaForm\" *ngIf=\"isPaisCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Provincia</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-provincia-form></app-provincia-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"localidadForm\" *ngIf=\"isProvinciaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Localidad</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-localidad-form></app-localidad-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"empresaForm\" *ngIf=\"isLocalidadCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Empresa</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-empresa-form></app-empresa-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"plantaForm\" *ngIf=\"isEmpresaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Planta</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-empresa-planta-form></app-empresa-planta-form>\r\n  </mat-step>\r\n\r\n  <mat-step [stepControl]=\"lineaProduccionForm\" *ngIf=\"isPlantaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span\r\n          >Linea de produccion\r\n        </span>\r\n      </div>\r\n    </ng-template>\r\n    <app-linea-produccion-form></app-linea-produccion-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"tipoMaquinaForm\" *ngIf=\"isLineaProduccionCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Tipo de maquina </span>\r\n      </div>\r\n    </ng-template>\r\n    <app-tipo-maquina-form></app-tipo-maquina-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isTipoMaquinaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Maquina</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-maquina-form></app-maquina-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isMaquinaCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Proceso</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-proceso-form></app-proceso-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isProcesoCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Trigger</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-trigger-form></app-trigger-form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"maquinaForm\" *ngIf=\"isTriggerCompleted\">\r\n    <ng-template matStepLabel>\r\n      <div class=\"text-center\">\r\n        <mat-icon>queue_play_next</mat-icon><br /><span>Variable</span>\r\n      </div>\r\n    </ng-template>\r\n    <app-variable-form></app-variable-form>\r\n  </mat-step>\r\n</mat-stepper>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { Chart, registerables } from 'node_modules/chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport {} from 'date-fns/locale';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { UtilsService } from 'src/app/service/utils.service';\r\nimport { Dato, RegistroFiltrado } from 'src/app/models/datos.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\n// import zoomPlugin from 'chartjs-plugin-zoom';\r\nChart.register(...registerables);\r\n\r\n@Component({\r\n  selector: 'app-listar-datos',\r\n  templateUrl: './listar-datos.component.html',\r\n  styleUrls: ['./listar-datos.component.css'],\r\n})\r\nexport class ListarDatosComponent implements OnInit, OnDestroy {\r\n  listDatos: any[] = [];\r\n  listDatos2: RegistroFiltrado[] = [];\r\n  listDatos3: any[] = [];\r\n  listVariables: any[] = [];\r\n  listCheckbox: any[] = [];\r\n  todayDate: Date = new Date();\r\n  sixMonthAgoDate!: Date;\r\n  dato!: Dato;\r\n  sensor_1: string = 'sensor 1';\r\n  sensor_2: string = 'sensor 2';\r\n  pulsador: string = 'Pulsador';\r\n  id: any = 0;\r\n  chart: any;\r\n  chart3: any;\r\n\r\n  title: string = 'Prueba angular';\r\n  timeout: any;\r\n  token: any;\r\n  subscription!: Subscription;\r\n  canvasBackgroundColor = {\r\n    id: 'canvasBackgroundColor',\r\n    beforeDraw(chart: any, args: any, pluginOptions: any) {\r\n      const {\r\n        ctx,\r\n        chartArea: { top, bottom, left, right, width },\r\n        scales: { x, y },\r\n      } = chart;\r\n      function bgColors(\r\n        bracketLow: number,\r\n        bracketHigh: number,\r\n        color: string\r\n      ) {\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(\r\n          left,\r\n          y.getPixelForValue(bracketHigh),\r\n          width,\r\n          y.getPixelForValue(bracketLow) - y.getPixelForValue(bracketHigh)\r\n        );\r\n      }\r\n      bgColors(26.5, 35, 'rgba(255, 26, 104, 0.2)');\r\n      bgColors(24, 26.5, 'rgba(75, 192, 192, 0.2)');\r\n      bgColors(0, 24, 'rgba(255, 206, 86, 0.2)');\r\n    },\r\n  };\r\n  decimation: any = {\r\n    id: 'decimation',\r\n    enabled: true,\r\n    algorithm: 'lttb',\r\n    samples: 100,\r\n    threshold: 50,\r\n  };\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private utils: UtilsService,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private spinnerService: SpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.addMonths(this.todayDate, -6);\r\n    this.getVariables();\r\n\r\n    this.chart = new Chart('myChart', {\r\n      type: 'line',\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            yAxisID: 'y',\r\n            data: [],\r\n          },\r\n          {\r\n            data: [],\r\n          },\r\n          {\r\n            yAxisID: 'second-y-axis',\r\n            data: [],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        // hay que arreglar esto para que funcione la data decimation\r\n        // Turn off animations and data parsing for performance\r\n        aspectRatio: 1,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        parsing: false,\r\n        plugins: {\r\n          decimation: this.decimation,\r\n        },\r\n        scales: {\r\n          y: {\r\n            type: 'linear',\r\n            beginAtZero: true,\r\n            ticks: {},\r\n            max: 35,\r\n            grid: {},\r\n          },\r\n          'second-y-axis': {\r\n            type: 'linear',\r\n            position: 'right',\r\n          },\r\n          x: {\r\n            type: 'time',\r\n\r\n            ticks: {\r\n              source: 'auto',\r\n              // Disabled rotation for performance\r\n              maxRotation: 0,\r\n              autoSkip: true,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      plugins: [this.canvasBackgroundColor],\r\n    });\r\n\r\n    this.chart3 = new Chart('myChart3', {\r\n      type: 'doughnut',\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n            borderColor: this.getDataColors(),\r\n            backgroundColor: this.getDataColors('20'),\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        plugins: {\r\n          legend: { position: 'left' },\r\n        },\r\n        maintainAspectRatio: false,\r\n      },\r\n    });\r\n    this.subscription = this._httpService.listaRegistroFiltrado.subscribe(\r\n      (message) => {\r\n        this.listDatos2 = message;\r\n        this.chart3.data.labels = this.listDatos2.map((x) => x._id);\r\n        this.chart3.data.datasets[0].data = this.listDatos2.map((x) => x.avg);\r\n        this.chart3.update();\r\n\r\n        //bar chart\r\n      }\r\n    );\r\n    this.expirationCheck();\r\n\r\n    this.subscription = this._httpService.listaRegistroFiltrado2.subscribe(\r\n      (message) => {\r\n        this.listDatos = message;\r\n        if (this.listDatos.length != 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n        this.chart.data.datasets[0].data = this.listDatos.map(\r\n          (x) =>\r\n            (this.dato = {\r\n              y: parseFloat(x.max.toFixed(2)),\r\n              x: new Date(x._id).getTime() + 10800000,\r\n            })\r\n        );\r\n        this.chart.data.datasets[1].data = this.listDatos.map(\r\n          (x) =>\r\n            (this.dato = {\r\n              y: parseFloat(x.min.toFixed(2)),\r\n              x: new Date(x._id).getTime() + 10800000,\r\n            })\r\n        );\r\n      }\r\n    );\r\n    this.subscription = this._httpService.listaDatos3.subscribe((message) => {\r\n      this.listDatos3 = message;\r\n\r\n      this.chart.data.datasets[2].data = this.listDatos3.map(\r\n        (x) =>\r\n          (this.dato = {\r\n            y: parseFloat(x.max.toFixed(2)),\r\n            x: new Date(x._id).getTime() + 10800000,\r\n          })\r\n      );\r\n      this.chart.update();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.id) {\r\n      clearInterval(this.id);\r\n    }\r\n  }\r\n\r\n  getRegistros() {\r\n    this._httpService\r\n      .getValores(this.listVariables[1]._id)\r\n      .subscribe((data) => {\r\n        this.listDatos = data['datos'];\r\n        this.chart.data.datasets[0].data = this.listDatos\r\n          .map(\r\n            (x) =>\r\n              (this.dato = {\r\n                y: parseFloat(x.max.toFixed(2)),\r\n                x: new Date(x._id).getTime() + 10800000,\r\n              })\r\n          )\r\n          .filter((x) => {\r\n            return x.x > new Date('2023-04-30').getTime();\r\n          });\r\n        this.chart.data.datasets[1].data = this.listDatos\r\n          .map(\r\n            (x) =>\r\n              (this.dato = {\r\n                y: parseFloat(x.min.toFixed(2)),\r\n                x: new Date(x._id).getTime() + 10800000,\r\n              })\r\n          )\r\n          .filter((x) => {\r\n            return x.x > new Date('2023-04-30').getTime();\r\n          });\r\n        this.chart.update();\r\n        console.log('datos: ', this.chart.data.datasets[0].data);\r\n      });\r\n    this._httpService\r\n      .getValores(this.listVariables[4]._id)\r\n      .subscribe((data) => {\r\n        this.listDatos3 = data['datos'];\r\n        this.chart.data.datasets[2].data = this.listDatos3\r\n          .map(\r\n            (x) =>\r\n              (this.dato = {\r\n                y: parseFloat(x.max.toFixed(2)),\r\n                x: new Date(x._id).getTime() + 10800000,\r\n              })\r\n          )\r\n          .filter((x) => {\r\n            return x.x > new Date('2023-04-30').getTime();\r\n          });\r\n        this.chart.update();\r\n        console.log('datos: ', this.chart.data.datasets[2].data);\r\n      });\r\n  }\r\n\r\n  makeCheckboxArray(value: any) {\r\n    let newValue = JSON.parse(value.source._value);\r\n    console.log('chip presionado', newValue);\r\n    if (value.selected == true) {\r\n      this.listCheckbox.push(newValue);\r\n    } else {\r\n      function desmarcar(valor: any) {\r\n        return value.source._value != valor;\r\n      }\r\n      this.listCheckbox = this.listCheckbox.filter((x) => desmarcar(x));\r\n    }\r\n    console.log(this.listCheckbox);\r\n  }\r\n  getVariables() {\r\n    this._httpService.getVariables().subscribe((data) => {\r\n      this._httpService.stream_Variables(data);\r\n      this.listVariables = data;\r\n      console.log(this.listVariables);\r\n      this.getRegistros();\r\n      this.chart.data.datasets[0].label = 'Pressione estrusione max';\r\n      this.chart.data.datasets[1].label = 'Pressione estrusione min';\r\n      this.chart.data.datasets[2].label = 'Corrente motore estrusore max';\r\n      this.getFiltrados();\r\n    });\r\n  }\r\n  getFiltrados() {\r\n    var inicio: any = this.sixMonthAgoDate.getTime().toString();\r\n    var final: any = this.todayDate.getTime().toString();\r\n    this._httpService\r\n      .getValoresFiltrados(this.listVariables[1]._id, inicio, final, 'max')\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this._httpService.stream_RegistroFiltrado(data['datos']);\r\n      });\r\n  }\r\n  getDaysInMonth = (year: number, month: number) =>\r\n    new Date(year, month, 0).getDate();\r\n\r\n  addMonths = (input: Date, months: number) => {\r\n    const date = new Date(input);\r\n    date.setDate(1);\r\n    date.setMonth(date.getMonth() + months);\r\n    date.setDate(\r\n      Math.min(\r\n        input.getDate(),\r\n        this.getDaysInMonth(date.getFullYear(), date.getMonth() + 1)\r\n      )\r\n    );\r\n    this.sixMonthAgoDate = date;\r\n  };\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.authService.expirationCounter(this.timeout);\r\n  }\r\n  getDataColors = (opacity?: String) => {\r\n    const colors = [\r\n      '#7448c2',\r\n      '#21c0d7',\r\n      '#d99e2b',\r\n      '#cd3a81',\r\n      '#9c99cc',\r\n      '#e14eca',\r\n      '#ffffff',\r\n      '#ff0000',\r\n      '#d6ff00',\r\n      '#0038ff',\r\n    ];\r\n    return colors.map((color) => (opacity ? `${color + opacity}` : color));\r\n  };\r\n}\r\n","<div class=\"grid grid-flow-row grid-cols-1 sm:grid-cols-1 p-3 fondo\">\r\n  <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2>Estrusione</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart\"></canvas>\r\n        <ngx-spinner\r\n          bdColor=\"rgba(51,51,51,0.8)\"\r\n          size=\"medium\"\r\n          color=\"#fff\"\r\n          type=\"ball-spin-clockwise\"\r\n          [fullScreen]=\"false\"\r\n          name=\"grafico\"\r\n        >\r\n        </ngx-spinner>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"grid grid-flow-row grid-cols-1 sm:grid-cols-2 p-3 fondo\">\r\n  <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2>Presión promedio por mes</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart3\"></canvas>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"p-3\">\r\n    <app-tabla></app-tabla>\r\n  </div>\r\n</div>\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  DoCheck,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  registerForm: any;\r\n  pass: string = '';\r\n  show = false;\r\n  mobile = false;\r\n\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.pass = 'password';\r\n    if (window.screen.width < 500) {\r\n      this.mobile = true;\r\n    }\r\n    this.registerForm = this.builder.group({\r\n      username: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n      ]),\r\n      name: new FormControl('', [Validators.required, Validators.minLength(5)]),\r\n      password: new FormControl(\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n          Validators.pattern(\r\n            `^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[$@$!%*?&])(?!.*?[=?<>()'\"\\/\\&]).{8,20}$`\r\n          ),\r\n        ])\r\n      ),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      role: this.builder.control('64f1f60e918724a5f931d909'),\r\n      isActive: this.builder.control(false),\r\n    });\r\n  }\r\n\r\n  showDiv = {\r\n    Login: true,\r\n    Register: false,\r\n  };\r\n\r\n  loginForm = this.builder.group({\r\n    username: this.builder.control('', Validators.required),\r\n    password: this.builder.control('', Validators.required),\r\n  });\r\n\r\n  userData: any;\r\n\r\n  proceedLogin() {\r\n    this.service.LogIn(this.loginForm.value).subscribe((res) => {\r\n      this.userData = res;\r\n      console.log(this.userData.status);\r\n      console.log(this.userData);\r\n      switch (this.userData.status) {\r\n        case 200:\r\n          if (this.userData['datos'].isActive) {\r\n            this.toastr.success('acceso concedido');\r\n            this.service.storeUserData(\r\n              this.userData.token,\r\n              this.userData['datos'],\r\n              this.userData.rtoken\r\n            );\r\n          } else {\r\n            this.toastr.error(\r\n              'Contactar con administrador',\r\n              'usuario inactivo'\r\n            );\r\n          }\r\n          break;\r\n        case 403:\r\n          this.service.openDialog2();\r\n          break;\r\n\r\n        default:\r\n          this.service.openDialog2();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  proceedRegistration() {\r\n    if (this.registerForm.valid) {\r\n      console.log(this.registerForm.value);\r\n      this.service.Proceedregister(this.registerForm.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else if (res.status == 200) {\r\n            this.toastr.success(\r\n              'Solicitar acceso con el administrador ',\r\n              'Registro exitoso'\r\n            );\r\n            this.mostrarLogin();\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.toastr.warning('error', error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  mostrarLogin() {\r\n    this.showDiv.Login = true;\r\n    this.showDiv.Register = false;\r\n    this.show = false;\r\n    this.pass = 'password';\r\n  }\r\n  mostrarRegistro() {\r\n    this.showDiv.Register = true;\r\n    this.showDiv.Login = false;\r\n    this.show = false;\r\n    this.pass = 'password';\r\n  }\r\n\r\n  get password() {\r\n    return this.registerForm.get('password')!;\r\n  }\r\n  showPass() {\r\n    if (this.pass === 'password') {\r\n      this.pass = 'text';\r\n      this.show = true;\r\n    } else {\r\n      this.pass = 'password';\r\n      this.show = false;\r\n    }\r\n  }\r\n}\r\n","<div class=\"grid grid-flow-row-dense grid-cols-1 sm:grid-cols-2\">\r\n  <div *ngIf=\"!mobile\" class=\"row-span-1 col-span-1\">\r\n    <img src=\"assets/g850.png\" alt=\"\" class=\"login\" />\r\n  </div>\r\n\r\n  <div class=\"row-span-1 col-span-1\">\r\n    <div class=\"carta flex flex-col col-span-1\" *ngIf=\"showDiv.Login\">\r\n      <div class=\"logo\">\r\n        <img\r\n          src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n          alt=\"\"\r\n          class=\"lintec_logo m-5\"\r\n        />\r\n        <h2 class=\"titulo\">Iniciar sesión</h2>\r\n      </div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"loginForm\"\r\n        (ngSubmit)=\"proceedLogin()\"\r\n      >\r\n        <div class=\"flex flex-col\">\r\n          <mat-form-field class=\"m-input\">\r\n            <input matInput placeholder=\"Usuario\" formControlName=\"username\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              [type]=\"pass\"\r\n              matInput\r\n              placeholder=\"Contraseña\"\r\n              formControlName=\"password\"\r\n            />\r\n            <a\r\n              matSuffix\r\n              style=\"cursor: pointer\"\r\n              (click)=\"showPass()\"\r\n              class=\"p-2\"\r\n            >\r\n              <mat-icon *ngIf=\"!show\">visibility</mat-icon>\r\n              <mat-icon *ngIf=\"show\">visibility_off</mat-icon>\r\n            </a>\r\n          </mat-form-field>\r\n          <div class=\"space-y-[10vh] 2xl:space-y-[40vh]\">\r\n            <button\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !loginForm.value.username || !loginForm.value.password\r\n              \"\r\n              class=\"boton2\"\r\n            >\r\n              Ingresar\r\n            </button>\r\n            <a mat-raised-button (click)=\"mostrarRegistro()\" class=\"boton\">\r\n              Registrar Usuario\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"carta col-span-1\" *ngIf=\"showDiv.Register\">\r\n      <div class=\"logo\">\r\n        <img\r\n          src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n          alt=\"\"\r\n          class=\"lintec_logo m-5 p-3\"\r\n        />\r\n        <h2 class=\"titulo\">Registro de usuario</h2>\r\n      </div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"registerForm\"\r\n        (ngSubmit)=\"[proceedRegistration(), registerForm.reset()]\"\r\n      >\r\n        <div class=\"flex flex-col p-5\">\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Nombre de usuario\"\r\n              formControlName=\"username\"\r\n            />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Nombre y apellido\"\r\n              formControlName=\"name\"\r\n            />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input matInput placeholder=\"Email\" formControlName=\"email\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              [type]=\"pass\"\r\n              matInput\r\n              placeholder=\"Contraseña\"\r\n              formControlName=\"password\"\r\n            />\r\n            <a\r\n              matSuffix\r\n              style=\"cursor: pointer\"\r\n              (click)=\"showPass()\"\r\n              class=\"p-2\"\r\n            >\r\n              <mat-icon *ngIf=\"!show\">visibility</mat-icon>\r\n              <mat-icon *ngIf=\"show\">visibility_off</mat-icon>\r\n            </a>\r\n          </mat-form-field>\r\n          <div class=\"m-input\">\r\n            <h2>REQUISITOS</h2>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"!password.value || password.errors?.['pattern'] ?  '' : 'iconFill'\"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n\r\n              <p\r\n                [ngClass]=\"!password.value || password.errors?.['pattern'] ?  '' : 'requisitos'\"\r\n              >\r\n                Al menos una mayúscula\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"!password.value || password.errors?.['minlength'] ?  '' : 'iconFill'\"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n\r\n              <p\r\n                [ngClass]=\"!password.value || password.errors?.['minlength'] ?  '' : 'requisitos'\"\r\n              >\r\n                8 caracteres mínimo\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"!password.value || password.errors?.['pattern'] ?  '' : 'iconFill'\"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n              <p\r\n                [ngClass]=\"!password.value || password.errors?.['pattern'] ?  '' : 'requisitos'\"\r\n              >\r\n                Al menos un caracter especial\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"!password.value || password.errors?.['pattern'] ?  '' : 'iconFill'\"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n              <p\r\n                [ngClass]=\"!password.value || password.errors?.['pattern'] ?  '' : 'requisitos'\"\r\n              >\r\n                Al menos 1 número\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"flex flex-col justify-between space-y-6\">\r\n            <button\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !registerForm.value.username ||\r\n                !registerForm.value.password ||\r\n                !registerForm.value.name ||\r\n                !registerForm.value.email\r\n              \"\r\n              class=\"boton2\"\r\n            >\r\n              Enviar\r\n            </button>\r\n\r\n            <a (click)=\"mostrarLogin()\" id=\"volver\"> Volver </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.minLength(5)])\r\n    ),\r\n    name: this.builder.control('', Validators.required),\r\n    password: this.builder.control(\r\n      '',\r\n      Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(\r\n          '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{8,}'\r\n        ),\r\n      ])\r\n    ),\r\n    email: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.email])\r\n    ),\r\n    role: this.builder.control('64f1f60e918724a5f931d909'),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  proceedRegistration() {\r\n    if (this.registerform.valid) {\r\n      console.log(this.registerform.value);\r\n      this.service.Proceedregister(this.registerform.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else if (res.status == 200) {\r\n            this.toastr.success(\r\n              'Solicitar acceso con el administrador ',\r\n              'Registro exitoso'\r\n            );\r\n            this.router.navigate(['login']);\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.toastr.warning('error', error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Registro</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"proceedRegistration()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre de usuario</mat-label>\r\n          <input matInput formControlName=\"username\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input matInput formControlName=\"name\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Contraseña</mat-label>\r\n          <input type=\"password\" matInput formControlName=\"password\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput formControlName=\"email\" />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Enviar</button>\r\n        <a routerLink=\"/login\" mat-raised-button color=\"accent\"\r\n          >Volver a pantalla de ingreso</a\r\n        >\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subscription } from 'rxjs';\nimport { CSVDato } from 'src/app/models/datos.model';\nimport { HttpService } from 'src/app/service/http.service';\nimport { SpinnerService } from 'src/app/service/spinner.service';\n\n@Component({\n  selector: 'app-tabla',\n  templateUrl: './tabla.component.html',\n  styleUrls: ['./tabla.component.css'],\n})\nexport class TablaComponent implements OnInit {\n  constructor(\n    private service: HttpService,\n    private spinnerService: SpinnerService\n  ) {}\n  exceedList: any = [];\n  dataSource: any;\n  listVariables: any = [];\n  subscription!: Subscription;\n  csv: any = '';\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  ngOnInit(): void {\n    this.subscription = this.service.listaDatosInRange.subscribe((message) => {\n      this.exceedList = message;\n\n      // console.log('prueba filter: ', this.removeDuplicates(this.exceedList));\n\n      this.dataSource = new MatTableDataSource(\n        this.removeDuplicates(this.exceedList)\n      );\n      if (this.exceedList.length != 0) {\n        this.spinnerService.detenerSpinner('tabla');\n      }\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  removeDuplicates(data: any) {\n    const ids = data.map(\n      ({ cTime_stamp }: { cTime_stamp: any }) => cTime_stamp\n    );\n    const filtered = data.filter(\n      ({ cTime_stamp }: { cTime_stamp: any }, index: number) =>\n        ids.includes(cTime_stamp, index + 1)\n    );\n\n    return filtered;\n  }\n  downloadCSV() {\n    let csvList: CSVDato[];\n    csvList = this.removeDuplicates(this.exceedList).map((e: any) => ({\n      valor_lectura: e.valor_lectura,\n      tiempo_inicio: e.time_stamp,\n      tiempo_fin: e.cTime_stamp,\n      diferencia: e.time,\n    }));\n\n    for (let row = 0; row < csvList.length; row++) {\n      let keysAmount = Object.keys(csvList[row]).length;\n      let keysCounter = 0;\n\n      // If this is the first row, generate the headings\n      if (row === 0) {\n        // Loop each property of the object\n        for (let key in csvList[row]) {\n          // This is to not add a comma at the last cell\n          // The '\\n' adds a new line\n          this.csv += key + (keysCounter + 1 < keysAmount ? ',' : '\\r\\n');\n          keysCounter++;\n        }\n      } else {\n        for (let key in csvList[row]) {\n          this.csv +=\n            csvList[row][key] + (keysCounter + 1 < keysAmount ? ',' : '\\r\\n');\n          keysCounter++;\n        }\n      }\n\n      keysCounter = 0;\n    }\n    console.log('csv: ', this.csv);\n    let link = document.createElement('a');\n    link.id = 'download-csv';\n    link.setAttribute(\n      'href',\n      'data:text/plain;charset=utf-8,' + encodeURIComponent(this.csv)\n    );\n    link.setAttribute('download', 'alertas_data.csv');\n    document.body.appendChild(link);\n    link.click();\n  }\n\n  displayedColumns: string[] = [\n    'exceed_value',\n    'tiempo_inicio',\n    'tiempo_fin',\n    'diferencia',\n  ];\n}\n","<mat-card class=\"mat-elevation-z8 carta\">\n  <div>\n    <mat-card-header class=\"flex justify-between\">\n      <h2>Alerta de valores excedidos</h2>\n      <button\n        [disabled]=\"exceedList.length == 0\"\n        mat-icon-button\n        (click)=\"downloadCSV()\"\n      >\n        <mat-icon>download</mat-icon>\n      </button>\n    </mat-card-header>\n  </div>\n\n  <mat-card-content>\n    <table mat-table matSort [dataSource]=\"dataSource\">\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"exceed_value\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>\n          Valor Excedido\n        </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.valor_lectura.toFixed(2) }}\n        </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"tiempo_inicio\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>\n          Tiempo de inicio\n        </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.time_stamp }}\n        </td>\n      </ng-container>\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"tiempo_fin\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>Tiempo de fin</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.cTime_stamp }}\n        </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"diferencia\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>\n          Diferencia en tiempo\n        </th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.time }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n    <mat-paginator\n      [pageSizeOptions]=\"[5, 10, 20]\"\n      showFirstLastButtons\n      aria-label=\"Select page of periodic elements\"\n    >\n    </mat-paginator>\n    <ngx-spinner\n      bdColor=\"rgba(51,51,51,0.8)\"\n      size=\"medium\"\n      color=\"#fff\"\n      type=\"ball-spin-clockwise\"\n      [fullScreen]=\"false\"\n      name=\"tabla\"\n    >\n    </ngx-spinner>\n  </mat-card-content>\n</mat-card>\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-updatepopup',\r\n  templateUrl: './updatepopup.component.html',\r\n  styleUrls: ['./updatepopup.component.css'],\r\n})\r\nexport class UpdatepopupComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private service: AuthService,\r\n    private toastr: ToastrService,\r\n    private dialog: MatDialogRef<UpdatepopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  editData: any;\r\n\r\n  ngOnInit(): void {\r\n    this.service.GetAllRoles().subscribe((res) => {\r\n      console.log('roles', res);\r\n      this.rolelist = res;\r\n    });\r\n    if (this.data.username != null && this.data.username != '') {\r\n      this.service.GetById(this.data.username).subscribe((res) => {\r\n        this.editData = res;\r\n        this.registerform.setValue({\r\n          username: this.editData.username,\r\n          name: this.editData.name,\r\n          password: this.editData.password,\r\n          email: this.editData.email,\r\n          role: this.editData.role,\r\n          isActive: this.editData.isActive,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  rolelist: any;\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(''),\r\n    name: this.builder.control(''),\r\n    password: this.builder.control(''),\r\n    email: this.builder.control(''),\r\n    role: this.builder.control('', Validators.required),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  updateUser() {\r\n    if (this.registerform.valid) {\r\n      this.service\r\n        .UpdateUser(this.registerform.value.username, this.registerform.value)\r\n        .subscribe((res) => {\r\n          this.toastr.success('Updated successfully');\r\n          this.dialog.close();\r\n        });\r\n    } else {\r\n      this.toastr.warning('Please select a role');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Update User</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"updateUser()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Role</mat-label>\r\n          <mat-select formControlName=\"role\">\r\n            <mat-option value=\"\">Select Role </mat-option>\r\n            <mat-option *ngFor=\"let item of rolelist\" [value]=\"item._id\">\r\n              {{ item.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-checkbox formControlName=\"isActive\">Is Active? </mat-checkbox>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Update</button>\r\n        <a mat-dialog-close mat-raised-button color=\"accent\">Close</a>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { UpdatepopupComponent } from '../updatepopup/updatepopup.component';\r\n\r\n@Component({\r\n  selector: 'app-userlisting',\r\n  templateUrl: './userlisting.component.html',\r\n  styleUrls: ['./userlisting.component.css'],\r\n})\r\nexport class UserlistingComponent {\r\n  constructor(private service: AuthService, private dialog: MatDialog) {\r\n    this.LoadUser();\r\n  }\r\n\r\n  userList: any;\r\n  dataSource: any;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  LoadUser() {\r\n    this.service.GetAll().subscribe((res) => {\r\n      this.userList = res;\r\n      this.dataSource = new MatTableDataSource(this.userList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  UpdateUser(username: any) {\r\n    const popup = this.dialog.open(UpdatepopupComponent, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '50%',\r\n      data: {\r\n        username: username,\r\n      },\r\n    });\r\n    popup.afterClosed().subscribe((res) => {\r\n      this.LoadUser();\r\n    });\r\n  }\r\n  displayedColumns: string[] = [\r\n    'username',\r\n    'name',\r\n    'email',\r\n    'status',\r\n    'role',\r\n    'action',\r\n  ];\r\n\r\n  opendialog() {}\r\n}\r\n","<div class=\"mat-elevation-z8 carta\">\r\n  <table mat-table matSort [dataSource]=\"dataSource\">\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"username\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>User name</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.username }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>Name</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"email\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>email</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"role\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>Role</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.role.name === \"\" ? \"Unassigned\" : element.role.name }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"status\">\r\n      <th mat-header-cell mat-sort-header *matHeaderCellDef>Status</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.isActive ? \"Active\" : \"Inactive\" }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef>Action</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <a\r\n          (click)=\"UpdateUser(element.username)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          >Update</a\r\n        >\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    showFirstLastButtons\r\n    aria-label=\"Select page of periodic elements\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthService } from './service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  rtoken_url = environment.API_URL_RTOKEN;\r\n  rBody = {\r\n    token: sessionStorage.getItem('rtoken')?.toString(),\r\n    user: sessionStorage.getItem('username')?.toString(),\r\n  };\r\n  resData: any;\r\n  timeout: any;\r\n  token: any;\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  refreshToken(): void {\r\n    this.authService.postForm(this.rtoken_url, this.rBody).subscribe((res) => {\r\n      this.resData = res.body;\r\n      console.log(\r\n        'refresh token: ',\r\n        this.rBody,\r\n        'access Token: ',\r\n        this.resData\r\n      );\r\n      console.log('status code: ', res.status);\r\n      this.token = this.resData.accessToken;\r\n      sessionStorage.setItem('token', this.resData.accessToken);\r\n      sessionStorage.setItem('rtoken', this.resData.refreshToken);\r\n      this.timeout =\r\n        this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n        new Date().valueOf();\r\n      this.authService.expirationCounter(this.timeout);\r\n      if (res.status == 200) {\r\n        this.toastr.success('sesion extendida');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Sesion a punto de exipirar</h1>\r\n<div mat-dialog-content>\r\n  <p>Desea continuar con su sesion?</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No</button>\r\n  <button\r\n    class=\"m-3\"\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    mat-button\r\n    (click)=\"refreshToken()\"\r\n    [mat-dialog-close]\r\n    cdkFocusInitial\r\n  >\r\n    De acuerdo\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-empresa-form',\r\n  templateUrl: './empresa-form.component.html',\r\n  styleUrls: ['./empresa-form.component.css'],\r\n})\r\nexport class EmpresaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listLocalidades: any;\r\n  listEmpresas: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlantas = environment.API_URL_PLANTA;\r\n  isOptional = true;\r\n  id_localidad!: string;\r\n  id_empresa!: string;\r\n  empresaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLocalidades();\r\n    this.empresaForm = this.builder.group({\r\n      razon_social: this.builder.control('', Validators.required),\r\n      nombre_fantasia: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n      piso: this.builder.control('', Validators.required),\r\n      deptartamento: this.builder.control('', Validators.required),\r\n      rubro: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.listEmpresas.subscribe(\r\n      (message) => (this.listEmpresas = message)\r\n    );\r\n  }\r\n\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createEmpresa() {\r\n    if (this.empresaForm.valid) {\r\n      console.log(this.empresaForm.value);\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        razon_social: this.empresaForm.value.razon_social,\r\n        nombre_fantasia: this.empresaForm.value.nombre_fantasia,\r\n        calle: this.empresaForm.value.calle,\r\n        altura: this.empresaForm.value.altura,\r\n        piso: this.empresaForm.value.piso,\r\n        deptartamento: this.empresaForm.value.deptartamento,\r\n        rubro: this.empresaForm.value.rubro,\r\n      };\r\n      this.service.postForm(this.apiEmpresas, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Empresa registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n              .subscribe((res: any) => {\r\n                console.log('empresas res after crear: ', res);\r\n                this.listEmpresas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarEmpresa(id: string) {\r\n    console.log(this.apiEmpresas + id);\r\n    this.service.deleteForm(this.apiEmpresas, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Empresa borrada correctamente');\r\n          this.GetAllEmpresas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setEmpresa(id: any, nombre: any) {\r\n    console.log('set empresa', id, 'nombre', nombre);\r\n    this.id_empresa = id;\r\n    this.service.changeMessage(id);\r\n    this.service.empresaSelectedSource.next(id);\r\n    this.GetPlantasByEmpresas();\r\n  }\r\n\r\n  GetPlantasByEmpresas() {\r\n    this.service\r\n      .getForm(this.apiPlantas + this.id_empresa)\r\n      .subscribe((res: any) => {\r\n        console.log('empresa get plantas', res);\r\n        this.service.streamPlantas_EmpresaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Empresa</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Lista de Empresas </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"empresaForm\"\r\n            (ngSubmit)=\"createEmpresa()\"\r\n            (submit)=\"empresaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Razon Social</mat-label>\r\n              <input matInput formControlName=\"razon_social\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre Fantasia</mat-label>\r\n              <input matInput formControlName=\"nombre_fantasia\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Piso</mat-label>\r\n              <input matInput formControlName=\"piso\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Deptartamento</mat-label>\r\n              <input matInput formControlName=\"deptartamento\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Rubro</mat-label>\r\n              <input matInput formControlName=\"rubro\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Empresa </mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let empresa of listEmpresas\"\r\n            [value]=\"empresa._id\"\r\n            (click)=\"[setEmpresa(empresa._id, empresa.razon_social)]\"\r\n          >\r\n            <p>{{ empresa.razon_social }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-list role=\"list\" *ngFor=\"let empresa of listEmpresas\">\r\n              <mat-list-item role=\"listitem\">\r\n                {{ empresa.nombre_fantasia }}\r\n                <a\r\n                  (click)=\"borrarEmpresa(empresa._id)\"\r\n                  class=\"m-3\"\r\n                  mat-raised-button\r\n                  color=\"warn\"\r\n                >\r\n                  eliminar\r\n                </a>\r\n              </mat-list-item>\r\n            </mat-list> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-empresa-planta-form',\r\n  templateUrl: './empresa-planta-form.component.html',\r\n  styleUrls: ['./empresa-planta-form.component.css'],\r\n})\r\nexport class EmpresaPlantaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listEmpresas: any;\r\n  listLocalidades: any;\r\n  listPlantas: any;\r\n  id_empresa!: string;\r\n  id_localidad!: string;\r\n  id_planta!: string;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  isOptional = true;\r\n  plantaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLocalidades();\r\n    this.GetAllEmpresas();\r\n    this.plantaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.listPlantas.subscribe(\r\n      (message) => (this.listPlantas = message)\r\n    );\r\n    this.subscription = this.service.empresaSelected.subscribe(\r\n      (message) => (this.id_empresa = message)\r\n    );\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n  }\r\n\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createPlanta() {\r\n    if (this.plantaForm.valid) {\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        id_empresa: this.id_empresa,\r\n        nombre: this.plantaForm.value.nombre,\r\n        calle: this.plantaForm.value.calle,\r\n        altura: this.plantaForm.value.altura,\r\n      };\r\n      console.log(this.plantaForm.value);\r\n      this.service.postForm(this.apiPlanta, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else {\r\n            this.toastr.success('Planta registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiPlanta + this.id_empresa)\r\n              .subscribe((res: any) => {\r\n                this.listPlantas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarPlanta(id: string) {\r\n    console.log(this.apiPlanta + id);\r\n    this.service.deleteForm(this.apiPlanta, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Planta borrada correctamente');\r\n          this.GetAllPlantas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setPlanta(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_planta = id;\r\n    this.service.plantaSelectedSource.next(id);\r\n    this.GetLineaByPlanta();\r\n  }\r\n\r\n  GetLineaByPlanta() {\r\n    this.service\r\n      .getForm(this.apiLinea + this.id_planta)\r\n      .subscribe((res: any) => {\r\n        console.log('planta get lineas', res);\r\n        this.service.streamLinea_PlantaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Empresa</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>Formulario de Plantas de empresa</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"plantaForm\"\r\n            (ngSubmit)=\"createPlanta()\"\r\n            (submit)=\"plantaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una planta</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let planta of listPlantas\"\r\n            [value]=\"planta._id\"\r\n            (click)=\"[setPlanta(planta._id, planta.nombre)]\"\r\n          >\r\n            <p>{{ planta.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-linea-produccion-form',\r\n  templateUrl: './linea-produccion-form.component.html',\r\n  styleUrls: ['./linea-produccion-form.component.css'],\r\n})\r\nexport class LineaProduccionFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPlantas: any;\r\n  listLineas: any;\r\n  id_empresa_planta!: string;\r\n  id_linea!: string;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  lineaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPlantas();\r\n    this.lineaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n      identificador: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.listLineas.subscribe(\r\n      (message) => (this.listLineas = message)\r\n    );\r\n    this.subscription = this.service.plantaSelected.subscribe(\r\n      (message) => (this.id_empresa_planta = message)\r\n    );\r\n  }\r\n\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLinea() {\r\n    if (this.lineaForm.valid) {\r\n      console.log(this.lineaForm.value);\r\n      let body = {\r\n        id_empresa_planta: this.id_empresa_planta,\r\n        nombre: this.lineaForm.value.nombre,\r\n        descripcion: this.lineaForm.value.descripcion,\r\n        identificador: this.lineaForm.value.identificador,\r\n      };\r\n      this.service.postForm(this.apiLinea, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Linea de produccion registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiLinea + this.id_empresa_planta)\r\n              .subscribe((res: any) => {\r\n                this.listLineas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLineaProduccion(id: string) {\r\n    console.log(this.apiLinea + id);\r\n    this.service.deleteForm(this.apiLinea, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Linea de produccion borrada correctamente');\r\n          this.GetAllLineas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLinea(id: any, nombre: any) {\r\n    console.log('set linea', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_linea = id;\r\n    this.service.lineaSelectedSource.next(id);\r\n    this.GetMaquinaByLinea();\r\n  }\r\n\r\n  GetMaquinaByLinea() {\r\n    this.service\r\n      .getForm(this.apiMaquina + this.id_linea)\r\n      .subscribe((res: any) => {\r\n        console.log('linea get maquinas', res);\r\n        this.service.streamMaquinas_LineaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario Linea de produccion</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              Formulario de Linea de produccion\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"lineaForm\"\r\n            (ngSubmit)=\"createLinea()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>identificador</mat-label>\r\n              <input matInput formControlName=\"identificador\" />\r\n            </mat-form-field>\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Linea</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let linea of listLineas\"\r\n            [value]=\"linea._id\"\r\n            (click)=\"[setLinea(linea._id, linea.nombre)]\"\r\n          >\r\n            <p>{{ linea.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllLineas()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Lista de Lineas de produccion </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let linea of listLineas\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ linea.descripcion }}\r\n        <a\r\n          (click)=\"borrarLineaProduccion(linea._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-localidad-form',\r\n  templateUrl: './localidad-form.component.html',\r\n  styleUrls: ['./localidad-form.component.css'],\r\n})\r\nexport class LocalidadFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listProvincias: any;\r\n  listLocalidades: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiProvincias = environment.API_URL_PROVINCIAS;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  isOptional = true;\r\n  id_provincia!: string;\r\n  id_localidad!: string;\r\n  localidadForm!: FormGroup;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllProvincias();\r\n    this.localidadForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n    this.subscription2 = this.service.listLocalidades.subscribe(\r\n      (message) => (this.listLocalidades = message)\r\n    );\r\n  }\r\n\r\n  GetAllProvincias() {\r\n    this.service.getForm(this.apiProvincias).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProvincias = res['datos'];\r\n    });\r\n  }\r\n  //no esta en uso\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLocalidad() {\r\n    if (this.localidadForm.valid) {\r\n      console.log(this.localidadForm.value);\r\n      let body = {\r\n        nombre: this.localidadForm.value.nombre,\r\n        id_provincia: this.id_provincia,\r\n      };\r\n      this.service.postForm(this.apiLocalidad, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Localidad registrada correctamente');\r\n            this.service\r\n              .getForm(this.apiLocalidad + this.id_provincia)\r\n              .subscribe((res: any) => {\r\n                this.listLocalidades = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLocalidad(id: string) {\r\n    console.log(this.apiLocalidad + id);\r\n    this.service.deleteForm(this.apiLocalidad, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Localidad borrada correctamente');\r\n          this.GetAllLocalidades();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLocalidad(id: any, nombre: any) {\r\n    console.log('set localidad', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.service.localidadSelectedSource.next(id);\r\n\r\n    this.GetEmpresasByLocalidad();\r\n  }\r\n\r\n  GetEmpresasByLocalidad() {\r\n    this.service\r\n      .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n      .subscribe((res: any) => {\r\n        console.log('Localidad-form get empresas', res);\r\n        this.service.streamEmpresas_LocalidadSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Localidad</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>Formulario de Localidades</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"localidadForm\"\r\n            (ngSubmit)=\"createLocalidad()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre de Localidad</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label> Elegir una Localidad </mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let localidad of listLocalidades\"\r\n            [value]=\"localidad._id\"\r\n            (click)=\"[setLocalidad(localidad._id, localidad.nombre)]\"\r\n          >\r\n            <p>{{ localidad.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-maquina-form',\r\n  templateUrl: './maquina-form.component.html',\r\n  styleUrls: ['./maquina-form.component.css'],\r\n})\r\nexport class MaquinaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listLineas: any;\r\n  listTipoMaquina: any;\r\n  listMaquinas: any;\r\n  message: any;\r\n  id_linea_produccion!: string;\r\n  id_tipo_maquina!: string;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  maquinaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLineas();\r\n    this.GetAllTipos();\r\n\r\n    this.maquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      marca: this.builder.control('', Validators.required),\r\n      modelo: this.builder.control('', Validators.required),\r\n      detalle: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.currentMessage.subscribe(\r\n      (message) => (this.message = message)\r\n    );\r\n    this.subscription = this.service.listMaquinas.subscribe(\r\n      (message) => (this.listMaquinas = message)\r\n    );\r\n    this.subscription = this.service.lineaSelected.subscribe(\r\n      (message) => (this.id_linea_produccion = message)\r\n    );\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => (this.id_tipo_maquina = message)\r\n    );\r\n  }\r\n\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n  GetAllTipos() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquinas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createMaquina() {\r\n    if (this.maquinaForm.valid) {\r\n      console.log(this.maquinaForm.value);\r\n      let body = {\r\n        id_linea_produccion: this.id_linea_produccion,\r\n        id_tipo_maquina: this.id_tipo_maquina,\r\n        nombre: this.maquinaForm.value.nombre,\r\n        marca: this.maquinaForm.value.marca,\r\n        modelo: this.maquinaForm.value.modelo,\r\n        detalle: this.maquinaForm.value.detalle,\r\n      };\r\n      this.service.postForm(this.apiMaquina, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Maquina registrada corectamente');\r\n            this.service\r\n              .getForm(this.apiMaquina + this.id_linea_produccion)\r\n              .subscribe((res: any) => {\r\n                console.log('res maquina: ', res);\r\n                this.listMaquinas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarMaquina(id: string) {\r\n    console.log(this.apiMaquina + id);\r\n    this.service.deleteForm(this.apiMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Maquina borrada correctamente');\r\n          this.GetAllMaquinas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setMaquina(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamMaquinaSelected(maquina_id: string) {\r\n    this.service.streamMaquinaSelected(maquina_id);\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario Maquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header hideToggle>\r\n            <mat-panel-title>Formulario de maquinas</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"maquinaForm\"\r\n            (ngSubmit)=\"createMaquina()\"\r\n            (submit)=\"maquinaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Marca</mat-label>\r\n              <input matInput formControlName=\"marca\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Modelo</mat-label>\r\n              <input matInput formControlName=\"modelo\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Detalle</mat-label>\r\n              <input matInput formControlName=\"detalle\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una maquina</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let maquina of listMaquinas\"\r\n            [value]=\"maquina._id\"\r\n            (click)=\"\r\n              [\r\n                setMaquina(maquina._id, maquina.nombre),\r\n                StreamMaquinaSelected(maquina._id)\r\n              ]\r\n            \"\r\n          >\r\n            <p>{{ maquina.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllMaquinas()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Lista de tipos de maquina </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let maquina of listMaquinas\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ maquina.nombre }}\r\n        <a\r\n          (click)=\"borrarMaquina(maquina._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-pais-form',\r\n  templateUrl: './pais-form.component.html',\r\n  styleUrls: ['./pais-form.component.css'],\r\n})\r\nexport class PaisFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  isOptional = true;\r\n  paisForm!: FormGroup;\r\n  id_pais!: string;\r\n  message2!: any;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  completed: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPaises();\r\n    this.paisForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.id_pais = message)\r\n    );\r\n  }\r\n  urlPaises = environment.API_URL_PAISES;\r\n\r\n  GetAllPaises() {\r\n    this.service.getForm(this.apiPaises).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPaises = res['datos'];\r\n    });\r\n  }\r\n  createPais() {\r\n    if (this.paisForm.valid) {\r\n      console.log(this.paisForm.value);\r\n      this.service.postForm(this.urlPaises, this.paisForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Pais registrado correctamente');\r\n            this.GetAllPaises();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarPais(id: string) {\r\n    console.log(this.urlPaises + id);\r\n    this.service.deleteForm(this.urlPaises, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Pais borrado correctamente');\r\n          this.GetAllPaises();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setPais(id: any, nombre: any) {\r\n    console.log('set pais', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.service.paisSelectedSource.next(id);\r\n    this.GetProvinciasByPais();\r\n  }\r\n\r\n  GetProvinciasByPais() {\r\n    console.log('pais nombre', this.id_pais);\r\n\r\n    this.service\r\n      .getForm(this.apiProvincia + this.id_pais)\r\n      .subscribe((res: any) => {\r\n        console.log('pais form get provincias', res);\r\n        this.service.streamProvincias_PaisSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta mat-elevation-z\">\r\n  <mat-card-header>\r\n    <h2>Formulario de país</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Formulario de pais </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"paisForm\"\r\n            (ngSubmit)=\"createPais()\"\r\n            (submit)=\"paisForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre de pais</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un pais</mat-label>\r\n\r\n        <mat-select (click)=\"GetAllPaises()\" (selectionChange)=\"(!completed)\">\r\n          <mat-option\r\n            *ngFor=\"let pais of listPaises\"\r\n            [value]=\"pais._id\"\r\n            (click)=\"[setPais(pais._id, pais.nombre)]\"\r\n          >\r\n            <p>{{ pais.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-proceso-form',\r\n  templateUrl: './proceso-form.component.html',\r\n  styleUrls: ['./proceso-form.component.css'],\r\n})\r\nexport class ProcesoFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  procesoForm!: FormGroup;\r\n  listProceso: any;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllProcesos();\r\n    this.procesoForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProceso = res['datos'];\r\n    });\r\n  }\r\n\r\n  crearProceso() {\r\n    if (this.procesoForm.valid) {\r\n      console.log(this.procesoForm.value);\r\n      this.service.postForm(this.apiProceso, this.procesoForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('proceso registrado correctamente');\r\n            this.GetAllProcesos();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarProcesos(id: string) {\r\n    console.log(this.apiProceso + id);\r\n    this.service.deleteForm(this.apiProceso, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Proceso borrado correctamente');\r\n          this.GetAllProcesos();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setProceso(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamProcesoSelected(proceso_id: string) {\r\n    this.service.streamProcesoSelected(proceso_id);\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de proceso</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>Formulario de Proceso</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"procesoForm\"\r\n            (ngSubmit)=\"crearProceso()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre del proceso</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Descripcion del proceso</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un proceso</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let proceso of listProceso\"\r\n            [value]=\"proceso._id\"\r\n            (click)=\"\r\n              [\r\n                setProceso(proceso._id, proceso.nombre),\r\n                StreamProcesoSelected(proceso._id)\r\n              ]\r\n            \"\r\n          >\r\n            <p>{{ proceso.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext>Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllProcesos()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Listado de procesos </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let proceso of listProceso\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ proceso.descripcion }}\r\n        <a\r\n          (click)=\"borrarProcesos(proceso._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-provincia-form',\r\n  templateUrl: './provincia-form.component.html',\r\n  styleUrls: ['./provincia-form.component.css'],\r\n})\r\nexport class ProvinciaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  listProvincias: any;\r\n  listProvinciasPais: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  isOptional = true;\r\n  provinciaForm!: FormGroup;\r\n  id_pais!: string;\r\n  id_provincia!: string;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPaises();\r\n    this.provinciaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.id_pais = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n\r\n    this.subscription2 = this.service.listProvincias.subscribe(\r\n      (message) => (this.listProvinciasPais = message)\r\n    );\r\n  }\r\n\r\n  GetAllPaises() {\r\n    this.service.getForm(this.apiPaises).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPaises = res['datos'];\r\n    });\r\n  }\r\n  // no esta en uso\r\n  GetAllProvincias() {\r\n    this.service.getForm(this.apiProvincia).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.listProvincias = res['datos'];\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  createProvincia() {\r\n    if (this.provinciaForm.valid) {\r\n      console.log(this.provinciaForm.value);\r\n      let body = {\r\n        nombre: this.provinciaForm.value.nombre,\r\n        id_pais: this.id_pais,\r\n      };\r\n      this.service.postForm(this.apiProvincia, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 200) {\r\n            this.toastr.success('provincia registrada correctamente');\r\n            this.service\r\n              .getForm(this.apiProvincia + this.id_pais)\r\n              .subscribe((res: any) => {\r\n                this.listProvinciasPais = res;\r\n              });\r\n          } else if (res.status == 403) {\r\n            this.toastr.warning('acceso denegado, token expirado');\r\n          } else {\r\n            this.toastr.warning(res.error.error);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarProvincia(id: string) {\r\n    console.log(this.apiProvincia + id);\r\n    this.service.deleteForm(this.apiProvincia, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Provincia borrada correctamente');\r\n          this.GetAllProvincias();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setProvincia(id: any, nombre: any) {\r\n    console.log('set provincia', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.service.provinciaSelectedSource.next(id);\r\n    this.GetLocalidadesByProvincia();\r\n  }\r\n\r\n  GetLocalidadesByProvincia() {\r\n    this.service\r\n      .getForm(this.apiLocalidad + this.id_provincia)\r\n      .subscribe((res: any) => {\r\n        console.log('provincia form get localidades', res);\r\n\r\n        this.service.streamLocalides_ProvinciaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Provincia</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Formulario de provincias </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"provinciaForm\"\r\n            (ngSubmit)=\"createProvincia()\"\r\n            (submit)=\"provinciaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre de provincia</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Provincia</mat-label>\r\n\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let provincia of listProvinciasPais\"\r\n            [value]=\"provincia._id\"\r\n            (click)=\"[setProvincia(provincia._id, provincia.nombre)]\"\r\n          >\r\n            <p>{{ provincia.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-tipo-maquina-form',\r\n  templateUrl: './tipo-maquina-form.component.html',\r\n  styleUrls: ['./tipo-maquina-form.component.css'],\r\n})\r\nexport class TipoMaquinaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  listTipoMaquina: any;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  isOptional = true;\r\n  tipoMaquinaForm!: FormGroup;\r\n  pais: any;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTiposMaquina();\r\n    this.tipoMaquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  createTipoMaquina() {\r\n    if (this.tipoMaquinaForm.valid) {\r\n      console.log(this.tipoMaquinaForm.value);\r\n      this.service\r\n        .postForm(this.apiTipoMaquina, this.tipoMaquinaForm.value)\r\n        .subscribe({\r\n          next: (res: any) => {\r\n            console.log('respuesta: ', res);\r\n            if (res.status == 500) {\r\n              this.toastr.warning(res.error.error);\r\n            } else {\r\n              this.toastr.success('Tipo de maquina registrada correctamente');\r\n              this.GetAllTiposMaquina();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.toastr.error(error);\r\n            console.log(error);\r\n          },\r\n        });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  GetAllTiposMaquina() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n\r\n  borrarTipoMaquina(id: string) {\r\n    console.log(this.apiTipoMaquina + id);\r\n    this.service.deleteForm(this.apiTipoMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Tipo de maquina borrada correctamente');\r\n          this.GetAllTiposMaquina();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTipo(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamTipoSelected(tipo_id: string) {\r\n    this.service.streamTipoSelected(tipo_id);\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario Tipo Maquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <mat-accordion>\r\n        <mat-expansion-panel hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Formulario de Tipo de maquina </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <form\r\n            class=\"example-form\"\r\n            [formGroup]=\"tipoMaquinaForm\"\r\n            (ngSubmit)=\"createTipoMaquina()\"\r\n            (submit)=\"tipoMaquinaForm.reset()\"\r\n          >\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n            <div class=\"m-1\">\r\n              <button class=\"m-3\" mat-raised-button color=\"primary\">\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un Tipo de maquina</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let tipo of listTipoMaquina\"\r\n            [value]=\"tipo._id\"\r\n            (click)=\"\r\n              [setTipo(tipo._id, tipo.nombre), StreamTipoSelected(tipo._id)]\r\n            \"\r\n          >\r\n            <p>{{ tipo.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext type=\"button\">Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllTiposMaquina()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Lista de tipos de maquina </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let tipoMaquina of listTipoMaquina\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ tipoMaquina.descripcion }}\r\n        <a\r\n          (click)=\"borrarTipoMaquina(tipoMaquina._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-trigger-form',\r\n  templateUrl: './trigger-form.component.html',\r\n  styleUrls: ['./trigger-form.component.css'],\r\n})\r\nexport class TriggerFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  triggerForm!: FormGroup;\r\n  listTriggers: any;\r\n  trigger_descripcion!: string;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTriggers();\r\n    this.triggerForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTriggers = res;\r\n    });\r\n  }\r\n\r\n  crearTrigger() {\r\n    if (this.triggerForm.valid) {\r\n      console.log(this.triggerForm.value);\r\n      this.service.postForm(this.apiTrigger, this.triggerForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Trigger registrado correctamente');\r\n            this.GetAllTriggers();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarTrigger(id: string) {\r\n    console.log(this.apiTrigger + id);\r\n    this.service.deleteForm(this.apiTrigger, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Trigger borrado correctamente');\r\n          this.GetAllTriggers();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTrigger(id: any, nombre: any, descripcion: string) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.trigger_descripcion = descripcion;\r\n  }\r\n\r\n  StreamTriggerSelected(trigger_id: string) {\r\n    this.service.streamTriggerSelected(trigger_id);\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Trigger</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un Trigger</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let trigger of listTriggers\">\r\n            <mat-option\r\n              [value]=\"trigger._id\"\r\n              (click)=\"\r\n                [\r\n                  setTrigger(trigger._id, trigger.nombre, trigger.descripcion),\r\n                  StreamTriggerSelected(trigger._id)\r\n                ]\r\n              \"\r\n            >\r\n              <p>{{ trigger.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ trigger.descripcion }}\r\n            </p>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <button mat-button matStepperNext>Siguiente</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<!-- <mat-accordion>\r\n  <mat-expansion-panel (click)=\"GetAllTriggers()\" hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> Listado de triggers</mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-list role=\"list\" *ngFor=\"let trigger of listTriggers\">\r\n      <mat-list-item role=\"listitem\">\r\n        {{ trigger.nombre }}\r\n        <a\r\n          (click)=\"borrarTrigger(trigger._id)\"\r\n          class=\"m-3\"\r\n          mat-raised-button\r\n          color=\"warn\"\r\n        >\r\n          eliminar\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-expansion-panel>\r\n</mat-accordion> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-variable-form',\r\n  templateUrl: './variable-form.component.html',\r\n  styleUrls: ['./variable-form.component.css'],\r\n})\r\nexport class VariableFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiVariables = environment.API_URL_VARIABLES;\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  apiMaquinas = environment.API_URL_MAQUINA;\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  variableForm!: FormGroup;\r\n  id_maquina: any;\r\n  id_proceso: any;\r\n  id_trigger: any;\r\n  listProcesos: any;\r\n  listMaquina: any;\r\n  listTrigger: any;\r\n  listaVariables: any;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllVariables();\r\n    this.GetAllProcesos();\r\n    this.GetAllMaquinas();\r\n    this.GetAllTriggers();\r\n    this.variableForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control(''),\r\n      trigger_valor: this._formBuilder.control(''),\r\n    });\r\n    this.subscription = this.service.maquinaSelected.subscribe(\r\n      (message) => (this.id_maquina = message)\r\n    );\r\n    this.subscription = this.service.procesoSelected.subscribe(\r\n      (message) => (this.id_proceso = message)\r\n    );\r\n    this.subscription = this.service.triggerSelected.subscribe(\r\n      (message) => (this.id_trigger = message)\r\n    );\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProcesos = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquinas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTrigger = res;\r\n    });\r\n  }\r\n  GetAllVariables() {\r\n    this.service.getForm(this.apiVariables).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listaVariables = res;\r\n    });\r\n  }\r\n\r\n  crearVariable() {\r\n    if (this.variableForm.valid) {\r\n      console.log(this.variableForm.value);\r\n      let body = {\r\n        id_maquina: this.id_maquina,\r\n        id_proceso: this.id_proceso,\r\n        id_trigger: this.id_trigger,\r\n        nombre: this.variableForm.value.nombre,\r\n        trigger_valor: this.variableForm.value.trigger_valor,\r\n        time_stamp: new Date(),\r\n      };\r\n      this.service.postForm(this.apiVariables, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Variable registrada correctamente');\r\n            this.GetAllVariables();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor ingrese datos validos');\r\n    }\r\n  }\r\n\r\n  borrarVariable(id: string) {\r\n    console.log(this.apiVariables + id);\r\n    this.service.deleteForm(this.apiVariables, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Variable borrada correctamente');\r\n          this.GetAllVariables();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"carta\">\r\n  <mat-card-header>\r\n    <h2>Formulario de Variables</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"variableForm\"\r\n      (ngSubmit)=\"crearVariable()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>nombre de la variable </mat-label>\r\n          <input matInput formControlName=\"nombre\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>descripcion de la variable </mat-label>\r\n          <input matInput formControlName=\"descripcion\" />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"\">\r\n          <mat-label>valor del trigger </mat-label>\r\n          <input matInput formControlName=\"trigger_valor\" />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div>\r\n        <mat-accordion>\r\n          <mat-expansion-panel (click)=\"GetAllVariables()\" hideToggle>\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title> Listado de variables</mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n            <mat-list role=\"list\" *ngFor=\"let variable of listaVariables\">\r\n              <mat-list-item role=\"listitem\">\r\n                {{ variable.nombre }}\r\n                <a\r\n                  (click)=\"borrarVariable(variable._id)\"\r\n                  class=\"m-3\"\r\n                  mat-raised-button\r\n                  color=\"warn\"\r\n                >\r\n                  eliminar\r\n                </a>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n      </div>\r\n\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Enviar</button>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { inject } from '@angular/core';\r\nimport { CanActivateFn, Router } from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const authGuard: CanActivateFn = (route, state) => {\r\n  const router = inject(Router);\r\n  const service = inject(AuthService);\r\n  const toastr = inject(ToastrService);\r\n\r\n  if (service.IsLoggedIn()) {\r\n    if (route.url.length > 0) {\r\n      let menu = route.url[0].path;\r\n      if (menu == 'user') {\r\n        if (service.getUserRole() == 'admin') {\r\n          return true;\r\n        } else {\r\n          toastr.warning('Acceso restringido, no es administrador');\r\n          router.navigate(['']);\r\n          return false;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  } else {\r\n    router.navigate(['login']);\r\n    return false;\r\n  }\r\n};\r\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-login-modal',\n  templateUrl: './login-modal.component.html',\n  styleUrls: ['./login-modal.component.css'],\n})\nexport class LoginModalComponent {\n  constructor(public dialogRef: MatDialogRef<LoginModalComponent>) {}\n\n  cerrar(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"flex flex-col card\">\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"80\"\n    height=\"80\"\n    viewBox=\"0 0 80 80\"\n    fill=\"none\"\n    class=\"icono\"\n  >\n    <g clip-path=\"url(#clip0_139_508)\">\n      <path\n        d=\"M40 0C32.0888 0 24.3552 2.34596 17.7772 6.74122C11.1992 11.1365 6.07234 17.3836 3.04484 24.6927C0.0173314 32.0017 -0.774802 40.0444 0.768607 47.8036C2.31202 55.5629 6.12165 62.6902 11.7157 68.2843C17.3098 73.8784 24.4372 77.688 32.1964 79.2314C39.9556 80.7748 47.9983 79.9827 55.3074 76.9552C62.6164 73.9277 68.8635 68.8008 73.2588 62.2228C77.6541 55.6448 80 47.9113 80 40C79.9885 29.3949 75.7706 19.2274 68.2716 11.7284C60.7727 4.22943 50.6052 0.0114703 40 0ZM40 73.3333C33.4073 73.3333 26.9626 71.3784 21.481 67.7157C15.9994 64.0529 11.727 58.847 9.20403 52.7561C6.68111 46.6652 6.021 39.963 7.30718 33.497C8.59335 27.031 11.768 21.0915 16.4298 16.4298C21.0915 11.768 27.031 8.59333 33.497 7.30716C39.963 6.02098 46.6653 6.6811 52.7561 9.20402C58.847 11.7269 64.053 15.9994 67.7157 21.481C71.3784 26.9626 73.3334 33.4073 73.3334 40C73.3236 48.8376 69.8086 57.3104 63.5595 63.5595C57.3104 69.8086 48.8376 73.3236 40 73.3333Z\"\n        fill=\"#C82D3B\"\n      />\n      <path\n        d=\"M40 16.6667C39.1159 16.6667 38.2681 17.0179 37.6429 17.643C37.0178 18.2681 36.6666 19.116 36.6666 20V46.6667C36.6666 47.5507 37.0178 48.3986 37.6429 49.0237C38.2681 49.6488 39.1159 50 40 50C40.884 50 41.7319 49.6488 42.357 49.0237C42.9821 48.3986 43.3333 47.5507 43.3333 46.6667V20C43.3333 19.116 42.9821 18.2681 42.357 17.643C41.7319 17.0179 40.884 16.6667 40 16.6667Z\"\n        fill=\"#C82D3B\"\n      />\n      <path\n        d=\"M43.3333 60C43.3333 58.159 41.8409 56.6666 40 56.6666C38.159 56.6666 36.6666 58.159 36.6666 60C36.6666 61.8409 38.159 63.3333 40 63.3333C41.8409 63.3333 43.3333 61.8409 43.3333 60Z\"\n        fill=\"#C82D3B\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_139_508\">\n        <rect width=\"80\" height=\"80\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n  <h1 mat-dialog-title class=\"titulo\">Credenciales inválidas</h1>\n  <div mat-dialog-content>\n    <p>Usuario o contraseña incorrecta</p>\n  </div>\n  <button mat-button class=\"boton\" (click)=\"cerrar()\">\n    Intentar nuevamente\n  </button>\n</div>\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  Subscription,\r\n  catchError,\r\n  delay,\r\n  Observable,\r\n  BehaviorSubject,\r\n  Subject,\r\n  of,\r\n} from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogOverviewExampleDialog } from '../dialog.component';\r\nimport { LoginModalComponent } from '../login-modal/login-modal.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private jwtHelper: JwtHelperService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  apiUrl = environment.API_URL_USERS;\r\n  apiRole = environment.API_URL_ROLES;\r\n  authToken: any;\r\n  user: any;\r\n  tokenSubscription = new Subscription();\r\n  tokenSubscription2 = new Subscription();\r\n  timeout?: any;\r\n\r\n  private messageSource = new BehaviorSubject('default message');\r\n  //observables que recogen la respuesta de la llamada a la api\r\n  private provinciasSource = new BehaviorSubject('');\r\n  private localidadesSource = new BehaviorSubject('');\r\n  private empresasSource = new BehaviorSubject('');\r\n  private plantasSource = new BehaviorSubject('');\r\n  private lineaSource = new BehaviorSubject('');\r\n  private maquinaSource = new BehaviorSubject('');\r\n\r\n  //observables que recogen la opcion seleccionada\r\n  paisSelectedSource = new BehaviorSubject('');\r\n  provinciaSelectedSource = new BehaviorSubject('');\r\n  localidadSelectedSource = new BehaviorSubject('');\r\n  empresaSelectedSource = new BehaviorSubject('');\r\n  plantaSelectedSource = new BehaviorSubject('');\r\n  lineaSelectedSource = new BehaviorSubject('');\r\n  tipoMaquinaSelectedSource = new BehaviorSubject('');\r\n  maquinaSelectedSource = new BehaviorSubject('');\r\n  procesoSelectedSource = new BehaviorSubject('');\r\n  triggerSelectedSource = new BehaviorSubject('');\r\n\r\n  currentMessage = this.messageSource.asObservable();\r\n\r\n  // guardamos la respuesta en listas que son accesibles desde los componentes\r\n  listProvincias = this.provinciasSource.asObservable();\r\n  listLocalidades = this.localidadesSource.asObservable();\r\n  listEmpresas = this.empresasSource.asObservable();\r\n  listPlantas = this.plantasSource.asObservable();\r\n  listLineas = this.lineaSource.asObservable();\r\n  listMaquinas = this.maquinaSource.asObservable();\r\n\r\n  // guardamos la opcion seleccionada para que sea accesible a los componentes\r\n  paisSelected = this.paisSelectedSource.asObservable();\r\n  provinciaSelected = this.provinciaSelectedSource.asObservable();\r\n  localidadSelected = this.localidadSelectedSource.asObservable();\r\n  empresaSelected = this.empresaSelectedSource.asObservable();\r\n  plantaSelected = this.plantaSelectedSource.asObservable();\r\n  lineaSelected = this.lineaSelectedSource.asObservable();\r\n  tipoMaquinaSelected = this.tipoMaquinaSelectedSource.asObservable();\r\n  maquinaSelected = this.maquinaSelectedSource.asObservable();\r\n  procesoSelected = this.procesoSelectedSource.asObservable();\r\n  triggerSelected = this.triggerSelectedSource.asObservable();\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '50%',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  openDialog2(): void {\r\n    const dialogRef = this.dialog.open(LoginModalComponent, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '571px',\r\n      height: '292px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  // get\r\n\r\n  GetAll() {\r\n    return this.http.get(this.apiUrl);\r\n  }\r\n\r\n  //\r\n\r\n  GetAllRoles() {\r\n    return this.http.get(this.apiRole);\r\n  }\r\n\r\n  GetById(id: any) {\r\n    return this.http.get(this.apiUrl + '/' + id);\r\n  }\r\n\r\n  LogIn(body: any) {\r\n    return this.http.post(this.apiUrl + 'login', body).pipe(\r\n      catchError(async (error) => {\r\n        console.log(error.message);\r\n        return error;\r\n      })\r\n    );\r\n  }\r\n  storeUserData(token: any, user: any, rtoken: any) {\r\n    console.log('storeUserData, user: ', user, 'token: ', token);\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(token)!.valueOf() -\r\n      new Date().valueOf();\r\n    sessionStorage.setItem('token', token);\r\n    sessionStorage.setItem('rtoken', rtoken);\r\n    sessionStorage.setItem('username', user.name);\r\n    sessionStorage.setItem('userrole', user.role.name);\r\n    this.authToken = token;\r\n    this.user = user;\r\n    // this.expirationCounter(this.timeout);\r\n    if (sessionStorage.getItem('userrole') == 'admin') {\r\n      this.router.navigate(['home5']);\r\n    } else {\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n\r\n  expirationCounter(timeout: any) {\r\n    console.log('timeout: ', timeout);\r\n    this.tokenSubscription.unsubscribe();\r\n    this.tokenSubscription = of(null)\r\n      .pipe(delay(timeout))\r\n      .subscribe((expired) => {\r\n        console.log('EXPIRED!!');\r\n        this.dialog.closeAll();\r\n        this.logout();\r\n        this.toastr.error('sesion expirada', 'vuelva a iniciar sesion');\r\n      });\r\n    this.pre_expirationCounter(timeout);\r\n  }\r\n\r\n  pre_expirationCounter(timeout: any) {\r\n    let timeNow = new Date();\r\n    console.log('time now: ', timeNow);\r\n    this.tokenSubscription2.unsubscribe();\r\n    this.tokenSubscription2 = of(null)\r\n      .pipe(delay(timeout - 120000))\r\n      .subscribe(() => {\r\n        this.openDialog();\r\n        console.log('about to expire !!');\r\n      });\r\n  }\r\n  logout() {\r\n    this.tokenSubscription.unsubscribe();\r\n    this.authToken = null;\r\n    this.user = null;\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/login']);\r\n    sessionStorage.setItem('token', '');\r\n    console.log(sessionStorage.getItem('token')?.toString());\r\n  }\r\n\r\n  IsLoggedIn() {\r\n    return sessionStorage.getItem('username') != null;\r\n  }\r\n  getUserRole() {\r\n    return sessionStorage.getItem('userrole') != null\r\n      ? sessionStorage.getItem('userrole')?.toString()\r\n      : '';\r\n  }\r\n  // post\r\n  Proceedregister(inputdata: any) {\r\n    return this.http\r\n      .post(this.apiUrl, inputdata, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  UpdateUser(id: any, inputdata: any) {\r\n    return this.http.post(this.apiUrl + '/' + id, inputdata);\r\n  }\r\n\r\n  // get formularios\r\n  getForm(url: string) {\r\n    return this.http\r\n      .get(url, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          if (error.status == 403) {\r\n            this.router.navigate(['/login']);\r\n          }\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  postForm(url: string, formData: any) {\r\n    return this.http\r\n      .post(url, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  deleteForm(url: string, id: string) {\r\n    return this.http\r\n      .delete(url + 'delete/' + id, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  changeMessage(message: string) {\r\n    console.log('change message: ', message);\r\n    this.messageSource.next(message);\r\n  }\r\n  streamProvincias_PaisSelected(provincias: string) {\r\n    console.log('change message: ', provincias);\r\n    this.provinciasSource.next(provincias);\r\n  }\r\n\r\n  streamLocalides_ProvinciaSelected(localidades: string) {\r\n    console.log('change message: ', localidades);\r\n    this.localidadesSource.next(localidades);\r\n  }\r\n\r\n  streamEmpresas_LocalidadSelected(empresas: string) {\r\n    console.log('change message: ', empresas);\r\n    this.empresasSource.next(empresas);\r\n  }\r\n  streamPlantas_EmpresaSelected(plantas: string) {\r\n    console.log('change message: ', plantas);\r\n    this.plantasSource.next(plantas);\r\n  }\r\n\r\n  streamLinea_PlantaSelected(linea: string) {\r\n    console.log('change message: ', linea);\r\n    this.lineaSource.next(linea);\r\n  }\r\n  streamMaquinas_LineaSelected(Maquinas: string) {\r\n    console.log('change message: ', Maquinas);\r\n    this.maquinaSource.next(Maquinas);\r\n  }\r\n  streamTipoSelected(TipoMaquina: string) {\r\n    console.log('tipo maquina selected: ', TipoMaquina);\r\n    this.tipoMaquinaSelectedSource.next(TipoMaquina);\r\n  }\r\n  streamMaquinaSelected(Maquina: string) {\r\n    console.log('maquina selected: ', Maquina);\r\n    this.maquinaSelectedSource.next(Maquina);\r\n  }\r\n  streamProcesoSelected(proceso: string) {\r\n    console.log('Proceso selected: ', proceso);\r\n    this.procesoSelectedSource.next(proceso);\r\n  }\r\n  streamTriggerSelected(trigger: string) {\r\n    console.log('Trigger selected: ', trigger);\r\n    this.triggerSelectedSource.next(trigger);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject, catchError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RegistroFiltrado, Variable } from '../models/datos.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpService {\r\n  registroGeneral = environment.API_URL_RGENERAL;\r\n  variables = environment.API_URL_VARIABLES;\r\n  // chartUrl = environment.API_URL_CHARTS;\r\n  private listaVariablesSource = new BehaviorSubject(<Variable[]>[]);\r\n  private listaRegistroFiltradoSource = new BehaviorSubject(\r\n    <RegistroFiltrado[]>[]\r\n  );\r\n  private listaRegistroFiltrado2Source = new BehaviorSubject(<[]>[]);\r\n  private listaDatosSource3 = new BehaviorSubject(<[]>[]);\r\n  private listaDatosInRangeSource = new BehaviorSubject(<[]>[]);\r\n  private listChartInfoSource = new Subject();\r\n  private listCharDatatInfoSource = new Subject();\r\n  listaVariables = this.listaVariablesSource.asObservable();\r\n  listaRegistroFiltrado = this.listaRegistroFiltradoSource.asObservable();\r\n  listaRegistroFiltrado2 = this.listaRegistroFiltrado2Source.asObservable();\r\n  listaDatos3 = this.listaDatosSource3.asObservable();\r\n  listaDatosInRange = this.listaDatosInRangeSource.asObservable();\r\n  listChartInfo = this.listChartInfoSource.asObservable();\r\n  listChartDataInfo = this.listCharDatatInfoSource.asObservable();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getValores(variable: string): Observable<any> {\r\n    return this.http.get(this.registroGeneral + 'all/' + variable, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  // getCharts(): Observable<any> {\r\n  //   return this.http.get(this.chartUrl, {\r\n  //     headers: {\r\n  //       Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n  //     },\r\n  //   });\r\n  // }\r\n  getValoresFiltrados(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String,\r\n    operacion: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneral + `filter/${variable}/${inicio}/${fin}/${operacion}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getValoresFiltrados2(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String,\r\n    granularidad: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneral +\r\n        `granularidad/${variable}/${inicio}/${fin}/${granularidad}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getAllInRange(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneral + `all/${variable}/${inicio}/${fin}/`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getVariables(): Observable<any> {\r\n    return this.http.get(this.variables, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  stream_Variables(variables: Variable[]) {\r\n    console.log('stream variables: ', variables);\r\n    this.listaVariablesSource.next(variables);\r\n  }\r\n  stream_RegistroFiltrado(datos: RegistroFiltrado[]) {\r\n    console.log('stream registro filtrado: ', datos);\r\n    this.listaRegistroFiltradoSource.next(datos);\r\n  }\r\n  stream_RegistroFiltrado2(datoGeneral: any) {\r\n    this.listaRegistroFiltrado2Source.next(datoGeneral);\r\n  }\r\n  stream_Datos3(datoGeneral: any) {\r\n    this.listaDatosSource3.next(datoGeneral);\r\n  }\r\n  stream_DatosInRange(datoGeneral: any) {\r\n    this.listaDatosInRangeSource.next(datoGeneral);\r\n  }\r\n  stream_Chart_Info(chartInfo: any) {\r\n    this.listChartInfoSource.next(chartInfo);\r\n  }\r\n  stream_ChartData_Info(chartDataInfo: any) {\r\n    this.listCharDatatInfoSource.next(chartDataInfo);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SpinnerService {\n  constructor(private _spinnerService: NgxSpinnerService) {}\n\n  public llamarSpinner(spinner: string) {\n    this._spinnerService.show(spinner);\n  }\n  public detenerSpinner(spinner: string) {\n    this._spinnerService.hide(spinner);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport colorLib from '@kurkle/color';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilsService {\n  constructor() {}\n  private CHART_COLORS = {\n    red: 'rgb(255, 99, 132)',\n    orange: 'rgb(255, 159, 64)',\n    yellow: 'rgb(255, 205, 86)',\n    green: 'rgb(75, 192, 192)',\n    blue: 'rgb(54, 162, 235)',\n    purple: 'rgb(153, 102, 255)',\n    grey: 'rgb(201, 203, 207)',\n  };\n\n  NAMED_COLORS = [\n    this.CHART_COLORS.red,\n    this.CHART_COLORS.orange,\n    this.CHART_COLORS.yellow,\n    this.CHART_COLORS.green,\n    this.CHART_COLORS.blue,\n    this.CHART_COLORS.purple,\n    this.CHART_COLORS.grey,\n  ];\n\n  namedColor(index: number) {\n    return this.NAMED_COLORS[index % this.NAMED_COLORS.length];\n  }\n  transparentize(value: string, opacity: number) {\n    var alpha = opacity === undefined ? 0.5 : 1 - opacity;\n    return colorLib(value).alpha(alpha).rgbString();\n  }\n}\n","export const environment = {\r\n  production: false,\r\n  API_URL_USERS: 'http://automatismopalmar.ddns.net:3001/api/users/',\r\n  API_URL_ROLES: 'http://automatismopalmar.ddns.net:3001/api/role/',\r\n  API_URL_RGENERAL:\r\n    'http://automatismopalmar.ddns.net:3001/api/registro-general/',\r\n  API_URL_VARIABLES: 'http://automatismopalmar.ddns.net:3001/api/variables/',\r\n  API_URL_PAISES: 'http://automatismopalmar.ddns.net:3001/api/paises/',\r\n  API_URL_PROVINCIAS: 'http://automatismopalmar.ddns.net:3001/api/provincias/',\r\n  API_URL_LOCALIDADES: 'http://automatismopalmar.ddns.net:3001/api/localidad/',\r\n  API_URL_EMPRESAS: 'http://automatismopalmar.ddns.net:3001/api/empresas/',\r\n  API_URL_PLANTA: 'http://automatismopalmar.ddns.net:3001/api/empresa-planta/',\r\n  API_URL_TIPO_MAQUINA:\r\n    'http://automatismopalmar.ddns.net:3001/api/tipo-maquina/',\r\n  API_URL_MAQUINA: 'http://automatismopalmar.ddns.net:3001/api/maquinas/',\r\n  API_URL_LINEA_PRODUCCION:\r\n    'http://automatismopalmar.ddns.net:3001/api/linea-produccion/',\r\n  API_URL_PROCESO: 'http://automatismopalmar.ddns.net:3001/api/proceso/',\r\n  API_URL_TRIGGER: 'http:///automatismopalmar.ddns.net:3001/api/trigger/',\r\n  API_URL_RTOKEN: 'http:///automatismopalmar.ddns.net:3001/api/refresh',\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatStepperModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n"],"names":["RouterModule","ListarDatosComponent","RegisterComponent","LoginComponent","UserlistingComponent","authGuard","Home5Component","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","i1","exports","FormControl","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_div_31_Template_button_click_1_listener","ɵɵrestoreView","_r6","ɵɵnextContext","_r0","ɵɵreference","ɵɵresetView","toggle","ɵɵtemplate","AppComponent_div_31_a_6_Template","AppComponent_div_31_a_7_Template","ɵɵelement","AppComponent_div_31_Template_a_click_9_listener","ctx_r7","logOut","ɵɵadvance","ɵɵproperty","ctx_r2","isAdminUser","AppComponent","constructor","builder","router","service","_httpService","spinnerService","opened","title","isMenuRequired","listVariables","listDatos","exceedList","notExceedList2","ngOnInit","valor","group","threshold","range","start","end","granularidad","subscription","listaVariables","subscribe","message","subscription2","listaDatosInRange","ngDoCheck","currentUrl","url","getUserRole","logout","getFiltrados","inicio","value","getTime","toString","final","llamarSpinner","getValoresFiltrados","_id","data","stream_RegistroFiltrado","length","detenerSpinner","getValoresFiltrados2","stream_RegistroFiltrado2","getInRangeTabla","console","log","stream_Datos3","notExceedList","getAllInRange","filter","x","valor_lectura","n","stream_DatosInRange","myBlock","i","map","e","index","time","formatTime","Date","time_stamp","cTime_stamp","formatDate","j","push","notExceed","exceed","seconds","hours","Math","floor","minutes","remainingSeconds","formattedHours","String","padStart","formattedMinutes","formattedSeconds","padTo2Digits","num","date","getFullYear","getMonth","getDate","join","getHours","getMinutes","getSeconds","ɵɵdirectiveInject","FormBuilder","i2","Router","i3","AuthService","i4","HttpService","i5","SpinnerService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_Template_mat_sidenav_openedChange_1_listener","$event","AppComponent_Template_button_click_16_listener","AppComponent_Template_form_ngSubmit_21_listener","AppComponent_div_31_Template","_r1","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","BrowserAnimationsModule","MaterialModule","ToastrModule","UpdatepopupComponent","PaisFormComponent","ProvinciaFormComponent","LocalidadFormComponent","EmpresaFormComponent","EmpresaPlantaFormComponent","MaquinaFormComponent","TipoMaquinaFormComponent","LineaProduccionFormComponent","ProcesoFormComponent","VariableFormComponent","JwtModule","TriggerFormComponent","TablaComponent","NgxSpinnerModule","MatTooltipModule","LoginModalComponent","tokenGetter","localStorage","getItem","AppModule","bootstrap","config","allowedDomains","declarations","Home5Component_mat_step_6_ng_template_1_Template","provinciaForm","Home5Component_mat_step_7_ng_template_1_Template","ctx_r3","localidadForm","Home5Component_mat_step_8_ng_template_1_Template","ctx_r4","empresaForm","Home5Component_mat_step_9_ng_template_1_Template","ctx_r5","plantaForm","Home5Component_mat_step_10_ng_template_1_Template","ctx_r6","lineaProduccionForm","Home5Component_mat_step_11_ng_template_1_Template","tipoMaquinaForm","Home5Component_mat_step_12_ng_template_1_Template","ctx_r8","maquinaForm","Home5Component_mat_step_13_ng_template_1_Template","ctx_r9","Home5Component_mat_step_14_ng_template_1_Template","ctx_r10","Home5Component_mat_step_15_ng_template_1_Template","ctx_r11","jwtHelper","breakpointObserver","isLinear","isTrue","isPaisCompleted","isProvinciaCompleted","isLocalidadCompleted","isEmpresaCompleted","isPlantaCompleted","isTipoMaquinaCompleted","isLineaProduccionCompleted","isMaquinaCompleted","isProcesoCompleted","isTriggerCompleted","stepperOrientation","observe","pipe","matches","expirationCheck","paisSelected","provinciaSelected","localidadSelected","empresaSelected","plantaSelected","lineaSelected","tipoMaquinaSelected","maquinaSelected","procesoSelected","triggerSelected","token","sessionStorage","timeout","getTokenExpirationDate","valueOf","expirationCounter","JwtHelperService","BreakpointObserver","viewQuery","Home5Component_Query","Home5Component_ng_template_4_Template","Home5Component_mat_step_6_Template","Home5Component_mat_step_7_Template","Home5Component_mat_step_8_Template","Home5Component_mat_step_9_Template","Home5Component_mat_step_10_Template","Home5Component_mat_step_11_Template","Home5Component_mat_step_12_Template","Home5Component_mat_step_13_Template","Home5Component_mat_step_14_Template","Home5Component_mat_step_15_Template","ɵɵpipeBind1","paisForm","Chart","registerables","register","utils","authService","listDatos2","listDatos3","listCheckbox","todayDate","sensor_1","sensor_2","pulsador","id","canvasBackgroundColor","beforeDraw","chart","args","pluginOptions","chartArea","top","bottom","left","right","width","scales","y","bgColors","bracketLow","bracketHigh","color","fillStyle","fillRect","getPixelForValue","decimation","enabled","algorithm","samples","getDaysInMonth","year","month","addMonths","input","months","setDate","setMonth","min","sixMonthAgoDate","getDataColors","opacity","colors","getVariables","type","labels","datasets","yAxisID","options","aspectRatio","maintainAspectRatio","animation","parsing","plugins","beginAtZero","ticks","max","grid","position","source","maxRotation","autoSkip","chart3","borderColor","backgroundColor","legend","listaRegistroFiltrado","avg","update","listaRegistroFiltrado2","dato","parseFloat","toFixed","listaDatos3","ngOnDestroy","clearInterval","getRegistros","getValores","makeCheckboxArray","newValue","JSON","parse","_value","selected","desmarcar","stream_Variables","label","UtilsService","ListarDatosComponent_Template","Validators","LoginComponent_div_3_Template_form_ngSubmit_5_listener","proceedLogin","LoginComponent_div_3_Template_a_click_11_listener","showPass","LoginComponent_div_3_mat_icon_12_Template","LoginComponent_div_3_mat_icon_13_Template","LoginComponent_div_3_Template_a_click_17_listener","mostrarRegistro","ctx_r1","loginForm","pass","show","username","password","LoginComponent_div_4_Template_form_ngSubmit_5_listener","_r12","proceedRegistration","registerForm","reset","LoginComponent_div_4_Template_a_click_15_listener","ctx_r13","LoginComponent_div_4_mat_icon_16_Template","LoginComponent_div_4_mat_icon_17_Template","ɵɵnamespaceSVG","ɵɵnamespaceHTML","LoginComponent_div_4_Template_a_click_44_listener","ctx_r14","mostrarLogin","errors","name","email","toastr","mobile","showDiv","Login","Register","control","required","clear","window","screen","minLength","compose","pattern","role","isActive","LogIn","res","userData","status","success","storeUserData","rtoken","error","openDialog2","valid","Proceedregister","next","warning","get","ToastrService","LoginComponent_Template","LoginComponent_div_1_Template","LoginComponent_div_3_Template","LoginComponent_div_4_Template","registerform","navigate","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_5_listener","MatPaginator","MatSort","MatTableDataSource","ɵɵtextInterpolate1","element_r10","element_r11","element_r12","ɵɵtextInterpolate","element_r13","csv","displayedColumns","dataSource","removeDuplicates","paginator","sort","ids","filtered","includes","downloadCSV","csvList","tiempo_inicio","tiempo_fin","diferencia","row","keysAmount","Object","keys","keysCounter","key","link","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","TablaComponent_Query","TablaComponent_Template_button_click_5_listener","ɵɵelementContainerStart","TablaComponent_th_11_Template","TablaComponent_td_12_Template","ɵɵelementContainerEnd","TablaComponent_th_14_Template","TablaComponent_td_15_Template","TablaComponent_th_17_Template","TablaComponent_td_18_Template","TablaComponent_th_20_Template","TablaComponent_td_21_Template","TablaComponent_tr_22_Template","TablaComponent_tr_23_Template","ɵɵpureFunction0","_c0","MAT_DIALOG_DATA","item_r1","dialog","GetAllRoles","rolelist","GetById","editData","setValue","updateUser","UpdateUser","close","MatDialogRef","UpdatepopupComponent_Template","UpdatepopupComponent_Template_form_ngSubmit_5_listener","UpdatepopupComponent_mat_option_13_Template","element_r14","element_r15","element_r16","element_r17","element_r18","UserlistingComponent_td_19_Template_a_click_1_listener","restoredCtx","_r21","element_r19","$implicit","ctx_r20","LoadUser","GetAll","userList","popup","open","enterAnimationDuration","exitAnimationDuration","afterClosed","opendialog","MatDialog","UserlistingComponent_Query","UserlistingComponent_th_3_Template","UserlistingComponent_td_4_Template","UserlistingComponent_th_6_Template","UserlistingComponent_td_7_Template","UserlistingComponent_th_9_Template","UserlistingComponent_td_10_Template","UserlistingComponent_th_12_Template","UserlistingComponent_td_13_Template","UserlistingComponent_th_15_Template","UserlistingComponent_td_16_Template","UserlistingComponent_th_18_Template","UserlistingComponent_td_19_Template","UserlistingComponent_tr_20_Template","UserlistingComponent_tr_21_Template","MatButtonModule","MatDialogModule","MatFormFieldModule","MatInputModule","environment","DialogOverviewExampleDialog","dialogRef","rtoken_url","API_URL_RTOKEN","rBody","user","onNoClick","refreshToken","postForm","resData","accessToken","setItem","standalone","features","ɵɵStandaloneFeature","DialogOverviewExampleDialog_Template","DialogOverviewExampleDialog_Template_button_click_6_listener","DialogOverviewExampleDialog_Template_button_click_8_listener","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","MatButton","encapsulation","EmpresaFormComponent_mat_option_48_Template_mat_option_click_0_listener","_r3","empresa_r1","setEmpresa","razon_social","apiLocalidad","API_URL_LOCALIDADES","apiEmpresas","API_URL_EMPRESAS","apiPlantas","API_URL_PLANTA","isOptional","GetAllLocalidades","nombre_fantasia","calle","altura","piso","deptartamento","rubro","id_localidad","listEmpresas","getForm","listLocalidades","GetAllEmpresas","createEmpresa","borrarEmpresa","deleteForm","nombre","id_empresa","changeMessage","empresaSelectedSource","GetPlantasByEmpresas","streamPlantas_EmpresaSelected","EmpresaFormComponent_Template","EmpresaFormComponent_Template_form_ngSubmit_11_listener","EmpresaFormComponent_Template_form_submit_11_listener","EmpresaFormComponent_mat_option_48_Template","EmpresaPlantaFormComponent_mat_option_32_Template_mat_option_click_0_listener","planta_r1","setPlanta","apiPlanta","apiLinea","API_URL_LINEA_PRODUCCION","listPlantas","GetAllPlantas","createPlanta","borrarPlanta","id_planta","plantaSelectedSource","GetLineaByPlanta","streamLinea_PlantaSelected","EmpresaPlantaFormComponent_Template","EmpresaPlantaFormComponent_Template_form_ngSubmit_11_listener","EmpresaPlantaFormComponent_Template_form_submit_11_listener","EmpresaPlantaFormComponent_mat_option_32_Template","LineaProduccionFormComponent_mat_option_32_Template_mat_option_click_0_listener","linea_r1","setLinea","apiMaquina","API_URL_MAQUINA","lineaForm","descripcion","identificador","listLineas","id_empresa_planta","GetAllLineas","createLinea","borrarLineaProduccion","id_linea","lineaSelectedSource","GetMaquinaByLinea","streamMaquinas_LineaSelected","LineaProduccionFormComponent_Template","LineaProduccionFormComponent_Template_form_ngSubmit_11_listener","LineaProduccionFormComponent_mat_option_32_Template","LocalidadFormComponent_mat_option_24_Template_mat_option_click_0_listener","localidad_r1","setLocalidad","apiProvincias","API_URL_PROVINCIAS","GetAllProvincias","id_provincia","listProvincias","createLocalidad","borrarLocalidad","localidadSelectedSource","GetEmpresasByLocalidad","streamEmpresas_LocalidadSelected","LocalidadFormComponent_Template","LocalidadFormComponent_Template_form_ngSubmit_11_listener","LocalidadFormComponent_mat_option_24_Template","MaquinaFormComponent_mat_option_36_Template_mat_option_click_0_listener","maquina_r1","setMaquina","StreamMaquinaSelected","apiTipoMaquina","API_URL_TIPO_MAQUINA","GetAllTipos","marca","modelo","detalle","currentMessage","listMaquinas","id_linea_produccion","id_tipo_maquina","listTipoMaquina","GetAllMaquinas","createMaquina","borrarMaquina","maquina_id","streamMaquinaSelected","MaquinaFormComponent_Template","MaquinaFormComponent_Template_form_ngSubmit_11_listener","MaquinaFormComponent_Template_form_submit_11_listener","MaquinaFormComponent_mat_option_36_Template","PaisFormComponent_mat_option_24_Template_mat_option_click_0_listener","pais_r1","setPais","_formBuilder","apiPaises","API_URL_PAISES","apiProvincia","completed","urlPaises","GetAllPaises","id_pais","listPaises","createPais","borrarPais","paisSelectedSource","GetProvinciasByPais","streamProvincias_PaisSelected","PaisFormComponent_Template","PaisFormComponent_Template_form_ngSubmit_11_listener","PaisFormComponent_Template_form_submit_11_listener","PaisFormComponent_Template_mat_select_click_23_listener","PaisFormComponent_Template_mat_select_selectionChange_23_listener","PaisFormComponent_mat_option_24_Template","ProcesoFormComponent_mat_option_28_Template_mat_option_click_0_listener","proceso_r1","setProceso","StreamProcesoSelected","apiProceso","API_URL_PROCESO","GetAllProcesos","procesoForm","listProceso","crearProceso","borrarProcesos","proceso_id","streamProcesoSelected","ProcesoFormComponent_Template","ProcesoFormComponent_Template_form_ngSubmit_11_listener","ProcesoFormComponent_mat_option_28_Template","ProvinciaFormComponent_mat_option_24_Template_mat_option_click_0_listener","provincia_r1","setProvincia","listProvinciasPais","createProvincia","borrarProvincia","provinciaSelectedSource","GetLocalidadesByProvincia","streamLocalides_ProvinciaSelected","ProvinciaFormComponent_Template","ProvinciaFormComponent_Template_form_ngSubmit_11_listener","ProvinciaFormComponent_Template_form_submit_11_listener","ProvinciaFormComponent_mat_option_24_Template","TipoMaquinaFormComponent_mat_option_28_Template_mat_option_click_0_listener","tipo_r1","setTipo","StreamTipoSelected","GetAllTiposMaquina","createTipoMaquina","borrarTipoMaquina","tipo_id","streamTipoSelected","TipoMaquinaFormComponent_Template","TipoMaquinaFormComponent_Template_form_ngSubmit_11_listener","TipoMaquinaFormComponent_Template_form_submit_11_listener","TipoMaquinaFormComponent_mat_option_28_Template","TriggerFormComponent_div_10_Template_mat_option_click_1_listener","trigger_r1","setTrigger","StreamTriggerSelected","apiTrigger","API_URL_TRIGGER","GetAllTriggers","triggerForm","listTriggers","crearTrigger","borrarTrigger","trigger_descripcion","trigger_id","streamTriggerSelected","TriggerFormComponent_Template","TriggerFormComponent_div_10_Template","VariableFormComponent_mat_list_25_Template_a_click_3_listener","variable_r1","borrarVariable","apiVariables","API_URL_VARIABLES","apiMaquinas","GetAllVariables","variableForm","trigger_valor","id_maquina","id_proceso","id_trigger","listProcesos","listMaquina","listTrigger","crearVariable","VariableFormComponent_Template","VariableFormComponent_Template_form_ngSubmit_5_listener","VariableFormComponent_Template_mat_expansion_panel_click_21_listener","VariableFormComponent_mat_list_25_Template","inject","route","state","IsLoggedIn","menu","cerrar","LoginModalComponent_Template","LoginModalComponent_Template_button_click_14_listener","Subscription","catchError","delay","BehaviorSubject","of","http","apiUrl","API_URL_USERS","apiRole","API_URL_ROLES","tokenSubscription","tokenSubscription2","messageSource","provinciasSource","localidadesSource","empresasSource","plantasSource","lineaSource","maquinaSource","tipoMaquinaSelectedSource","maquinaSelectedSource","procesoSelectedSource","triggerSelectedSource","asObservable","openDialog","result","height","post","_ref","_asyncToGenerator","_x","apply","arguments","authToken","unsubscribe","expired","closeAll","pre_expirationCounter","timeNow","inputdata","headers","_ref2","_x2","_this","Authorization","_ref3","_x3","formData","_ref4","_x4","delete","_ref5","_x5","provincias","localidades","empresas","plantas","linea","Maquinas","TipoMaquina","Maquina","proceso","trigger","ɵɵinject","HttpClient","factory","ɵfac","providedIn","Subject","registroGeneral","API_URL_RGENERAL","variables","listaVariablesSource","listaRegistroFiltradoSource","listaRegistroFiltrado2Source","listaDatosSource3","listaDatosInRangeSource","listChartInfoSource","listCharDatatInfoSource","listChartInfo","listChartDataInfo","variable","fin","operacion","datos","datoGeneral","stream_Chart_Info","chartInfo","stream_ChartData_Info","chartDataInfo","_spinnerService","spinner","hide","NgxSpinnerService","colorLib","CHART_COLORS","red","orange","yellow","green","blue","purple","grey","NAMED_COLORS","namedColor","transparentize","alpha","undefined","rgbString","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","MatSelectModule","MatCardModule","MatRadioModule","MatCheckboxModule","MatTableModule","MatPaginatorModule","MatSortModule","MatExpansionModule","MatStepperModule","MatIconModule","MatListModule","MatChipsModule","MatDatepickerModule","MatNativeDateModule","MatSidenavModule","MatProgressSpinnerModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}