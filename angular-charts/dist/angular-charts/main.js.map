{"version":3,"file":"main.js","mappings":"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":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home5/home5.component.ts","./src/app/components/home5/home5.component.html","./src/app/components/listar-datos/listar-datos.component.ts","./src/app/components/listar-datos/listar-datos.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/tabla/tabla.component.ts","./src/app/components/tabla/tabla.component.html","./src/app/components/updatepopup/updatepopup.component.ts","./src/app/components/updatepopup/updatepopup.component.html","./src/app/components/userlisting/userlisting.component.ts","./src/app/components/userlisting/userlisting.component.html","./src/app/dialog.component.ts","./src/app/dialog.component.html","./src/app/forms/departamentos/departamentos.component.ts","./src/app/forms/departamentos/departamentos.component.html","./src/app/forms/empresa-form/empresa-form.component.ts","./src/app/forms/empresa-form/empresa-form.component.html","./src/app/forms/empresa-planta-form/empresa-planta-form.component.ts","./src/app/forms/empresa-planta-form/empresa-planta-form.component.html","./src/app/forms/linea-produccion-form/linea-produccion-form.component.ts","./src/app/forms/linea-produccion-form/linea-produccion-form.component.html","./src/app/forms/localidad-form/localidad-form.component.ts","./src/app/forms/localidad-form/localidad-form.component.html","./src/app/forms/maquina-form/maquina-form.component.ts","./src/app/forms/maquina-form/maquina-form.component.html","./src/app/forms/pais-form/pais-form.component.ts","./src/app/forms/pais-form/pais-form.component.html","./src/app/forms/proceso-form/proceso-form.component.ts","./src/app/forms/proceso-form/proceso-form.component.html","./src/app/forms/provincia-form/provincia-form.component.ts","./src/app/forms/provincia-form/provincia-form.component.html","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.ts","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.html","./src/app/forms/trigger-form/trigger-form.component.ts","./src/app/forms/trigger-form/trigger-form.component.html","./src/app/forms/variable-form/variable-form.component.ts","./src/app/forms/variable-form/variable-form.component.html","./src/app/forms/variable-form/variable.modal.component.ts","./src/app/forms/variable-form/variable-modal.html","./src/app/guard/auth.guard.ts","./src/app/login-modal/login-modal.component.ts","./src/app/login-modal/login-modal.component.html","./src/app/service/auth.service.ts","./src/app/service/chart-generator.service.ts","./src/app/service/http.service.ts","./src/app/service/spinner.service.ts","./src/app/service/utils.service.ts","./src/app/service/validator.ts","./src/environments/environment.staging.ts","./src/main.ts","./src/material.module.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { authGuard } from './guard/auth.guard';\r\n\r\nimport { Home5Component } from './components/home5/home5.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ListarDatosComponent, canActivate: [authGuard] },\r\n  { path: 'admin', component: Home5Component, canActivate: [authGuard] },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'user', component: UserlistingComponent, canActivate: [authGuard] },\r\n  { path: '**', redirectTo: 'login', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, DoCheck, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './service/auth.service';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { HttpService } from './service/http.service';\r\nimport { Subscription, catchError } from 'rxjs';\r\nimport { RegistroFiltrado, Variable } from './models/datos.model';\r\nimport { SpinnerService } from './service/spinner.service';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements DoCheck, OnInit {\r\n  opened: boolean = false;\r\n\r\n  range!: FormGroup;\r\n\r\n  valor!: FormGroup;\r\n  title = 'angular-charts';\r\n  isMenuRequired = false;\r\n  isAdminUser = false;\r\n  listVariables: any = [];\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  subscription3!: Subscription;\r\n  listDatos: RegistroFiltrado[] = [];\r\n  exceedList: any = [];\r\n\r\n  notExceedList2: any = [];\r\n  fullName!: string;\r\n  iniciales!: string;\r\n  mobile = false;\r\n\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private router: Router,\r\n    private service: AuthService,\r\n    private _httpService: HttpService,\r\n    private spinnerService: SpinnerService,\r\n    private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer\r\n  ) {\r\n    this.matIconRegistry.addSvgIcon(\r\n      'ajustes-deslizadores',\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n        '../assets/ajustes-deslizadores.svg'\r\n      )\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      'calendario',\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n        '../assets/calendario 2.svg'\r\n      )\r\n    );\r\n  }\r\n  ngOnInit(): void {\r\n    this.valor = this.builder.group({\r\n      threshold: new FormControl<number>(25),\r\n    });\r\n    this.range = this.builder.group({\r\n      start: new FormControl<Date | null>(null),\r\n      end: new FormControl<Date | null>(null),\r\n      granularidad: new FormControl<string>('day'),\r\n    });\r\n    this.subscription3 = this.service.fullname.subscribe((message) => {\r\n      setTimeout(() => {\r\n        console.log('fullname: ', message);\r\n        this.fullName = message;\r\n        this.iniciales = this.splitFullName();\r\n      }, 0);\r\n    });\r\n    this.subscription = this._httpService.listaVariables.subscribe(\r\n      (message: any) => (this.listVariables = message)\r\n    );\r\n\r\n    this.subscription2 = this._httpService.listaDatosInRange.subscribe(\r\n      (message) => {\r\n        // console.log('app component datos in range: ', message);\r\n      }\r\n    );\r\n\r\n    if (window.screen.width < 500) {\r\n      this.mobile = true;\r\n    }\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    let currentUrl = this.router.url;\r\n    if (currentUrl == '/login' || currentUrl == '/register') {\r\n      this.isMenuRequired = false;\r\n      this.opened = false;\r\n    } else {\r\n      this.isMenuRequired = true;\r\n    }\r\n    if (this.service.getUserRole() === 'admin') {\r\n      this.isAdminUser = true;\r\n    } else {\r\n      this.isAdminUser = false;\r\n    }\r\n  }\r\n  logOut() {\r\n    this.service.logout();\r\n  }\r\n\r\n  getFiltrados() {\r\n    var inicio: any = this.range.value.start?.getTime().toString();\r\n    var final: any = this.range.value.end?.getTime().toString();\r\n    this.spinnerService.llamarSpinner('grafico');\r\n\r\n    this._httpService\r\n      .getValoresFiltrados(this.listVariables[1]._id, inicio, final, 'max')\r\n      .subscribe((data) => {\r\n        // console.log(data);\r\n        this._httpService.stream_RegistroFiltrado(data['datos']);\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n      });\r\n    this._httpService\r\n      .getValoresFiltrados2(inicio, final, this.range.value.granularidad)\r\n      .subscribe((data) => {\r\n        // console.log(data);\r\n        this._httpService.stream_RegistroFiltrado2(data['datos']);\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n      });\r\n    this.getInRangeTabla();\r\n    // this._httpService\r\n    //   .getValoresFiltrados2(\r\n    //     inicio,\r\n    //     final,\r\n    //     this.range.value.granularidad\r\n    //   )\r\n    //   .subscribe((data) => {\r\n    //     console.log(data);\r\n    //     this._httpService.stream_Datos3(data['datos']);\r\n    //     if (data['datos'].length == 0) {\r\n    //       this.spinnerService.detenerSpinner('grafico');\r\n    //     }\r\n    //   });\r\n\r\n    this.opened = false;\r\n  }\r\n\r\n  getInRangeTabla() {\r\n    const notExceedList: any = [];\r\n    this.spinnerService.llamarSpinner('tabla');\r\n    var inicio: any = this.range.value.start?.getTime().toString();\r\n    var final: any = this.range.value.end?.getTime().toString();\r\n    this._httpService\r\n      .getAllInRange(this.listVariables[1]._id, inicio, final)\r\n      .subscribe((data) => {\r\n        this.exceedList = data['datos'].filter((x: any) => {\r\n          return x.valor_lectura > this.valor.value.threshold;\r\n        });\r\n        this.notExceedList2 = data['datos'].filter((n: any) => {\r\n          return n.valor_lectura < this.valor.value.threshold;\r\n        });\r\n        console.log(\r\n          'exceed: ',\r\n          this.exceedList.length,\r\n          'not exceed: ',\r\n          this.notExceedList2.length\r\n        );\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('tabla');\r\n          this._httpService.stream_DatosInRange(this.exceedList);\r\n        }\r\n        myBlock: for (let i = 0; i < this.exceedList.length; i++) {\r\n          // console.log('i es ', i);\r\n          if (i == this.exceedList.length - 1) {\r\n            // console.log('not exceed list: ', notExceedList);\r\n            this.exceedList.map((e: any, index: number) => {\r\n              e.time = this.formatTime(\r\n                new Date(\r\n                  notExceedList[\r\n                    index < notExceedList.length\r\n                      ? index\r\n                      : notExceedList.length - 1\r\n                  ].time_stamp\r\n                ).getTime(),\r\n                new Date(e.time_stamp).getTime()\r\n              );\r\n              e.cTime_stamp = this.formatDate(\r\n                notExceedList[\r\n                  index < notExceedList.length\r\n                    ? index\r\n                    : notExceedList.length - 1\r\n                ].time_stamp\r\n              );\r\n              e.time_stamp = this.formatDate(e.time_stamp);\r\n            });\r\n            this._httpService.stream_DatosInRange(this.exceedList);\r\n          }\r\n          for (let j = 0; j < this.notExceedList2.length; j++) {\r\n            if (\r\n              this.notExceedList2[j].valor_lectura <\r\n                this.valor.value.threshold &&\r\n              new Date(this.notExceedList2[j]?.time_stamp).getTime() >\r\n                new Date(this.exceedList[i]?.time_stamp).getTime()\r\n            ) {\r\n              notExceedList.push(this.notExceedList2[j]);\r\n              continue myBlock;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    this.opened = false;\r\n  }\r\n\r\n  formatTime(notExceed: number, exceed: number) {\r\n    var seconds = (notExceed - exceed) / 1000;\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const remainingSeconds = seconds % 60;\r\n\r\n    const formattedHours = String(hours).padStart(2, '0');\r\n    const formattedMinutes = String(minutes).padStart(2, '0');\r\n    const formattedSeconds = String(remainingSeconds).padStart(2, '0');\r\n\r\n    return `${formattedHours}H ${formattedMinutes}M ${formattedSeconds}S`;\r\n  }\r\n  padTo2Digits(num: number) {\r\n    return num.toString().padStart(2, '0');\r\n  }\r\n\r\n  formatDate(data: string) {\r\n    const date = new Date(data);\r\n    return (\r\n      [\r\n        date.getFullYear(),\r\n        this.padTo2Digits(date.getMonth() + 1),\r\n        this.padTo2Digits(date.getDate()),\r\n      ].join('-') +\r\n      ' ' +\r\n      [\r\n        this.padTo2Digits(date.getHours()),\r\n        this.padTo2Digits(date.getMinutes()),\r\n        this.padTo2Digits(date.getSeconds()),\r\n      ].join(':')\r\n    );\r\n  }\r\n\r\n  splitFullName() {\r\n    var output = this.fullName.split(' ');\r\n    var iniciales = '';\r\n    if (output.length > 1) {\r\n      iniciales = output[0].charAt(0) + output[1].charAt(0);\r\n    } else {\r\n      iniciales = output[0].charAt(0) + output[0].charAt(1);\r\n    }\r\n    console.log('iniciales: ', iniciales);\r\n    return iniciales.toUpperCase();\r\n  }\r\n}\r\n","<style>\r\n  :host {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\r\n      \"Segoe UI Symbol\";\r\n    font-size: 14px;\r\n    color: #333;\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n\r\n  .toolbar {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    height: 75px;\r\n    font-weight: 600;\r\n    background: #fff;\r\n\r\n    /* shadow */\r\n    box-shadow: 0px 4px 16px 0px rgba(0, 0, 0, 0.08);\r\n  }\r\n\r\n  .navbar-menu {\r\n    cursor: pointer;\r\n  }\r\n  .navbar-menu:hover {\r\n    color: #cb3f45;\r\n  }\r\n</style>\r\n\r\n<mat-toolbar class=\"toolbar flex items-center\" *ngIf=\"isMenuRequired\">\r\n  <div class=\"grid grid-cols-3 grid-rows-1 gap-4 content-center\">\r\n    <div class=\"col-span-1 pl-5\">\r\n      <a routerLink=\"/\" class=\"navbar-menu\">\r\n        <img\r\n          src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n          alt=\"\"\r\n          class=\"lintec_logo\"\r\n      /></a>\r\n    </div>\r\n    <div class=\"col-span-1 pt-5\">\r\n      <a *ngIf=\"isAdminUser\" routerLink=\"/admin\" class=\"navbar-menu\"\r\n        >Formularios</a\r\n      >\r\n    </div>\r\n    <div class=\"col-span-1 pt-5\">\r\n      <a *ngIf=\"isAdminUser\" routerLink=\"/user\" class=\"navbar-menu\">Usuarios</a>\r\n    </div>\r\n  </div>\r\n\r\n  <span class=\"spacer\"></span>\r\n  <div class=\"perfil\">\r\n    <p [attr.data-letters]=\"iniciales\" class=\"profile\"></p>\r\n    <p *ngIf=\"!mobile\" class=\"fullName\">{{ fullName }}</p>\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      class=\"navbar-menu m-5\"\r\n      (click)=\"logOut()\"\r\n    >\r\n      <g clip-path=\"url(#clip0_137_246)\">\r\n        <path\r\n          d=\"M22.829 9.17192L18.95 5.29292C18.7614 5.11076 18.5088 5.00997 18.2466 5.01224C17.9844 5.01452 17.7336 5.11969 17.5482 5.3051C17.3628 5.49051 17.2576 5.74132 17.2553 6.00352C17.2531 6.26571 17.3539 6.51832 17.536 6.70692L21.415 10.5859C21.5303 10.7034 21.631 10.8344 21.715 10.9759C21.7 10.9759 21.688 10.9679 21.673 10.9679L5.98901 10.9999C5.7238 10.9999 5.46944 11.1053 5.28191 11.2928C5.09437 11.4803 4.98901 11.7347 4.98901 11.9999C4.98901 12.2651 5.09437 12.5195 5.28191 12.707C5.46944 12.8946 5.7238 12.9999 5.98901 12.9999L21.667 12.9679C21.695 12.9679 21.718 12.9539 21.745 12.9519C21.6563 13.1211 21.5438 13.2767 21.411 13.4139L17.532 17.2929C17.4365 17.3852 17.3603 17.4955 17.3079 17.6175C17.2555 17.7395 17.2279 17.8707 17.2268 18.0035C17.2256 18.1363 17.2509 18.268 17.3012 18.3909C17.3515 18.5138 17.4257 18.6254 17.5196 18.7193C17.6135 18.8132 17.7252 18.8875 17.8481 18.9377C17.971 18.988 18.1026 19.0133 18.2354 19.0122C18.3682 19.011 18.4994 18.9834 18.6214 18.931C18.7434 18.8786 18.8538 18.8024 18.946 18.7069L22.825 14.8279C23.5749 14.0778 23.9962 13.0606 23.9962 11.9999C23.9962 10.9393 23.5749 9.92203 22.825 9.17192H22.829Z\"\r\n          fill=\"#c82d3b\"\r\n        />\r\n        <path\r\n          d=\"M7 22H5C4.20435 22 3.44129 21.6839 2.87868 21.1213C2.31607 20.5587 2 19.7956 2 19V5C2 4.20435 2.31607 3.44129 2.87868 2.87868C3.44129 2.31607 4.20435 2 5 2H7C7.26522 2 7.51957 1.89464 7.70711 1.70711C7.89464 1.51957 8 1.26522 8 1C8 0.734784 7.89464 0.48043 7.70711 0.292893C7.51957 0.105357 7.26522 0 7 0L5 0C3.67441 0.00158786 2.40356 0.528882 1.46622 1.46622C0.528882 2.40356 0.00158786 3.67441 0 5L0 19C0.00158786 20.3256 0.528882 21.5964 1.46622 22.5338C2.40356 23.4711 3.67441 23.9984 5 24H7C7.26522 24 7.51957 23.8946 7.70711 23.7071C7.89464 23.5196 8 23.2652 8 23C8 22.7348 7.89464 22.4804 7.70711 22.2929C7.51957 22.1054 7.26522 22 7 22Z\"\r\n          fill=\"#c82d3b\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <clipPath id=\"clip0_137_246\">\r\n          <rect width=\"24\" height=\"24\" fill=\"white\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </div>\r\n</mat-toolbar>\r\n\r\n<div role=\"main\">\r\n  <router-outlet class=\"\"></router-outlet>\r\n</div>\r\n\r\n<!-- <mat-sidenav-container>\r\n  <mat-sidenav #sidenav mode=\"side\" [(opened)]=\"opened\">\r\n    <div class=\"p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir 2 fechas </mat-label>\r\n        <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n          <input\r\n            matStartDate\r\n            formControlName=\"start\"\r\n            placeholder=\"Start date\"\r\n          />\r\n          <input matEndDate formControlName=\"end\" placeholder=\"End date\" />\r\n        </mat-date-range-input>\r\n        <mat-datepicker-toggle\r\n          matIconSuffix\r\n          [for]=\"picker\"\r\n        ></mat-datepicker-toggle>\r\n        <mat-date-range-picker #picker>\r\n          <mat-date-range-picker-actions>\r\n            <button mat-button matDateRangePickerCancel>Cancel</button>\r\n            <button\r\n              mat-raised-button\r\n              color=\"primary\"\r\n              (click)=\"getFiltrados()\"\r\n              matDateRangePickerApply\r\n            >\r\n              Aplicar\r\n            </button>\r\n          </mat-date-range-picker-actions>\r\n        </mat-date-range-picker>\r\n      </mat-form-field>\r\n      <mat-icon\r\n        matTooltip=\"Seleccionar 2 fechas para actualizar los contenidos del grafico y la tabla de alertas \"\r\n      >\r\n        help\r\n      </mat-icon>\r\n    </div>\r\n\r\n    <div class=\"p-3\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"valor\"\r\n        (ngSubmit)=\"getInRangeTabla()\"\r\n      >\r\n        <mat-form-field>\r\n          <mat-label>Elegir valor limite </mat-label>\r\n          <input matInput formControlName formControlName=\"threshold\" />\r\n        </mat-form-field>\r\n        <mat-icon\r\n          matTooltip=\"Luego de seleccionar las dos fechas estara disponible el boton para cambiar los limites de la tabla \"\r\n        >\r\n          help\r\n        </mat-icon>\r\n\r\n        <button\r\n          class=\"m-3\"\r\n          [disabled]=\"!range.value.start && !range.value.end\"\r\n          mat-raised-button\r\n          color=\"primary\"\r\n        >\r\n          Enviar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content class=\"fondo\">\r\n    \r\n  </mat-sidenav-content>\r\n</mat-sidenav-container> -->\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// Import FusionCharts library and chart modules\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from 'src/material.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UpdatepopupComponent } from './components/updatepopup/updatepopup.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { PaisFormComponent } from './forms/pais-form/pais-form.component';\r\nimport { ProvinciaFormComponent } from './forms/provincia-form/provincia-form.component';\r\nimport { LocalidadFormComponent } from './forms/localidad-form/localidad-form.component';\r\nimport { EmpresaFormComponent } from './forms/empresa-form/empresa-form.component';\r\nimport { EmpresaPlantaFormComponent } from './forms/empresa-planta-form/empresa-planta-form.component';\r\nimport { MaquinaFormComponent } from './forms/maquina-form/maquina-form.component';\r\nimport { TipoMaquinaFormComponent } from './forms/tipo-maquina-form/tipo-maquina-form.component';\r\nimport { LineaProduccionFormComponent } from './forms/linea-produccion-form/linea-produccion-form.component';\r\nimport { ProcesoFormComponent } from './forms/proceso-form/proceso-form.component';\r\nimport { VariableFormComponent } from './forms/variable-form/variable-form.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { TriggerFormComponent } from './forms/trigger-form/trigger-form.component';\r\nimport { Home5Component } from './components/home5/home5.component';\r\nimport { TablaComponent } from './components/tabla/tabla.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { LoginModalComponent } from './login-modal/login-modal.component';\r\n\r\nimport {\r\n  DateAdapter,\r\n  MatNativeDateModule,\r\n  MAT_DATE_FORMATS,\r\n  MAT_DATE_LOCALE,\r\n} from '@angular/material/core';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DepartamentosComponent } from './forms/departamentos/departamentos.component';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\nconst MY_DATE_FORMAT = {\r\n  parse: {\r\n    dateInput: 'yyyy-MM-dd', // this is how your date will be parsed from Input\r\n  },\r\n  display: {\r\n    dateInput: 'yyyy-MM-DD', // this is how your date will get displayed on the Input\r\n    monthYearLabel: 'MMMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListarDatosComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    UpdatepopupComponent,\r\n    UserlistingComponent,\r\n    PaisFormComponent,\r\n    ProvinciaFormComponent,\r\n    LocalidadFormComponent,\r\n    EmpresaFormComponent,\r\n    EmpresaPlantaFormComponent,\r\n    MaquinaFormComponent,\r\n    TipoMaquinaFormComponent,\r\n    LineaProduccionFormComponent,\r\n    ProcesoFormComponent,\r\n    VariableFormComponent,\r\n    TriggerFormComponent,\r\n    Home5Component,\r\n    TablaComponent,\r\n    LoginModalComponent,\r\n    DepartamentosComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgxSpinnerModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: ['localhost'],\r\n      },\r\n    }),\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    ToastrModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE],\r\n    },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMAT },\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatStepper, StepperOrientation } from '@angular/material/stepper';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { MatTabGroup } from '@angular/material/tabs';\r\n\r\n@Component({\r\n  selector: 'app-home5',\r\n  templateUrl: './home5.component.html',\r\n  styleUrls: ['./home5.component.css'],\r\n})\r\nexport class Home5Component implements OnInit {\r\n  @ViewChild('stepper') stepper!: MatStepper;\r\n  @ViewChild(MatTabGroup) tabgroup!: MatTabGroup;\r\n  paisForm!: FormGroup;\r\n  provinciaForm!: FormGroup;\r\n  localidadForm!: FormGroup;\r\n  empresaForm!: FormGroup;\r\n  plantaForm!: FormGroup;\r\n  tipoMaquinaForm!: FormGroup;\r\n  lineaProduccionForm!: FormGroup;\r\n  maquinaForm!: FormGroup;\r\n  procesoForm!: FormGroup;\r\n  triggerForm!: FormGroup;\r\n  timeout: any;\r\n  token: any;\r\n  isTrue: boolean = false;\r\n\r\n  isPaisCompleted: boolean = false;\r\n  isProvinciaCompleted: boolean = false;\r\n  isLocalidadCompleted: boolean = false;\r\n  isEmpresaCompleted: boolean = false;\r\n  isPlantaCompleted: boolean = false;\r\n  isTipoMaquinaCompleted: boolean = false;\r\n  isLineaProduccionCompleted: boolean = false;\r\n  isMaquinaCompleted: boolean = false;\r\n  isProcesoCompleted: boolean = false;\r\n  isTriggerCompleted: boolean = false;\r\n  subscription!: Subscription;\r\n  completed: boolean = false;\r\n  tituloTabs = [\r\n    'Direccion',\r\n    'Empresa',\r\n    'Empresa/Planta',\r\n    'Línea de producción',\r\n    'Tipo de Máquina',\r\n    'Máquina',\r\n    'Proceso',\r\n    'Trigger',\r\n    'Variables',\r\n  ];\r\n  public selected = new FormControl(0);\r\n\r\n  constructor(\r\n    private service: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    breakpointObserver: BreakpointObserver\r\n  ) {}\r\n  ngOnInit() {\r\n    this.expirationCheck();\r\n    this.service.getUser();\r\n    this.subscription = this.service.paisSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPaisCompleted = true;\r\n      } else {\r\n        this.isPaisCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.provinciaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProvinciaCompleted = true;\r\n      } else {\r\n        this.isProvinciaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLocalidadCompleted = true;\r\n        this.completed = this.isLocalidadCompleted;\r\n      } else {\r\n        this.isLocalidadCompleted = false;\r\n        this.completed = this.isLocalidadCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.empresaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isEmpresaCompleted = true;\r\n        this.completed = this.isEmpresaCompleted;\r\n      } else {\r\n        this.isEmpresaCompleted = false;\r\n        this.completed = this.isEmpresaCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.plantaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPlantaCompleted = true;\r\n        this.completed = this.isPlantaCompleted;\r\n      } else {\r\n        this.isPlantaCompleted = false;\r\n        this.completed = this.isPlantaCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.lineaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLineaProduccionCompleted = true;\r\n        this.completed = this.isPlantaCompleted;\r\n      } else {\r\n        this.isLineaProduccionCompleted = false;\r\n        this.completed = this.isLocalidadCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => {\r\n        if (message != '') {\r\n          this.isTipoMaquinaCompleted = true;\r\n          this.completed = this.isTipoMaquinaCompleted;\r\n        } else {\r\n          this.isTipoMaquinaCompleted = false;\r\n          this.completed = this.isTipoMaquinaCompleted;\r\n        }\r\n      }\r\n    );\r\n    this.subscription = this.service.maquinaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isMaquinaCompleted = true;\r\n        this.completed = this.isMaquinaCompleted;\r\n      } else {\r\n        this.isMaquinaCompleted = false;\r\n        this.completed = this.isMaquinaCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.procesoSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProcesoCompleted = true;\r\n        this.completed = this.isProcesoCompleted;\r\n      } else {\r\n        this.isProcesoCompleted = false;\r\n        this.completed = this.isProcesoCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.triggerSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isTriggerCompleted = true;\r\n        this.completed = this.isTriggerCompleted;\r\n      } else {\r\n        this.isTriggerCompleted = false;\r\n        this.completed = this.isTriggerCompleted;\r\n      }\r\n    });\r\n  }\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.service.expirationCounter(this.timeout);\r\n  }\r\n  nextButton() {\r\n    this.selected.setValue(this.selected.value! + 1);\r\n    console.log(this.selected.value);\r\n    this.completed = false;\r\n  }\r\n  backButton() {\r\n    this.selected.setValue(this.selected.value! - 1);\r\n    console.log(this.selected.value);\r\n  }\r\n}\r\n","<div class=\"p-3 fondo\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div class=\"grid grid-cols-6 grid-rows-2 gap-1 m-6\">\r\n        <div class=\"col-span-5\">\r\n          <mat-progress-bar\r\n            mode=\"determinate\"\r\n            [value]=\"(selected.value ? selected.value : 0) * 12.5\"\r\n          ></mat-progress-bar>\r\n        </div>\r\n        <div class=\"col-start-6 justify-self-end\">\r\n          <p>{{ selected.value ? selected.value + 1 : 1 }} / 9</p>\r\n        </div>\r\n        <div class=\"row-start-2\">\r\n          <h2>{{ tituloTabs[selected.value || 0] }}</h2>\r\n        </div>\r\n      </div>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <mat-tab-group\r\n        class=\"invisible-tabs\"\r\n        [selectedIndex]=\"selected.value\"\r\n        (selectedIndexChange)=\"selected.setValue($event)\"\r\n      >\r\n        <mat-tab>\r\n          <app-pais-form></app-pais-form>\r\n          <app-provincia-form></app-provincia-form>\r\n          <app-departamentos></app-departamentos>\r\n          <app-localidad-form></app-localidad-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-empresa-form></app-empresa-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-empresa-planta-form></app-empresa-planta-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-linea-produccion-form></app-linea-produccion-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-tipo-maquina-form></app-tipo-maquina-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-maquina-form></app-maquina-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-proceso-form></app-proceso-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-trigger-form></app-trigger-form>\r\n        </mat-tab>\r\n        <mat-tab><app-variable-form></app-variable-form></mat-tab>\r\n      </mat-tab-group>\r\n\r\n      <div class=\"flex justify-between\">\r\n        <button\r\n          class=\"boton\"\r\n          mat-raised-button\r\n          [disabled]=\"!selected.value\"\r\n          (click)=\"backButton()\"\r\n        >\r\n          Atrás\r\n        </button>\r\n        <button\r\n          class=\"boton\"\r\n          mat-raised-button\r\n          [disabled]=\"!completed || selected.value == 8\"\r\n          (click)=\"nextButton()\"\r\n        >\r\n          siguiente\r\n        </button>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { Chart, registerables } from 'node_modules/chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport 'date-fns/locale';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { UtilsService } from 'src/app/service/utils.service';\r\nimport { Dato, RegistroFiltrado } from 'src/app/models/datos.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\r\nimport { ChartGeneratorService } from 'src/app/service/chart-generator.service';\r\n// import zoomPlugin from 'chartjs-plugin-zoom';\r\nChart.register(...registerables);\r\nChart.defaults.font.family = 'DIN-PRO';\r\nChart.defaults.font.size = 14;\r\nChart.defaults.font.weight = '400';\r\n\r\n@Component({\r\n  selector: 'app-listar-datos',\r\n  templateUrl: './listar-datos.component.html',\r\n  styleUrls: ['./listar-datos.component.css'],\r\n})\r\nexport class ListarDatosComponent implements OnInit, OnDestroy {\r\n  listDatos: any;\r\n  listVariables: any[] = [];\r\n  todayDate: Date = new Date();\r\n  sixMonthAgoDate!: Date;\r\n  dato!: Dato;\r\n  sensor_1: string = 'sensor 1';\r\n  sensor_2: string = 'sensor 2';\r\n  pulsador: string = 'Pulsador';\r\n  id: any = 0;\r\n  chart: any;\r\n  chart3: any;\r\n  title: string = 'Prueba angular';\r\n  timeout: any;\r\n  token: any;\r\n  subscription!: Subscription;\r\n  open: boolean = false;\r\n  range!: any;\r\n  chartList: any = [];\r\n  chartList2: any = [];\r\n\r\n  canvasBackgroundColor = {\r\n    id: 'canvasBackgroundColor',\r\n    beforeDatasetsDraw(chart: any, args: any, pluginOptions: any) {\r\n      const {\r\n        ctx,\r\n        chartArea: { top, bottom, left, right, width, height },\r\n        scales: { x, y },\r\n      } = chart;\r\n\r\n      function bgColors(\r\n        bracketLow: number,\r\n        bracketHigh: number,\r\n        color: string\r\n      ) {\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(\r\n          left,\r\n          y.getPixelForValue(bracketHigh),\r\n          width,\r\n          y.getPixelForValue(bracketLow) - y.getPixelForValue(bracketHigh)\r\n        );\r\n      }\r\n      bgColors(\r\n        0,\r\n        parseInt(y._labelItems[y._labelItems.length - 1].label),\r\n        'rgba(111, 151, 255, 0.30)'\r\n      );\r\n    },\r\n  };\r\n  decimation: any = {\r\n    id: 'decimation',\r\n    enabled: true,\r\n    algorithm: 'lttb',\r\n    samples: 100,\r\n    threshold: 50,\r\n  };\r\n  @ViewChild(MatMenuTrigger) trigger!: MatMenuTrigger;\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private utils: UtilsService,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private spinnerService: SpinnerService,\r\n    private builder: FormBuilder,\r\n    private chartService: ChartGeneratorService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getVariables();\r\n    this.authService.getUser();\r\n\r\n    this.range = this.builder.group({\r\n      start: new FormControl<Date | null>(null),\r\n      end: new FormControl<Date | null>(null),\r\n      granularidad: new FormControl<string>('day'),\r\n    });\r\n    this.chart = new Chart('myChart', {\r\n      type: 'line',\r\n      data: {\r\n        labels: [],\r\n        datasets: [],\r\n      },\r\n      options: {\r\n        // hay que arreglar esto para que funcione la data decimation\r\n        // Turn off animations and data parsing for performance\r\n        aspectRatio: 1,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        parsing: false,\r\n        plugins: {\r\n          decimation: this.decimation,\r\n        },\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            ticks: {},\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n          x: {\r\n            type: 'time',\r\n\r\n            ticks: {\r\n              source: 'auto',\r\n              // Disabled rotation for performance\r\n              maxRotation: 0,\r\n              autoSkip: true,\r\n            },\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      plugins: [this.canvasBackgroundColor], //canvasBackgroundColor,\r\n    });\r\n\r\n    this.subscription = this._httpService.listaVariables.subscribe(\r\n      (message: any) => {\r\n        this.listVariables = message;\r\n        this.getRegistros();\r\n      }\r\n    );\r\n    this.expirationCheck();\r\n\r\n    this.subscription = this._httpService.listaRegistroFiltrado2.subscribe(\r\n      (message) => {\r\n        console.log('registro filtrado 2:', message);\r\n        this.listDatos = message;\r\n        if (this.listDatos.length != 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n        var sortedList = this.listVariables;\r\n        sortedList = sortedList.map((item: { _id: any }) => {\r\n          const item2 = this.listDatos.find(\r\n            (i2: { _id: any }) => i2._id === item._id\r\n          );\r\n          return item2 ? { ...item, ...item2 } : item;\r\n        });\r\n        console.log('sortedList: ', sortedList);\r\n        for (let i = 0; i < this.listVariables.length; i++) {\r\n          this.chart.data.datasets[i].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.max.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chart.update();\r\n\r\n          if (i == this.listVariables.length - 1) {\r\n            this.spinnerService.detenerSpinner('grafico');\r\n            this.chart.update();\r\n          }\r\n        }\r\n        for (let i = 0; i < this.chartList.length; i++) {\r\n          this.chartList2[i].chart.data.datasets[0].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.min.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.min.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chartList2[i].chart.update();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.id) {\r\n      clearInterval(this.id);\r\n    }\r\n  }\r\n\r\n  getRegistros() {\r\n    var inicio = new Date('2023-05-01').getTime().toString();\r\n    var final = new Date('2023-12-31').getTime().toString();\r\n    var sortedList = this.listVariables;\r\n    this.spinnerService.llamarSpinner('grafico');\r\n    this._httpService\r\n      .getValoresFiltrados2(inicio, final, this.range.value.granularidad)\r\n      .subscribe((data) => {\r\n        this.listDatos = data['datos'];\r\n\r\n        sortedList = sortedList.map((item: { _id: any }) => {\r\n          const item2 = this.listDatos.find(\r\n            (i2: { _id: any }) => i2._id === item._id\r\n          );\r\n          return item2 ? { ...item, ...item2 } : item;\r\n        });\r\n        if (this.chart.data.datasets.length < this.listVariables.length) {\r\n          for (let j = 0; j < sortedList.length; j++) {\r\n            const dsColor = this.utils.namedColor(\r\n              this.chart.data.datasets.length\r\n            );\r\n            const dataSet = {\r\n              data: [],\r\n              label: sortedList[j].nombre,\r\n              borderColor: dsColor,\r\n              backgroundColor: this.utils.transparentize(dsColor, 0.5),\r\n            };\r\n            this.chart.data.datasets.push(dataSet);\r\n          }\r\n        }\r\n\r\n        console.log('sortedList: ', sortedList);\r\n        for (let i = 0; i < this.listVariables.length; i++) {\r\n          this.chart.data.datasets[i].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.max.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chart.update();\r\n\r\n          if (i == this.listVariables.length - 1) {\r\n            this.spinnerService.detenerSpinner('grafico');\r\n            this.chart.update();\r\n          }\r\n        }\r\n        for (let i = 0; i < this.chartList.length; i++) {\r\n          this.chartList2[i].chart.data.datasets[0].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.min.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.min.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chartList2[i].chart.update();\r\n        }\r\n      });\r\n  }\r\n\r\n  getVariables() {\r\n    this._httpService.getVariables().subscribe((data) => {\r\n      this._httpService.stream_Variables(data);\r\n      console.log(data);\r\n\r\n      this.chartList = [\r\n        {\r\n          titulo: data[0] ? data[0].nombre : 'myChart1',\r\n          id: data[0]._id,\r\n        },\r\n        {\r\n          titulo: data[1] ? data[1].nombre : 'myChart2',\r\n          id: data[1]._id,\r\n        },\r\n        {\r\n          titulo: data[2] ? data[2].nombre : 'myChart3',\r\n          id: data[2]._id,\r\n        },\r\n      ];\r\n      setTimeout(() => {\r\n        this.chartService.generate(\r\n          this.chartList,\r\n          this.decimation,\r\n          this.canvasBackgroundColor\r\n        );\r\n        this.chartList2 = this.chartService.getCharts();\r\n      }, 500);\r\n    });\r\n  }\r\n\r\n  getFiltrados() {\r\n    var inicio: any = this.range.value.start._d?.getTime().toString();\r\n    var final: any = this.range.value.end._d?.getTime().toString();\r\n    this.spinnerService.llamarSpinner('grafico');\r\n    this._httpService\r\n      .getValoresFiltrados2(inicio, final, this.range.value.granularidad)\r\n      .subscribe((data) => {\r\n        // console.log(data);\r\n        this._httpService.stream_RegistroFiltrado2(data['datos']);\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n      });\r\n  }\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.authService.expirationCounter(this.timeout);\r\n  }\r\n  getDataColors = (opacity?: String) => {\r\n    const colors = [\r\n      '#7448c2',\r\n      '#21c0d7',\r\n      '#d99e2b',\r\n      '#cd3a81',\r\n      '#9c99cc',\r\n      '#e14eca',\r\n      '#ffffff',\r\n      '#ff0000',\r\n      '#d6ff00',\r\n      '#0038ff',\r\n    ];\r\n    return colors.map((color) => (opacity ? `${color + opacity}` : color));\r\n  };\r\n\r\n  setInicio_final() {\r\n    var inicio: any = this.range.value.start._d?.getTime().toString();\r\n    var final: any = this.range.value.end._d?.getTime().toString();\r\n    this._httpService.set_Inicio_Final(inicio, final);\r\n  }\r\n}\r\n","<div class=\"grid grid-flow-row grid-cols-1 sm:grid-cols-1 p-3 fondo\">\r\n  <div class=\"p-3\">\r\n    <a\r\n      mat-raised-button\r\n      class=\"flex justify-start filtrar mb-5\"\r\n      [matMenuTriggerFor]=\"menu\"\r\n    >\r\n      <mat-icon svgIcon=\"ajustes-deslizadores\" id=\"ajustes_icon\"></mat-icon>\r\n      <p class=\"boton_texto\">Filtrar</p>\r\n      <mat-icon iconPositionEnd id=\"expand_icon\">expand_more</mat-icon>\r\n    </a>\r\n    <mat-menu [hasBackdrop]=\"true\" #menu=\"matMenu\" class=\"menu\">\r\n      <div\r\n        class=\"grid grid-cols-2 grid-flow-row sm:grid-cols-2 grid-row-2 gap-4 m-3\"\r\n        [formGroup]=\"range\"\r\n        (click)=\"$event.stopPropagation()\"\r\n      >\r\n        <div>\r\n          <h2 class=\"subtitulo\">Desde</h2>\r\n          <div class=\"d-input\">\r\n            <mat-datepicker-toggle [for]=\"startpicker\">\r\n              <mat-icon\r\n                svgIcon=\"calendario\"\r\n                class=\"calendario\"\r\n                matDatepickerToggleIcon\r\n              ></mat-icon>\r\n            </mat-datepicker-toggle>\r\n            <input\r\n              [matDatepicker]=\"startpicker\"\r\n              formControlName=\"start\"\r\n              class=\"input-field\"\r\n              type=\"date\"\r\n            />\r\n          </div>\r\n          <mat-datepicker #startpicker></mat-datepicker>\r\n        </div>\r\n        <div>\r\n          <h2 class=\"subtitulo\">Hasta</h2>\r\n          <div class=\"d-input\">\r\n            <mat-datepicker-toggle [for]=\"endpicker\">\r\n              <mat-icon\r\n                svgIcon=\"calendario\"\r\n                class=\"calendario\"\r\n                matDatepickerToggleIcon\r\n              ></mat-icon>\r\n            </mat-datepicker-toggle>\r\n            <input\r\n              formControlName=\"end\"\r\n              [matDatepicker]=\"endpicker\"\r\n              class=\"input-field\"\r\n              type=\"date\"\r\n              (dateChange)=\"setInicio_final()\"\r\n            />\r\n          </div>\r\n          <mat-datepicker #endpicker></mat-datepicker>\r\n        </div>\r\n        <div class=\"col-span-2 row-start-2\">\r\n          <!-- <button mat-button (click)=\"range.reset()\">Reset</button> -->\r\n          <button\r\n            mat-raised-button\r\n            (click)=\"getFiltrados()\"\r\n            class=\"boton_wide\"\r\n            [disabled]=\"!range.value.start || !range.value.end\"\r\n          >\r\n            Aplicar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </mat-menu>\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2 class=\"titulo\">Todas Las variables</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart\"></canvas>\r\n        <ngx-spinner\r\n          bdColor=\"rgba(51,51,51,0.8)\"\r\n          size=\"medium\"\r\n          color=\"#fff\"\r\n          type=\"ball-spin-clockwise\"\r\n          [fullScreen]=\"false\"\r\n          name=\"grafico\"\r\n        >\r\n        </ngx-spinner>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"grid grid-flow-row grid-cols-1 sm:grid-cols-2 p-3 fondo\">\r\n  <div class=\"p-3\" *ngFor=\"let chart of chartList\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2 class=\"titulo\">{{ chart.titulo }}</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"{{ chart.titulo }}\"></canvas>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"p-3\">\r\n    <app-tabla></app-tabla>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport {\r\n  checkNumber,\r\n  checkSpecial,\r\n  checkUpperCase,\r\n} from 'src/app/service/validator';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  registerForm: any;\r\n  pass: string = '';\r\n  show = false;\r\n  mobile = false;\r\n\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.pass = 'password';\r\n    if (window.screen.width < 500) {\r\n      this.mobile = true;\r\n    }\r\n    this.registerForm = this.builder.group({\r\n      username: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n      ]),\r\n      name: new FormControl('', [Validators.required, Validators.minLength(5)]),\r\n      password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n          checkUpperCase(),\r\n          checkNumber(),\r\n          checkSpecial(),\r\n        ],\r\n      ],\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      role: this.builder.control('64f1f60e918724a5f931d909'),\r\n      isActive: this.builder.control('inactive'),\r\n    });\r\n  }\r\n\r\n  showDiv = {\r\n    Login: true,\r\n    Register: false,\r\n  };\r\n\r\n  loginForm = this.builder.group({\r\n    username: this.builder.control('', Validators.required),\r\n    password: this.builder.control('', Validators.required),\r\n  });\r\n\r\n  userData: any;\r\n\r\n  proceedLogin() {\r\n    this.service.LogIn(this.loginForm.value).subscribe((res) => {\r\n      this.userData = res;\r\n      console.log(this.userData.status);\r\n      console.log(this.userData);\r\n      switch (this.userData.status) {\r\n        case 200:\r\n          if (this.userData['datos'].isActive === 'active') {\r\n            this.toastr.success('acceso concedido', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service.storeUserData(\r\n              this.userData.token,\r\n              this.userData['datos'],\r\n              this.userData.rtoken\r\n            );\r\n          } else {\r\n            this.toastr.error(\r\n              'Contactar con administrador',\r\n              'usuario inactivo'\r\n            );\r\n          }\r\n          break;\r\n        case 403:\r\n          this.service.openDialog2();\r\n          break;\r\n\r\n        default:\r\n          this.service.openDialog2();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  proceedRegistration() {\r\n    if (this.registerForm.valid) {\r\n      console.log(this.registerForm.value);\r\n      this.service.Proceedregister(this.registerForm.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else if (res.status == 200) {\r\n            this.toastr.success(\r\n              'Solicitar acceso con el administrador ',\r\n              'Registro exitoso'\r\n            );\r\n            this.mostrarLogin();\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.toastr.warning('error', error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  mostrarLogin() {\r\n    this.showDiv.Login = true;\r\n    this.showDiv.Register = false;\r\n    this.show = false;\r\n    this.pass = 'password';\r\n  }\r\n  mostrarRegistro() {\r\n    this.showDiv.Register = true;\r\n    this.showDiv.Login = false;\r\n    this.show = false;\r\n    this.pass = 'password';\r\n  }\r\n\r\n  get password() {\r\n    return this.registerForm.get('password')!;\r\n  }\r\n\r\n  showPass() {\r\n    if (this.pass === 'password') {\r\n      this.pass = 'text';\r\n      this.show = true;\r\n    } else {\r\n      this.pass = 'password';\r\n      this.show = false;\r\n    }\r\n  }\r\n}\r\n","<div class=\"grid grid-flow-row-dense grid-cols-1 sm:grid-cols-2\">\r\n  <div *ngIf=\"!mobile\" class=\"row-span-1 col-span-1\">\r\n    <img src=\"assets/g850.png\" alt=\"\" class=\"login\" />\r\n  </div>\r\n\r\n  <div class=\"row-span-1 col-span-1\">\r\n    <div class=\"carta flex flex-col col-span-1\" *ngIf=\"showDiv.Login\">\r\n      <div class=\"logo\">\r\n        <img\r\n          src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n          alt=\"\"\r\n          class=\"linetec_logo m-5\"\r\n        />\r\n        <h2 class=\"titulo\">Iniciar sesión</h2>\r\n      </div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"loginForm\"\r\n        (ngSubmit)=\"proceedLogin()\"\r\n      >\r\n        <div class=\"flex flex-col\">\r\n          <mat-form-field class=\"m-input\">\r\n            <input matInput placeholder=\"Usuario\" formControlName=\"username\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              [type]=\"pass\"\r\n              matInput\r\n              placeholder=\"Contraseña\"\r\n              formControlName=\"password\"\r\n            />\r\n            <a\r\n              matSuffix\r\n              style=\"cursor: pointer\"\r\n              (click)=\"showPass()\"\r\n              class=\"p-2\"\r\n            >\r\n              <mat-icon>{{ show ? \"visibility\" : \"visibility_off\" }}</mat-icon>\r\n            </a>\r\n          </mat-form-field>\r\n          <div class=\"space-y-[10vh] 2xl:space-y-[40vh]\">\r\n            <button\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !loginForm.value.username || !loginForm.value.password\r\n              \"\r\n              id=\"boton2\"\r\n            >\r\n              Ingresar\r\n            </button>\r\n            <a mat-raised-button (click)=\"mostrarRegistro()\" id=\"boton\">\r\n              Registrar Usuario\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"carta col-span-1\" *ngIf=\"showDiv.Register\">\r\n      <div class=\"logo\">\r\n        <img\r\n          src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n          alt=\"\"\r\n          class=\"linetec_logo m-5 p-3\"\r\n        />\r\n        <h2 class=\"titulo\">Registro de usuario</h2>\r\n      </div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"registerForm\"\r\n        (ngSubmit)=\"[proceedRegistration(), registerForm.reset()]\"\r\n      >\r\n        <div class=\"flex flex-col p-5\">\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Nombre de usuario\"\r\n              formControlName=\"username\"\r\n            />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Nombre y apellido\"\r\n              formControlName=\"name\"\r\n            />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input matInput placeholder=\"Email\" formControlName=\"email\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              [type]=\"pass\"\r\n              matInput\r\n              placeholder=\"Contraseña\"\r\n              formControlName=\"password\"\r\n            />\r\n            <a\r\n              matSuffix\r\n              style=\"cursor: pointer\"\r\n              (click)=\"showPass()\"\r\n              class=\"p-2\"\r\n            >\r\n              <mat-icon>{{ show ? \"visibility\" : \"visibility_off\" }}</mat-icon>\r\n            </a>\r\n          </mat-form-field>\r\n          <div class=\"m-input\">\r\n            <h2>REQUISITOS</h2>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                    !password.value || password.errors?.hasUpper\r\n                      ? ''\r\n                      : 'iconFill'\r\n                  \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n\r\n              <p\r\n                [ngClass]=\"\r\n                  !password.value || password.errors?.hasUpper\r\n                    ? ''\r\n                    : 'requisitos'\r\n                \"\r\n              >\r\n                Al menos una mayúscula\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"!password.value || password.errors?.['minlength'] ?  '' : 'iconFill'\"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n\r\n              <p\r\n                [ngClass]=\"!password.value || password.errors?.['minlength'] ?  '' : 'requisitos'\"\r\n              >\r\n                8 caracteres mínimo\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                    !password.value || password.errors?.hasSp ? '' : 'iconFill'\r\n                  \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n              <p\r\n                [ngClass]=\"\r\n                  !password.value || password.errors?.hasSp ? '' : 'requisitos'\r\n                \"\r\n              >\r\n                Al menos un caracter especial\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                    !password.value || password.errors?.hasNumber\r\n                      ? ''\r\n                      : 'iconFill'\r\n                  \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n              <p\r\n                [ngClass]=\"\r\n                  !password.value || password.errors?.hasNumber\r\n                    ? ''\r\n                    : 'requisitos'\r\n                \"\r\n              >\r\n                Al menos 1 número\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"flex flex-col justify-between space-y-6\">\r\n            <button\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                password.errors ||\r\n                !registerForm.value.username ||\r\n                !registerForm.value.password ||\r\n                !registerForm.value.name ||\r\n                !registerForm.value.email\r\n              \"\r\n              id=\"boton2\"\r\n            >\r\n              Enviar\r\n            </button>\r\n\r\n            <a (click)=\"mostrarLogin()\" id=\"volver\"> Volver </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.minLength(5)])\r\n    ),\r\n    name: this.builder.control('', Validators.required),\r\n    password: this.builder.control(\r\n      '',\r\n      Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(\r\n          '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{8,}'\r\n        ),\r\n      ])\r\n    ),\r\n    email: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.email])\r\n    ),\r\n    role: this.builder.control('64f1f60e918724a5f931d909'),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  proceedRegistration() {\r\n    if (this.registerform.valid) {\r\n      console.log(this.registerform.value);\r\n      this.service.Proceedregister(this.registerform.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else if (res.status == 200) {\r\n            this.toastr.success(\r\n              'Solicitar acceso con el administrador ',\r\n              'Registro exitoso'\r\n            );\r\n            this.router.navigate(['login']);\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.toastr.warning('error', error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Registro</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"proceedRegistration()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre de usuario</mat-label>\r\n          <input matInput formControlName=\"username\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input matInput formControlName=\"name\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Contraseña</mat-label>\r\n          <input type=\"password\" matInput formControlName=\"password\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput formControlName=\"email\" />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Enviar</button>\r\n        <a routerLink=\"/login\" mat-raised-button color=\"accent\"\r\n          >Volver a pantalla de ingreso</a\r\n        >\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Subscription } from 'rxjs';\r\nimport { CSVDato } from 'src/app/models/datos.model';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-tabla',\r\n  templateUrl: './tabla.component.html',\r\n  styleUrls: ['./tabla.component.css'],\r\n})\r\nexport class TablaComponent implements OnInit {\r\n  constructor(\r\n    private service: HttpService,\r\n    private spinnerService: SpinnerService,\r\n    private builder: FormBuilder\r\n  ) {}\r\n  exceedList: any = [];\r\n  dataSource: any;\r\n  listVariables: any = [];\r\n  notExceedList: any = [];\r\n  subscription!: Subscription;\r\n  csv: any = '';\r\n  valor: any;\r\n  range: any = [];\r\n  id_variable!: string;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  ngOnInit(): void {\r\n    this.getVariables();\r\n    this.valor = this.builder.group({\r\n      threshold: new FormControl<number>(25),\r\n    });\r\n\r\n    this.subscription = this.service.listaDatosInRange.subscribe((message) => {\r\n      this.exceedList = message;\r\n      console.log('lista excedida stream', this.exceedList);\r\n      // console.log('prueba filter: ', this.removeDuplicates(this.exceedList));\r\n      this.dataSource = new MatTableDataSource(this.exceedList);\r\n      if (this.exceedList.length != 0) {\r\n        this.spinnerService.detenerSpinner('tabla');\r\n      }\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n    this.subscription = this.service.rangeInfo.subscribe((message: any) => {\r\n      console.log('inicio', message[0], 'final', message[1]);\r\n      this.range = message;\r\n    });\r\n  }\r\n\r\n  removeDuplicates(data: any) {\r\n    const ids = data.map(\r\n      ({ cTime_stamp }: { cTime_stamp: any }) => cTime_stamp\r\n    );\r\n    const filtered = data.filter(\r\n      ({ cTime_stamp }: { cTime_stamp: any }, index: number) =>\r\n        ids.includes(cTime_stamp, index + 1)\r\n    );\r\n\r\n    return filtered;\r\n  }\r\n  downloadCSV() {\r\n    let csvList: CSVDato[];\r\n    csvList = this.exceedList.map((e: any) => ({\r\n      valor_lectura: e.valor_lectura,\r\n      tiempo_inicio: e.time_stamp,\r\n      tiempo_fin: e.cTime_stamp,\r\n      diferencia: e.time,\r\n    }));\r\n\r\n    for (let row = 0; row < csvList.length; row++) {\r\n      let keysAmount = Object.keys(csvList[row]).length;\r\n      let keysCounter = 0;\r\n\r\n      // If this is the first row, generate the headings\r\n      if (row === 0) {\r\n        // Loop each property of the object\r\n        for (let key in csvList[row]) {\r\n          // This is to not add a comma at the last cell\r\n          // The '\\n' adds a new line\r\n          this.csv += key + (keysCounter + 1 < keysAmount ? ',' : '\\r\\n');\r\n          keysCounter++;\r\n        }\r\n      } else {\r\n        for (let key in csvList[row]) {\r\n          this.csv +=\r\n            csvList[row][key] + (keysCounter + 1 < keysAmount ? ',' : '\\r\\n');\r\n          keysCounter++;\r\n        }\r\n      }\r\n\r\n      keysCounter = 0;\r\n    }\r\n    let link = document.createElement('a');\r\n    link.id = 'download-csv';\r\n    link.setAttribute(\r\n      'href',\r\n      'data:text/plain;charset=utf-8,' + encodeURIComponent(this.csv)\r\n    );\r\n    link.setAttribute('download', 'alertas_data.csv');\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  }\r\n\r\n  displayedColumns: string[] = [\r\n    'exceed_value',\r\n    'tiempo_inicio',\r\n    'tiempo_fin',\r\n    'diferencia',\r\n  ];\r\n\r\n  getInRangeTabla(id_variable: string) {\r\n    this.spinnerService.llamarSpinner('tabla');\r\n    var inicio: any = this.range[0];\r\n    var final: any = this.range[1];\r\n    this.service.getAllInRange(id_variable, inicio, final).subscribe((data) => {\r\n      this.exceedList = data['datos'].filter((x: any) => {\r\n        return x.valor_lectura > this.valor.value.threshold;\r\n      });\r\n      this.notExceedList = data['datos'].filter((n: any) => {\r\n        return n.valor_lectura < this.valor.value.threshold;\r\n      });\r\n      var notDuplicatedExceedList = this.removeDuplicates(this.exceedList);\r\n      var notDuplicatedNotExceedList = this.removeDuplicates(\r\n        this.notExceedList\r\n      );\r\n      console.log(\r\n        'exceed: ',\r\n        notDuplicatedExceedList,\r\n        'not exceed: ',\r\n        notDuplicatedNotExceedList\r\n      );\r\n      if (data['datos'].length == 0) {\r\n        this.spinnerService.detenerSpinner('tabla');\r\n        this.service.stream_DatosInRange([]);\r\n      }\r\n      this.spinnerService.detenerSpinner('tabla');\r\n      var result = this.notExceedListPusher(\r\n        notDuplicatedNotExceedList,\r\n        notDuplicatedExceedList\r\n      );\r\n      this.enviarDatos(result[0], result[1]);\r\n    });\r\n  }\r\n  formatTime(notExceed: number, exceed: number) {\r\n    var seconds = (notExceed - exceed) / 1000;\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const remainingSeconds = seconds % 60;\r\n\r\n    const formattedHours = String(hours).padStart(2, '0');\r\n    const formattedMinutes = String(minutes).padStart(2, '0');\r\n    const formattedSeconds = String(remainingSeconds).padStart(2, '0');\r\n\r\n    return `${formattedHours}H ${formattedMinutes}M ${formattedSeconds}S`;\r\n  }\r\n  formatDate(data: string) {\r\n    const date = new Date(data);\r\n    return (\r\n      [\r\n        date.getFullYear(),\r\n        this.padTo2Digits(date.getMonth() + 1),\r\n        this.padTo2Digits(date.getDate()),\r\n      ].join('-') +\r\n      ' ' +\r\n      [\r\n        this.padTo2Digits(date.getHours()),\r\n        this.padTo2Digits(date.getMinutes()),\r\n        this.padTo2Digits(date.getSeconds()),\r\n      ].join(':')\r\n    );\r\n  }\r\n  padTo2Digits(num: number) {\r\n    return num.toString().padStart(2, '0');\r\n  }\r\n  getVariables() {\r\n    this.service.getVariables().subscribe((data) => {\r\n      this.listVariables = data;\r\n      this.id_variable = this.listVariables[0]._id;\r\n    });\r\n  }\r\n  variableSelected(value: Event) {\r\n    this.id_variable = (value.target as HTMLSelectElement).value;\r\n    console.log('valor variable:', this.id_variable);\r\n  }\r\n  enviarDatos(notExceedList: any, ExceedList: any) {\r\n    console.log(\r\n      'exceed: ',\r\n      ExceedList.length,\r\n      'not exceed: ',\r\n      notExceedList.length\r\n    );\r\n    ExceedList.map((e: any, index: number) => {\r\n      e.time = this.formatTime(\r\n        new Date(\r\n          notExceedList[\r\n            index < notExceedList.length ? index : notExceedList.length - 1\r\n          ].time_stamp\r\n        ).getTime(),\r\n        new Date(e.time_stamp).getTime()\r\n      );\r\n      e.cTime_stamp = this.formatDate(\r\n        notExceedList[\r\n          index < notExceedList.length ? index : notExceedList.length - 1\r\n        ].time_stamp\r\n      );\r\n      e.time_stamp = this.formatDate(e.time_stamp);\r\n    });\r\n    this.service.stream_DatosInRange(ExceedList);\r\n  }\r\n\r\n  notExceedListPusher(notDuplicatedNotExceedList: any, exceedList: any) {\r\n    const notExceedList = [];\r\n    const ExceedList = [];\r\n    const resultado: any = [];\r\n    let j = 0;\r\n\r\n    //no funciona bien si el not exceeded list es mas grande hay que arreglarlo\r\n\r\n    for (let i = 0; i < exceedList.length; ) {\r\n      // console.log('i es: ', i);\r\n      if (\r\n        new Date(notDuplicatedNotExceedList[j].time_stamp).getTime() >\r\n        new Date(exceedList[i].time_stamp).getTime()\r\n      ) {\r\n        // console.log(\r\n        //   'exceed: ',\r\n        //   exceedList[i],\r\n        //   'not exceed: ',\r\n        //   notDuplicatedNotExceedList[j]\r\n        // );\r\n        notExceedList.push(notDuplicatedNotExceedList[j]);\r\n        ExceedList.push(exceedList[i]);\r\n        i++;\r\n      }\r\n      if (\r\n        j == notDuplicatedNotExceedList.length - 1 ||\r\n        i == exceedList.length - 1\r\n      ) {\r\n        resultado.push(notExceedList);\r\n        resultado.push(ExceedList);\r\n        return resultado;\r\n      } else if (\r\n        new Date(notDuplicatedNotExceedList[j].time_stamp).getTime() <\r\n        new Date(exceedList[i].time_stamp).getTime()\r\n      ) {\r\n        // console.log(\r\n        //   'exceed time stamp: ',\r\n        //   exceedList[i].time_stamp,\r\n        //   'not exceed time stamp: ',\r\n        //   notDuplicatedNotExceedList[j].time_stamp\r\n        // );\r\n        j++;\r\n        // console.log('j es: ', j);\r\n      }\r\n    }\r\n\r\n    return resultado;\r\n  }\r\n}\r\n","<mat-card class=\"mat-elevation-z8 carta\">\r\n  <div>\r\n    <mat-card-header class=\"flex justify-between\">\r\n      <h2 class=\"titulo\">Alerta de valores excedidos</h2>\r\n      <button\r\n        [disabled]=\"exceedList.length == 0\"\r\n        mat-icon-button\r\n        (click)=\"downloadCSV()\"\r\n        matTooltip=\"Descargar Informe\"\r\n      >\r\n        <mat-icon class=\"icono\">download</mat-icon>\r\n      </button>\r\n    </mat-card-header>\r\n  </div>\r\n\r\n  <mat-card-content>\r\n    <div\r\n      class=\"grid grid-cols-2 grid-flow-row sm:grid-cols-2 grid-row-2\"\r\n      [formGroup]=\"valor\"\r\n    >\r\n      <div class=\"\">\r\n        <label for=\"valor_limite\" class=\"subtitulo\">Valor límite</label>\r\n        <input\r\n          id=\"valor_limite\"\r\n          class=\"d-input mr-2\"\r\n          formControlName=\"threshold\"\r\n        />\r\n      </div>\r\n      <div class=\"\">\r\n        <label for=\"selec_variable\" class=\"subtitulo\">Elegir variable</label>\r\n        <select\r\n          class=\"select d-input mr-2\"\r\n          id=\"select_variable\"\r\n          (change)=\"variableSelected($event)\"\r\n        >\r\n          <option\r\n            *ngFor=\"let variable of listVariables\"\r\n            value=\"{{ variable._id }}\"\r\n          >\r\n            {{ variable.nombre }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <button\r\n        class=\"boton mt-4\"\r\n        mat-raised-button\r\n        (click)=\"getInRangeTabla(id_variable)\"\r\n        [disabled]=\"!range[0] || !range[1]\"\r\n      >\r\n        Aplicar\r\n      </button>\r\n    </div>\r\n\r\n    <mat-table matSort [dataSource]=\"dataSource\">\r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"exceed_value\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef>\r\n          Valor Excedido\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.valor_lectura.toFixed(2) }}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"tiempo_inicio\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef>\r\n          Tiempo de inicio\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.time_stamp }}\r\n        </mat-cell>\r\n      </ng-container>\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"tiempo_fin\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef\r\n          >Tiempo de fin</mat-header-cell\r\n        >\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.cTime_stamp }}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"diferencia\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef>\r\n          Diferencia en tiempo\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">{{ element.time }}</mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[5, 10, 20]\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of periodic elements\"\r\n    >\r\n    </mat-paginator>\r\n    <ngx-spinner\r\n      bdColor=\"rgba(51,51,51,0.8)\"\r\n      size=\"medium\"\r\n      color=\"#fff\"\r\n      type=\"ball-spin-clockwise\"\r\n      [fullScreen]=\"false\"\r\n      name=\"tabla\"\r\n    >\r\n    </ngx-spinner>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-updatepopup',\r\n  templateUrl: './updatepopup.component.html',\r\n  styleUrls: ['./updatepopup.component.css'],\r\n})\r\nexport class UpdatepopupComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private service: AuthService,\r\n    private toastr: ToastrService,\r\n    private dialog: MatDialogRef<UpdatepopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  editData: any;\r\n\r\n  ngOnInit(): void {\r\n    this.service.GetAllRoles().subscribe((res) => {\r\n      console.log('roles', res);\r\n      this.rolelist = res;\r\n    });\r\n    if (this.data.username != null && this.data.username != '') {\r\n      this.service.GetById(this.data.username).subscribe((res) => {\r\n        this.editData = res;\r\n        this.registerform.setValue({\r\n          username: this.editData.username,\r\n          name: this.editData.name,\r\n          password: this.editData.password,\r\n          email: this.editData.email,\r\n          role: this.editData.role,\r\n          isActive: this.editData.isActive,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  rolelist: any;\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(''),\r\n    name: this.builder.control(''),\r\n    password: this.builder.control(''),\r\n    email: this.builder.control(''),\r\n    role: this.builder.control('', Validators.required),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  updateUser() {\r\n    if (this.registerform.valid) {\r\n      this.service\r\n        .UpdateUser(this.registerform.value.username, this.registerform.value)\r\n        .subscribe((res) => {\r\n          this.toastr.success('Updated successfully');\r\n          this.dialog.close();\r\n        });\r\n    } else {\r\n      this.toastr.warning('Please select a role');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Update User</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"updateUser()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Role</mat-label>\r\n          <mat-select formControlName=\"role\">\r\n            <mat-option value=\"\">Select Role </mat-option>\r\n            <mat-option *ngFor=\"let item of rolelist\" [value]=\"item._id\">\r\n              {{ item.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-checkbox formControlName=\"isActive\">Is Active? </mat-checkbox>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Update</button>\r\n        <a mat-dialog-close mat-raised-button color=\"accent\">Close</a>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-userlisting',\r\n  templateUrl: './userlisting.component.html',\r\n  styleUrls: ['./userlisting.component.css'],\r\n})\r\nexport class UserlistingComponent implements OnInit {\r\n  constructor(private service: AuthService, private toastr: ToastrService) {}\r\n  ngOnInit(): void {\r\n    this.LoadUser();\r\n  }\r\n  userList: any;\r\n  dataSource: any;\r\n  editable: boolean = false;\r\n  ulist: any = [];\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  LoadUser() {\r\n    this.service.GetAll().subscribe((res) => {\r\n      this.userList = res;\r\n      console.log('userlist: ', this.userList);\r\n      this.dataSource = new MatTableDataSource(this.userList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n    this.service.getUser();\r\n  }\r\n\r\n  displayedColumns: string[] = ['username', 'name', 'email', 'role', 'status'];\r\n\r\n  editableToggle() {\r\n    this.editable = !this.editable;\r\n  }\r\n\r\n  guardarCambios(data: any) {\r\n    var dataToUpdate: any = [];\r\n    var ulist: any = [];\r\n    console.log('user List: ', this.ulist);\r\n    this.service.GetAll().subscribe((res) => {\r\n      ulist = res;\r\n      for (let i = 0; i < ulist.length; i++) {\r\n        console.log(\r\n          'user List: ',\r\n          ulist[i].isActive,\r\n          'updated data: ',\r\n          data[i].isActive,\r\n          'i es : ',\r\n          i\r\n        );\r\n        if (\r\n          ulist[i].isActive != data[i].isActive ||\r\n          ulist[i].role._id != data[i].role._id\r\n        ) {\r\n          console.log(data[i]);\r\n          this.service\r\n            .UpdateUser(data[i].username, data[i])\r\n            .subscribe((res) => {\r\n              console.log(res);\r\n              this.toastr.success('¡Cambios Guardados con exito!', '', {\r\n                toastClass: 'yourclass ngx-toastr',\r\n                positionClass: 'toast-bottom-center',\r\n              });\r\n            });\r\n        }\r\n        if (i == this.userList.length - 1) {\r\n          return;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"fondo\">\r\n  <mat-card-header class=\"\">\r\n    <div class=\"grid grid-cols-2 header\">\r\n      <h2 class=\"titulo justify-self-start\">Listado de usuarios</h2>\r\n\r\n      <a\r\n        (click)=\"editableToggle()\"\r\n        mat-raised-button\r\n        class=\"boton justify-self-end\"\r\n      >\r\n        <mat-icon id=\"icon\"> edit_note </mat-icon>\r\n        {{ editable ? \"Cancelar\" : \"Editar Listado\" }}\r\n      </a>\r\n    </div>\r\n  </mat-card-header>\r\n\r\n  <mat-card-content>\r\n    <div class=\"card\">\r\n      <mat-table matSort [dataSource]=\"dataSource\" class=\"mb-3\">\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Nombre</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">{{ element.name }}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- username Column -->\r\n        <ng-container matColumnDef=\"username\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Nombre de usuario</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">{{ element.username }}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- email Column -->\r\n        <ng-container matColumnDef=\"email\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Email</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">{{ element.email }}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Status Column -->\r\n        <ng-container matColumnDef=\"status\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Estado</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <mat-select\r\n              [ngClass]=\"editable ? '' : 'select'\"\r\n              [style]=\"\r\n                element.isActive === 'active'\r\n                  ? 'color:#52b48f'\r\n                  : 'color: #c82d3b'\r\n              \"\r\n              [disabled]=\"!editable\"\r\n              [(value)]=\"element.isActive\"\r\n            >\r\n              <mat-option style=\"color: #c82d3b\" value=\"inactive\"\r\n                >Inactivo</mat-option\r\n              >\r\n              <mat-option style=\"color: #52b48f\" value=\"active\"\r\n                >Activo</mat-option\r\n              >\r\n            </mat-select>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- role Column -->\r\n        <ng-container matColumnDef=\"role\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Rol</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <mat-select\r\n              [ngClass]=\"editable ? '' : 'select'\"\r\n              [disabled]=\"!editable\"\r\n              [(value)]=\"element.role._id\"\r\n            >\r\n              <mat-option value=\"64f1f60e918724a5f931d909\">\r\n                Usuario\r\n              </mat-option>\r\n              <mat-option value=\"64d3cdd575d7a2df083079bd\">\r\n                Administrador\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n      </mat-table>\r\n      <div class=\"grid grid-cols-1\">\r\n        <a\r\n          (click)=\"guardarCambios(dataSource._data._value)\"\r\n          class=\"boton justify-self-end\"\r\n          mat-raised-button\r\n          >Guardar Cambios</a\r\n        >\r\n      </div>\r\n      <mat-paginator\r\n        [pageSizeOptions]=\"[5, 10, 20]\"\r\n        showFirstLastButtons\r\n        aria-label=\"Select page of periodic elements\"\r\n      >\r\n      </mat-paginator>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthService } from './service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  rtoken_url = environment.API_URL_RTOKEN;\r\n  rBody = {\r\n    token: sessionStorage.getItem('rtoken')?.toString(),\r\n    user: sessionStorage.getItem('username')?.toString(),\r\n  };\r\n  resData: any;\r\n  timeout: any;\r\n  token: any;\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  refreshToken(): void {\r\n    this.authService.postForm(this.rtoken_url, this.rBody).subscribe((res) => {\r\n      this.resData = res.body;\r\n      console.log(\r\n        'refresh token: ',\r\n        this.rBody,\r\n        'access Token: ',\r\n        this.resData\r\n      );\r\n      console.log('status code: ', res.status);\r\n      this.token = this.resData.accessToken;\r\n      sessionStorage.setItem('token', this.resData.accessToken);\r\n      sessionStorage.setItem('rtoken', this.resData.refreshToken);\r\n      this.timeout =\r\n        this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n        new Date().valueOf();\r\n      this.authService.expirationCounter(this.timeout);\r\n      if (res.status == 200) {\r\n        this.toastr.success('sesion extendida');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Sesion a punto de exipirar</h1>\r\n<div mat-dialog-content>\r\n  <p>Desea continuar con su sesion?</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No</button>\r\n  <button\r\n    class=\"m-3\"\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    mat-button\r\n    (click)=\"refreshToken()\"\r\n    [mat-dialog-close]\r\n    cdkFocusInitial\r\n  >\r\n    De acuerdo\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n@Component({\r\n  selector: 'app-departamentos',\r\n  templateUrl: './departamentos.component.html',\r\n  styleUrls: ['./departamentos.component.css'],\r\n})\r\nexport class DepartamentosComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listProvincias: any;\r\n  listDepartamentos: any;\r\n  apiDepartamentos = environment.API_URL_ARGENTINA_DEPARTAMENTOS; //hay que cambiar la variable\r\n  apiLocalidades = environment.API_URL_ARGENTINA_LOCALIDADES; //hay que cambiar la variable\r\n  apiProvincias = environment.API_URL_PROVINCIAS;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  isOptional = true;\r\n  id_provincia!: string;\r\n  id_departamento!: string;\r\n  departamentoForm!: FormGroup;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.departamentoForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.departamentoSelected.subscribe(\r\n      (message) => (this.id_departamento = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n    this.subscription2 = this.service.listDepartamentos.subscribe(\r\n      (message) => (this.listDepartamentos = message)\r\n    );\r\n  }\r\n  //no esta en uso\r\n\r\n  setDepartamento(id: any) {\r\n    console.log('set Departamento', id);\r\n    this.service.changeMessage(id);\r\n    this.service.departamentoSelectedSource.next(id);\r\n\r\n    this.GetLocalidadesByDepartamento();\r\n  }\r\n\r\n  GetLocalidadesByDepartamento() {\r\n    this.service\r\n      .getForm(\r\n        this.apiLocalidades +\r\n          this.id_provincia +\r\n          `&departamento=${this.id_departamento}&orden=nombre&aplanar=true&campos=departamento.nombre&max=600&exacto=true`\r\n      )\r\n      .subscribe((res: any) => {\r\n        console.log('Departamento-form get localidades', res.localidades);\r\n        let localidadesUnicas = this.removeDuplicates(res.localidades);\r\n        console.log('localidades unicas: ', localidadesUnicas);\r\n        this.service.streamLocalidades_DepartamentoSelected(localidadesUnicas);\r\n      });\r\n  }\r\n  removeDuplicates(data: any) {\r\n    const seen = new Set();\r\n    const filteredArr = data.filter((el: any) => {\r\n      const duplicate = seen.has(el.nombre);\r\n      seen.add(el.nombre);\r\n      return !duplicate;\r\n    });\r\n    return filteredArr;\r\n  }\r\n}\r\n// https://apis.datos.gob.ar/georef/api/localidades?provincia=${provincia}&departamento=${departamento}&aplanar=true&campos=basico&max=100&exacto=true\r\n","<div class=\"carta flex flex-col p-3\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Departamentos/Partidos/Comunas </mat-label>\r\n    <mat-select [disabled]=\"!id_provincia\">\r\n      <mat-option\r\n        *ngFor=\"let departamento of listDepartamentos\"\r\n        [value]=\"departamento.nombre\"\r\n        (click)=\"[setDepartamento(departamento.nombre)]\"\r\n      >\r\n        <p>{{ departamento.nombre }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-empresa-form',\r\n  templateUrl: './empresa-form.component.html',\r\n  styleUrls: ['./empresa-form.component.css'],\r\n})\r\nexport class EmpresaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listLocalidades: any;\r\n  listEmpresas: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlantas = environment.API_URL_PLANTA;\r\n  isOptional = true;\r\n  id_localidad!: string;\r\n  id_empresa!: string;\r\n  empresaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.empresaForm = this.builder.group({\r\n      razon_social: this.builder.control('', Validators.required),\r\n      nombre_fantasia: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n      rubro: this.builder.control('', Validators.required),\r\n      piso: this.builder.control(''),\r\n      deptartamento: this.builder.control(''),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.listEmpresas.subscribe(\r\n      (message) => (this.listEmpresas = message)\r\n    );\r\n  }\r\n\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createEmpresa() {\r\n    if (this.empresaForm.valid) {\r\n      console.log(this.empresaForm.value);\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        razon_social: this.empresaForm.value.razon_social,\r\n        nombre_fantasia: this.empresaForm.value.nombre_fantasia,\r\n        calle: this.empresaForm.value.calle,\r\n        altura: this.empresaForm.value.altura,\r\n        piso: this.empresaForm.value.piso,\r\n        deptartamento: this.empresaForm.value.deptartamento,\r\n        rubro: this.empresaForm.value.rubro,\r\n      };\r\n      this.service.postForm(this.apiEmpresas, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Empresa registrada corectamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service\r\n              .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n              .subscribe((res: any) => {\r\n                console.log('empresas res after crear: ', res);\r\n                this.listEmpresas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarEmpresa(id: string) {\r\n    console.log(this.apiEmpresas + id);\r\n    this.service.deleteForm(this.apiEmpresas, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Empresa borrada correctamente');\r\n          this.GetAllEmpresas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setEmpresa(id: any) {\r\n    console.log('set empresa', id);\r\n    this.id_empresa = id;\r\n    this.service.changeMessage(id);\r\n    this.service.empresaSelectedSource.next(id);\r\n    this.GetPlantasByEmpresas();\r\n  }\r\n\r\n  GetPlantasByEmpresas() {\r\n    this.service\r\n      .getForm(this.apiPlantas + this.id_empresa)\r\n      .subscribe((res: any) => {\r\n        console.log('empresa get plantas', res);\r\n        this.service.streamPlantas_EmpresaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir una empresa</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Lista De Empresas</mat-label>\r\n\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let empresa of listEmpresas\"\r\n            [value]=\"empresa._id\"\r\n            (click)=\"[setEmpresa(empresa._id)]\"\r\n          >\r\n            <p>{{ empresa.nombre_fantasia }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header>\r\n    <h2 class=\"titulo\">Ingresar nueva empresa</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <form\r\n        [formGroup]=\"empresaForm\"\r\n        (ngSubmit)=\"createEmpresa()\"\r\n        (submit)=\"empresaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-6 gap-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Razon Social</mat-label>\r\n              <input class=\"d-input\" matInput formControlName=\"razon_social\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 row-start-2\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre Fantasia</mat-label>\r\n              <input matInput formControlName=\"nombre_fantasia\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 row-start-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row-start-4\">\r\n            <mat-form-field>\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row-start-4\">\r\n            <mat-form-field>\r\n              <mat-label>Piso</mat-label>\r\n              <input matInput formControlName=\"piso\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row-start-4\">\r\n            <mat-form-field>\r\n              <mat-label>Deptartamento</mat-label>\r\n              <input matInput formControlName=\"deptartamento\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Rubro</mat-label>\r\n              <input matInput formControlName=\"rubro\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !empresaForm.value.razon_social ||\r\n                !empresaForm.value.nombre_fantasia ||\r\n                !empresaForm.value.calle ||\r\n                !empresaForm.value.altura ||\r\n                !empresaForm.value.rubro\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-empresa-planta-form',\r\n  templateUrl: './empresa-planta-form.component.html',\r\n  styleUrls: ['./empresa-planta-form.component.css'],\r\n})\r\nexport class EmpresaPlantaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listEmpresas: any;\r\n  listLocalidades: any;\r\n  listPlantas: any;\r\n  id_empresa!: string;\r\n  id_localidad!: string;\r\n  id_planta!: string;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  isOptional = true;\r\n  plantaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllEmpresas();\r\n    this.plantaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.listPlantas.subscribe(\r\n      (message) => (this.listPlantas = message)\r\n    );\r\n    this.subscription = this.service.empresaSelected.subscribe(\r\n      (message) => (this.id_empresa = message)\r\n    );\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n  }\r\n\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createPlanta() {\r\n    if (this.plantaForm.valid) {\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        id_empresa: this.id_empresa,\r\n        nombre: this.plantaForm.value.nombre,\r\n        calle: this.plantaForm.value.calle,\r\n        altura: this.plantaForm.value.altura,\r\n      };\r\n      console.log(this.plantaForm.value);\r\n      this.service.postForm(this.apiPlanta, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else {\r\n            this.toastr.success('Planta registrada corectamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service\r\n              .getForm(this.apiPlanta + this.id_empresa)\r\n              .subscribe((res: any) => {\r\n                this.listPlantas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarPlanta(id: string) {\r\n    console.log(this.apiPlanta + id);\r\n    this.service.deleteForm(this.apiPlanta, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Planta borrada correctamente');\r\n          this.GetAllPlantas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setPlanta(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_planta = id;\r\n    this.service.plantaSelectedSource.next(id);\r\n    this.GetLineaByPlanta();\r\n  }\r\n\r\n  GetLineaByPlanta() {\r\n    this.service\r\n      .getForm(this.apiLinea + this.id_planta)\r\n      .subscribe((res: any) => {\r\n        console.log('planta get lineas', res);\r\n        this.service.streamLinea_PlantaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir una planta</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-form-field>\r\n        <mat-label>Elegir una planta</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let planta of listPlantas\"\r\n            [value]=\"planta._id\"\r\n            (click)=\"[setPlanta(planta._id, planta.nombre)]\"\r\n          >\r\n            <p>{{ planta.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar nueva planta</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <form\r\n        [formGroup]=\"plantaForm\"\r\n        (ngSubmit)=\"createPlanta()\"\r\n        (submit)=\"plantaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !plantaForm.value.nombre ||\r\n                !plantaForm.value.calle ||\r\n                !plantaForm.value.altura\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-linea-produccion-form',\r\n  templateUrl: './linea-produccion-form.component.html',\r\n  styleUrls: ['./linea-produccion-form.component.css'],\r\n})\r\nexport class LineaProduccionFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPlantas: any;\r\n  listLineas: any;\r\n  id_empresa_planta!: string;\r\n  id_linea!: string;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  lineaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPlantas();\r\n    this.lineaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n      identificador: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.listLineas.subscribe(\r\n      (message) => (this.listLineas = message)\r\n    );\r\n    this.subscription = this.service.plantaSelected.subscribe(\r\n      (message) => (this.id_empresa_planta = message)\r\n    );\r\n  }\r\n\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLinea() {\r\n    if (this.lineaForm.valid) {\r\n      console.log(this.lineaForm.value);\r\n      let body = {\r\n        id_empresa_planta: this.id_empresa_planta,\r\n        nombre: this.lineaForm.value.nombre,\r\n        descripcion: this.lineaForm.value.descripcion,\r\n        identificador: this.lineaForm.value.identificador,\r\n      };\r\n      this.service.postForm(this.apiLinea, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success(\r\n              'Linea de produccion registrada corectamente',\r\n              '',\r\n              {\r\n                toastClass: 'yourclass ngx-toastr',\r\n                positionClass: 'toast-bottom-center',\r\n              }\r\n            );\r\n            this.service\r\n              .getForm(this.apiLinea + this.id_empresa_planta)\r\n              .subscribe((res: any) => {\r\n                this.listLineas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLineaProduccion(id: string) {\r\n    console.log(this.apiLinea + id);\r\n    this.service.deleteForm(this.apiLinea, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Linea de produccion borrada correctamente');\r\n          this.GetAllLineas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLinea(id: any, nombre: any) {\r\n    console.log('set linea', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_linea = id;\r\n    this.service.lineaSelectedSource.next(id);\r\n    this.GetMaquinaByLinea();\r\n  }\r\n\r\n  GetMaquinaByLinea() {\r\n    this.service\r\n      .getForm(this.apiMaquina + this.id_linea)\r\n      .subscribe((res: any) => {\r\n        console.log('linea get maquinas', res);\r\n        this.service.streamMaquinas_LineaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Elegir una línea de producción</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Linea</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let linea of listLineas\"\r\n            [value]=\"linea._id\"\r\n            (click)=\"[setLinea(linea._id, linea.nombre)]\"\r\n          >\r\n            <p>{{ linea.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar nueva línea</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"lineaForm\"\r\n        (ngSubmit)=\"createLinea()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>identificador</mat-label>\r\n              <input matInput formControlName=\"identificador\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !lineaForm.value.nombre ||\r\n                !lineaForm.value.descripcion ||\r\n                !lineaForm.value.identificador\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-localidad-form',\r\n  templateUrl: './localidad-form.component.html',\r\n  styleUrls: ['./localidad-form.component.css'],\r\n})\r\nexport class LocalidadFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listProvincias: any;\r\n  listLocalidades: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiProvincias = environment.API_URL_PROVINCIAS;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  isOptional = true;\r\n  id_provincia!: string;\r\n  id_localidad!: string;\r\n  id_departamento!: string;\r\n  localidadForm!: FormGroup;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.localidadForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n    this.subscription = this.service.departamentoSelected.subscribe(\r\n      (message) => (this.id_departamento = message)\r\n    );\r\n    this.subscription2 = this.service.listLocalidades.subscribe(\r\n      (message) => (this.listLocalidades = message)\r\n    );\r\n  }\r\n  //no esta en uso\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLocalidad() {\r\n    if (this.localidadForm.valid) {\r\n      console.log(this.localidadForm.value);\r\n      let body = {\r\n        nombre: this.localidadForm.value.nombre,\r\n        id_provincia: this.id_provincia,\r\n      };\r\n      this.service.postForm(this.apiLocalidad, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Localidad registrada correctamente');\r\n            this.service\r\n              .getForm(this.apiLocalidad + this.id_provincia)\r\n              .subscribe((res: any) => {\r\n                this.listLocalidades = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLocalidad(id: string) {\r\n    console.log(this.apiLocalidad + id);\r\n    this.service.deleteForm(this.apiLocalidad, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Localidad borrada correctamente');\r\n          this.GetAllLocalidades();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLocalidad(id: any) {\r\n    console.log('set localidad', id);\r\n    this.service.changeMessage(id);\r\n    this.service.localidadSelectedSource.next(id);\r\n\r\n    this.GetEmpresasByLocalidad();\r\n  }\r\n\r\n  GetEmpresasByLocalidad() {\r\n    this.service\r\n      .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n      .subscribe((res: any) => {\r\n        console.log('Localidad-form get empresas', res);\r\n        this.service.streamEmpresas_LocalidadSelected(res);\r\n      });\r\n  }\r\n}\r\n","<div class=\"carta flex flex-col p-3\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Localidad </mat-label>\r\n    <mat-select [disabled]=\"!id_departamento\">\r\n      <mat-option\r\n        *ngFor=\"let localidad of listLocalidades\"\r\n        [value]=\"localidad.nombre ? localidad.nombre : localidad\"\r\n        (click)=\"\r\n          [setLocalidad(localidad.nombre ? localidad.nombre : localidad)]\r\n        \"\r\n      >\r\n        <p>{{ localidad.nombre ? localidad.nombre : localidad }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-maquina-form',\r\n  templateUrl: './maquina-form.component.html',\r\n  styleUrls: ['./maquina-form.component.css'],\r\n})\r\nexport class MaquinaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listLineas: any;\r\n  listTipoMaquina: any;\r\n  listMaquinas: any;\r\n  message: any;\r\n  id_linea_produccion!: string;\r\n  id_tipo_maquina!: string;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  maquinaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLineas();\r\n    this.GetAllTipos();\r\n\r\n    this.maquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      marca: this.builder.control('', Validators.required),\r\n      modelo: this.builder.control('', Validators.required),\r\n      detalle: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.currentMessage.subscribe(\r\n      (message) => (this.message = message)\r\n    );\r\n    this.subscription = this.service.listMaquinas.subscribe(\r\n      (message) => (this.listMaquinas = message)\r\n    );\r\n    this.subscription = this.service.lineaSelected.subscribe(\r\n      (message) => (this.id_linea_produccion = message)\r\n    );\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => (this.id_tipo_maquina = message)\r\n    );\r\n  }\r\n\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n  GetAllTipos() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquinas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createMaquina() {\r\n    if (this.maquinaForm.valid) {\r\n      console.log(this.maquinaForm.value);\r\n      let body = {\r\n        id_linea_produccion: this.id_linea_produccion,\r\n        id_tipo_maquina: this.id_tipo_maquina,\r\n        nombre: this.maquinaForm.value.nombre,\r\n        marca: this.maquinaForm.value.marca,\r\n        modelo: this.maquinaForm.value.modelo,\r\n        detalle: this.maquinaForm.value.detalle,\r\n      };\r\n      this.service.postForm(this.apiMaquina, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Maquina registrada corectamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service\r\n              .getForm(this.apiMaquina + this.id_linea_produccion)\r\n              .subscribe((res: any) => {\r\n                console.log('res maquina: ', res);\r\n                this.listMaquinas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarMaquina(id: string) {\r\n    console.log(this.apiMaquina + id);\r\n    this.service.deleteForm(this.apiMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Maquina borrada correctamente');\r\n          this.GetAllMaquinas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setMaquina(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamMaquinaSelected(maquina_id: string) {\r\n    this.service.streamMaquinaSelected(maquina_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir una máquina</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una maquina</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let maquina of listMaquinas\"\r\n            [value]=\"maquina._id\"\r\n            (click)=\"\r\n              [\r\n                setMaquina(maquina._id, maquina.nombre),\r\n                StreamMaquinaSelected(maquina._id)\r\n              ]\r\n            \"\r\n          >\r\n            <p>{{ maquina.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar una nueva máquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"maquinaForm\"\r\n        (ngSubmit)=\"createMaquina()\"\r\n        (submit)=\"maquinaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-5\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Marca</mat-label>\r\n              <input matInput formControlName=\"marca\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Modelo</mat-label>\r\n              <input matInput formControlName=\"modelo\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Detalle</mat-label>\r\n              <input matInput formControlName=\"detalle\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !maquinaForm.value.nombre ||\r\n                !maquinaForm.value.marca ||\r\n                !maquinaForm.value.modelo ||\r\n                !maquinaForm.value.detalle\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-pais-form',\r\n  templateUrl: './pais-form.component.html',\r\n  styleUrls: ['./pais-form.component.css'],\r\n})\r\nexport class PaisFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private _httpservice: HttpService\r\n  ) {}\r\n  listPaises: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiArgentinaPronvincias = environment.API_URL_ARGENTINA_PROVINCIAS;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  isOptional = true;\r\n  paisForm!: FormGroup;\r\n  nombre_pais!: string;\r\n  message2!: any;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  completed: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPaises();\r\n    this.paisForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.nombre_pais = message)\r\n    );\r\n  }\r\n\r\n  GetAllPaises() {\r\n    this._httpservice.httpGet(this.apiPaises).subscribe((res: any) => {\r\n      console.log('lista paises', res);\r\n      this.listPaises = res['data'];\r\n      this.setPais(this.listPaises[7].country);\r\n    });\r\n  }\r\n  setPais(id: any) {\r\n    console.log('set pais', id);\r\n    this.service.changeMessage(id);\r\n    this.service.paisSelectedSource.next(id);\r\n    this.GetProvinciasByPais();\r\n  }\r\n\r\n  GetProvinciasByPais() {\r\n    console.log('pais nombre', this.nombre_pais);\r\n    if (this.nombre_pais == 'Argentina') {\r\n      this._httpservice\r\n        .httpGet(this.apiArgentinaPronvincias)\r\n        .subscribe((res: any) => {\r\n          console.log('pais form get provincias', res.provincias);\r\n          this.service.streamProvincias_PaisSelected(res.provincias);\r\n        });\r\n    } else {\r\n      let body = {\r\n        country: this.nombre_pais,\r\n      };\r\n      this._httpservice\r\n        .httpPost(this.apiProvincia, body)\r\n        .subscribe((res: any) => {\r\n          console.log('pais form get provincias', res.body.data.states);\r\n          this.service.streamProvincias_PaisSelected(res.body.data.states);\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"carta mat-elevation-z flex flex-col p-3\" style=\"display: none\">\r\n  <mat-form-field>\r\n    <mat-label>País</mat-label>\r\n\r\n    <mat-select (selectionChange)=\"(!completed)\">\r\n      <mat-option\r\n        *ngFor=\"let pais of listPaises\"\r\n        [value]=\"pais.country\"\r\n        (click)=\"setPais(pais.country)\"\r\n      >\r\n        <p>{{ pais.country }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-proceso-form',\r\n  templateUrl: './proceso-form.component.html',\r\n  styleUrls: ['./proceso-form.component.css'],\r\n})\r\nexport class ProcesoFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  procesoForm!: FormGroup;\r\n  listProceso: any;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllProcesos();\r\n    this.procesoForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProceso = res['datos'];\r\n    });\r\n  }\r\n\r\n  crearProceso() {\r\n    if (this.procesoForm.valid) {\r\n      console.log(this.procesoForm.value);\r\n      this.service.postForm(this.apiProceso, this.procesoForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('proceso registrado correctamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.GetAllProcesos();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarProcesos(id: string) {\r\n    console.log(this.apiProceso + id);\r\n    this.service.deleteForm(this.apiProceso, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Proceso borrado correctamente');\r\n          this.GetAllProcesos();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setProceso(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamProcesoSelected(proceso_id: string) {\r\n    this.service.streamProcesoSelected(proceso_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir un proceso</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un proceso</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let proceso of listProceso\"\r\n            [value]=\"proceso._id\"\r\n            (click)=\"\r\n              [\r\n                setProceso(proceso._id, proceso.nombre),\r\n                StreamProcesoSelected(proceso._id)\r\n              ]\r\n            \"\r\n          >\r\n            <p>{{ proceso.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar un nuevo proceso</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"procesoForm\"\r\n        (ngSubmit)=\"crearProceso()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-3\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre del proceso</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Descripcion del proceso</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !procesoForm.value.nombre || !procesoForm.value.descripcion\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-provincia-form',\r\n  templateUrl: './provincia-form.component.html',\r\n  styleUrls: ['./provincia-form.component.css'],\r\n})\r\nexport class ProvinciaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private _httpservice: HttpService\r\n  ) {}\r\n  listPaises: any;\r\n  listProvincias: any;\r\n  listProvinciasPais: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiArgentinaDepartamentos = environment.API_URL_ARGENTINA_DEPARTAMENTOS;\r\n  isOptional = true;\r\n  provinciaForm!: FormGroup;\r\n  nombre_pais!: string;\r\n  id_provincia!: string;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.provinciaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.nombre_pais = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n\r\n    this.subscription2 = this.service.listProvincias.subscribe(\r\n      (message) => (this.listProvinciasPais = message)\r\n    );\r\n  }\r\n\r\n  setProvincia(nombre: any) {\r\n    console.log('set provincia nombre', nombre);\r\n    this.service.changeMessage(nombre);\r\n    this.service.provinciaSelectedSource.next(nombre);\r\n    this.GetDepartamentosByProvincia();\r\n  }\r\n\r\n  GetDepartamentosByProvincia() {\r\n    if (this.nombre_pais == 'Argentina') {\r\n      this._httpservice\r\n        .httpGet(\r\n          this.apiArgentinaDepartamentos +\r\n            this.id_provincia +\r\n            '&orden=nombre&max=2100&exacto=true'\r\n        )\r\n        .subscribe((res: any) => {\r\n          console.log('pais form get departamentos', res.departamentos);\r\n\r\n          this.service.streamDepartamentos_ProvinciaSelected(res.departamentos);\r\n        });\r\n    } else {\r\n      let body = {\r\n        country: this.nombre_pais,\r\n        state: this.id_provincia,\r\n      };\r\n      this._httpservice\r\n        .httpPost(this.apiLocalidad, body)\r\n        .subscribe((res: any) => {\r\n          console.log('provincia form get localidades', res.body.data);\r\n\r\n          this.service.streamDepartamentos_ProvinciaSelected(res.body.data);\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"carta flex flex-col p-3\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Provincia</mat-label>\r\n\r\n    <mat-select>\r\n      <mat-option\r\n        *ngFor=\"let provincia of listProvinciasPais\"\r\n        [value]=\"provincia.name ? provincia.name : provincia.nombre\"\r\n        (click)=\"\r\n          [setProvincia(provincia.name ? provincia.name : provincia.nombre)]\r\n        \"\r\n      >\r\n        <p>{{ provincia.name ? provincia.name : provincia.nombre }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-tipo-maquina-form',\r\n  templateUrl: './tipo-maquina-form.component.html',\r\n  styleUrls: ['./tipo-maquina-form.component.css'],\r\n})\r\nexport class TipoMaquinaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  listTipoMaquina: any;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  isOptional = true;\r\n  tipoMaquinaForm!: FormGroup;\r\n  pais: any;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTiposMaquina();\r\n    this.tipoMaquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  createTipoMaquina() {\r\n    if (this.tipoMaquinaForm.valid) {\r\n      console.log(this.tipoMaquinaForm.value);\r\n      this.service\r\n        .postForm(this.apiTipoMaquina, this.tipoMaquinaForm.value)\r\n        .subscribe({\r\n          next: (res: any) => {\r\n            console.log('respuesta: ', res);\r\n            if (res.status == 500) {\r\n              this.toastr.warning(res.error.error);\r\n            } else {\r\n              this.toastr.success(\r\n                'Tipo de maquina registrada correctamente',\r\n                '',\r\n                {\r\n                  toastClass: 'yourclass ngx-toastr',\r\n                  positionClass: 'toast-bottom-center',\r\n                }\r\n              );\r\n              this.GetAllTiposMaquina();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.toastr.error(error);\r\n            console.log(error);\r\n          },\r\n        });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  GetAllTiposMaquina() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n\r\n  borrarTipoMaquina(id: string) {\r\n    console.log(this.apiTipoMaquina + id);\r\n    this.service.deleteForm(this.apiTipoMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Tipo de maquina borrada correctamente');\r\n          this.GetAllTiposMaquina();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTipo(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamTipoSelected(tipo_id: string) {\r\n    this.service.streamTipoSelected(tipo_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Elegir un tipo de máquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un Tipo de maquina</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let tipo of listTipoMaquina\"\r\n            [value]=\"tipo._id\"\r\n            (click)=\"\r\n              [setTipo(tipo._id, tipo.nombre), StreamTipoSelected(tipo._id)]\r\n            \"\r\n          >\r\n            <p>{{ tipo.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar un nuevo tipo de máquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"tipoMaquinaForm\"\r\n        (ngSubmit)=\"createTipoMaquina()\"\r\n        (submit)=\"tipoMaquinaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-3\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !tipoMaquinaForm.value.nombre ||\r\n                !tipoMaquinaForm.value.descripcion\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-trigger-form',\r\n  templateUrl: './trigger-form.component.html',\r\n  styleUrls: ['./trigger-form.component.css'],\r\n})\r\nexport class TriggerFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  triggerForm!: FormGroup;\r\n  listTriggers: any;\r\n  trigger_descripcion!: string;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTriggers();\r\n    this.triggerForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTriggers = res;\r\n    });\r\n  }\r\n\r\n  crearTrigger() {\r\n    if (this.triggerForm.valid) {\r\n      console.log(this.triggerForm.value);\r\n      this.service.postForm(this.apiTrigger, this.triggerForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Trigger registrado correctamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.GetAllTriggers();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarTrigger(id: string) {\r\n    console.log(this.apiTrigger + id);\r\n    this.service.deleteForm(this.apiTrigger, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Trigger borrado correctamente');\r\n          this.GetAllTriggers();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTrigger(id: any, nombre: any, descripcion: string) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.trigger_descripcion = descripcion;\r\n  }\r\n\r\n  StreamTriggerSelected(trigger_id: string) {\r\n    this.service.streamTriggerSelected(trigger_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir un trigger</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Seleccionar una opcion del listado</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let trigger of listTriggers\">\r\n            <mat-option\r\n              [value]=\"trigger._id\"\r\n              (click)=\"\r\n                [\r\n                  setTrigger(trigger._id, trigger.nombre, trigger.descripcion),\r\n                  StreamTriggerSelected(trigger._id)\r\n                ]\r\n              \"\r\n            >\r\n              <p>{{ trigger.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ trigger.descripcion }}\r\n            </p>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from './variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-variable-form',\r\n  templateUrl: './variable-form.component.html',\r\n  styleUrls: ['./variable-form.component.css'],\r\n})\r\nexport class VariableFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private httpService: HttpService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  apiVariables = environment.API_URL_VARIABLES;\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  apiMaquinas = environment.API_URL_MAQUINA;\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  variableForm!: FormGroup;\r\n  id_maquina: any;\r\n  id_proceso: any;\r\n  id_trigger: any;\r\n  listProcesos: any;\r\n  listMaquina: any;\r\n  listTrigger: any;\r\n  listaVariables: any;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllVariables();\r\n    this.GetAllProcesos();\r\n    this.GetAllMaquinas();\r\n    this.GetAllTriggers();\r\n    this.variableForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control(''),\r\n      trigger_valor: this._formBuilder.control(''),\r\n    });\r\n    this.subscription = this.service.maquinaSelected.subscribe(\r\n      (message) => (this.id_maquina = message)\r\n    );\r\n    this.subscription = this.service.procesoSelected.subscribe(\r\n      (message) => (this.id_proceso = message)\r\n    );\r\n    this.subscription = this.service.triggerSelected.subscribe(\r\n      (message) => (this.id_trigger = message)\r\n    );\r\n    this.subscription = this.httpService.listaVariables.subscribe(\r\n      (message) => (this.listaVariables = message)\r\n    );\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProcesos = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquinas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTrigger = res;\r\n    });\r\n  }\r\n  GetAllVariables() {\r\n    this.service.getForm(this.apiVariables).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listaVariables = res;\r\n    });\r\n  }\r\n\r\n  crearVariable() {\r\n    if (this.variableForm.valid) {\r\n      console.log(this.variableForm.value);\r\n      let body = {\r\n        id_maquina: this.id_maquina,\r\n        id_proceso: this.id_proceso,\r\n        id_trigger: this.id_trigger,\r\n        nombre: this.variableForm.value.nombre,\r\n        trigger_valor: this.variableForm.value.trigger_valor,\r\n        time_stamp: new Date(),\r\n      };\r\n      this.service.postForm(this.apiVariables, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Variable registrada correctamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.GetAllVariables();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor ingrese datos validos');\r\n    }\r\n  }\r\n\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: variable_id,\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Elegir una variable</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-accordion>\r\n        <mat-expansion-panel (click)=\"GetAllVariables()\" hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Listado de variables</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <mat-list role=\"list\" *ngFor=\"let variable of listaVariables\">\r\n            <mat-list-item role=\"listitem\">\r\n              {{ variable.nombre }}\r\n              <button\r\n                matListItemMeta\r\n                mat-icon-button\r\n                (click)=\"openDialog(variable._id)\"\r\n              >\r\n                <mat-icon class=\"mat-24\" color=\"warn\">delete</mat-icon>\r\n              </button>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar una nueva variable</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"variableForm\"\r\n        (ngSubmit)=\"crearVariable()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>nombre de la variable </mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion de la variable </mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>valor del trigger </mat-label>\r\n              <input matInput formControlName=\"trigger_valor\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !variableForm.value.nombre || !variableForm.value.descripcion\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { HttpService } from 'src/app/service/http.service';\r\n\r\n@Component({\r\n  selector: 'variable-modal',\r\n  templateUrl: 'variable-modal.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class VariableModalComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<VariableModalComponent>,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private httpService: HttpService,\r\n    @Inject(MAT_DIALOG_DATA) public data: string\r\n  ) {}\r\n  listaVariables: any;\r\n  apiVariables = environment.API_URL_VARIABLES;\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  borrarVariable(id: string) {\r\n    console.log(this.apiVariables + id);\r\n    this.service.deleteForm(this.apiVariables, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Variable borrada correctamente', '', {\r\n            toastClass: 'yourclass ngx-toastr',\r\n            positionClass: 'toast-bottom-center',\r\n          });\r\n          this.GetAllVariables();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  GetAllVariables() {\r\n    this.service.getForm(this.apiVariables).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.httpService.stream_Variables(res);\r\n    });\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  <p>¿Estás seguro que querés borrar esta variable?</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No</button>\r\n  <button mat-button (click)=\"borrarVariable(data)\" cdkFocusInitial>\r\n    Confirmar\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { inject } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivateFn,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const authGuard: CanActivateFn = (\r\n  route: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot\r\n) => {\r\n  const router = inject(Router);\r\n  const service = inject(AuthService);\r\n  const toastr = inject(ToastrService);\r\n\r\n  if (service.IsLoggedIn()) {\r\n    if (route.url.length > 0) {\r\n      let menu = route.url[0].path;\r\n      console.log('authService', menu);\r\n      if (menu == 'user' || 'admin') {\r\n        if (service.getUserRole() == 'admin') {\r\n          return true;\r\n        } else {\r\n          toastr.warning('Acceso restringido, no es administrador');\r\n          router.navigate(['']);\r\n          return false;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  } else {\r\n    router.navigate(['login']);\r\n    return false;\r\n  }\r\n};\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-login-modal',\r\n  templateUrl: './login-modal.component.html',\r\n  styleUrls: ['./login-modal.component.css'],\r\n})\r\nexport class LoginModalComponent {\r\n  constructor(public dialogRef: MatDialogRef<LoginModalComponent>) {}\r\n\r\n  cerrar(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"flex flex-col card\">\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"80\"\r\n    height=\"80\"\r\n    viewBox=\"0 0 80 80\"\r\n    fill=\"none\"\r\n    class=\"icono\"\r\n  >\r\n    <g clip-path=\"url(#clip0_139_508)\">\r\n      <path\r\n        d=\"M40 0C32.0888 0 24.3552 2.34596 17.7772 6.74122C11.1992 11.1365 6.07234 17.3836 3.04484 24.6927C0.0173314 32.0017 -0.774802 40.0444 0.768607 47.8036C2.31202 55.5629 6.12165 62.6902 11.7157 68.2843C17.3098 73.8784 24.4372 77.688 32.1964 79.2314C39.9556 80.7748 47.9983 79.9827 55.3074 76.9552C62.6164 73.9277 68.8635 68.8008 73.2588 62.2228C77.6541 55.6448 80 47.9113 80 40C79.9885 29.3949 75.7706 19.2274 68.2716 11.7284C60.7727 4.22943 50.6052 0.0114703 40 0ZM40 73.3333C33.4073 73.3333 26.9626 71.3784 21.481 67.7157C15.9994 64.0529 11.727 58.847 9.20403 52.7561C6.68111 46.6652 6.021 39.963 7.30718 33.497C8.59335 27.031 11.768 21.0915 16.4298 16.4298C21.0915 11.768 27.031 8.59333 33.497 7.30716C39.963 6.02098 46.6653 6.6811 52.7561 9.20402C58.847 11.7269 64.053 15.9994 67.7157 21.481C71.3784 26.9626 73.3334 33.4073 73.3334 40C73.3236 48.8376 69.8086 57.3104 63.5595 63.5595C57.3104 69.8086 48.8376 73.3236 40 73.3333Z\"\r\n        fill=\"#C82D3B\"\r\n      />\r\n      <path\r\n        d=\"M40 16.6667C39.1159 16.6667 38.2681 17.0179 37.6429 17.643C37.0178 18.2681 36.6666 19.116 36.6666 20V46.6667C36.6666 47.5507 37.0178 48.3986 37.6429 49.0237C38.2681 49.6488 39.1159 50 40 50C40.884 50 41.7319 49.6488 42.357 49.0237C42.9821 48.3986 43.3333 47.5507 43.3333 46.6667V20C43.3333 19.116 42.9821 18.2681 42.357 17.643C41.7319 17.0179 40.884 16.6667 40 16.6667Z\"\r\n        fill=\"#C82D3B\"\r\n      />\r\n      <path\r\n        d=\"M43.3333 60C43.3333 58.159 41.8409 56.6666 40 56.6666C38.159 56.6666 36.6666 58.159 36.6666 60C36.6666 61.8409 38.159 63.3333 40 63.3333C41.8409 63.3333 43.3333 61.8409 43.3333 60Z\"\r\n        fill=\"#C82D3B\"\r\n      />\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_139_508\">\r\n        <rect width=\"80\" height=\"80\" fill=\"white\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n  <h1 mat-dialog-title class=\"titulo\">Credenciales inválidas</h1>\r\n  <div mat-dialog-content>\r\n    <p>Usuario o contraseña incorrecta</p>\r\n  </div>\r\n  <button mat-button class=\"boton\" (click)=\"cerrar()\">\r\n    Intentar nuevamente\r\n  </button>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  Subscription,\r\n  catchError,\r\n  delay,\r\n  Observable,\r\n  BehaviorSubject,\r\n  Subject,\r\n  of,\r\n} from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogOverviewExampleDialog } from '../dialog.component';\r\nimport { LoginModalComponent } from '../login-modal/login-modal.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private jwtHelper: JwtHelperService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  apiUrl = environment.API_URL_USERS;\r\n  apiRole = environment.API_URL_ROLES;\r\n  authToken: any;\r\n  user: any;\r\n  tokenSubscription = new Subscription();\r\n  tokenSubscription2 = new Subscription();\r\n  timeout?: any;\r\n\r\n  private messageSource = new BehaviorSubject('default message');\r\n  //observables que recogen la respuesta de la llamada a la api\r\n  private provinciasSource = new BehaviorSubject('');\r\n  private departamentosSource = new BehaviorSubject('');\r\n  private localidadesSource = new BehaviorSubject('');\r\n  private empresasSource = new BehaviorSubject('');\r\n  private plantasSource = new BehaviorSubject('');\r\n  private lineaSource = new BehaviorSubject('');\r\n  private maquinaSource = new BehaviorSubject('');\r\n  private fullnameSource = new BehaviorSubject('');\r\n\r\n  //observables que recogen la opcion seleccionada\r\n  paisSelectedSource = new BehaviorSubject('');\r\n  provinciaSelectedSource = new BehaviorSubject('');\r\n  departamentoSelectedSource = new BehaviorSubject('');\r\n  localidadSelectedSource = new BehaviorSubject('');\r\n  empresaSelectedSource = new BehaviorSubject('');\r\n  plantaSelectedSource = new BehaviorSubject('');\r\n  lineaSelectedSource = new BehaviorSubject('');\r\n  tipoMaquinaSelectedSource = new BehaviorSubject('');\r\n  maquinaSelectedSource = new BehaviorSubject('');\r\n  procesoSelectedSource = new BehaviorSubject('');\r\n  triggerSelectedSource = new BehaviorSubject('');\r\n\r\n  currentMessage = this.messageSource.asObservable();\r\n\r\n  // guardamos la respuesta en listas que son accesibles desde los componentes\r\n  listProvincias = this.provinciasSource.asObservable();\r\n  listDepartamentos = this.departamentosSource.asObservable();\r\n  listLocalidades = this.localidadesSource.asObservable();\r\n  listEmpresas = this.empresasSource.asObservable();\r\n  listPlantas = this.plantasSource.asObservable();\r\n  listLineas = this.lineaSource.asObservable();\r\n  listMaquinas = this.maquinaSource.asObservable();\r\n\r\n  // guardamos la opcion seleccionada para que sea accesible a los componentes\r\n  paisSelected = this.paisSelectedSource.asObservable();\r\n  provinciaSelected = this.provinciaSelectedSource.asObservable();\r\n  departamentoSelected = this.departamentoSelectedSource.asObservable();\r\n  localidadSelected = this.localidadSelectedSource.asObservable();\r\n  empresaSelected = this.empresaSelectedSource.asObservable();\r\n  plantaSelected = this.plantaSelectedSource.asObservable();\r\n  lineaSelected = this.lineaSelectedSource.asObservable();\r\n  tipoMaquinaSelected = this.tipoMaquinaSelectedSource.asObservable();\r\n  maquinaSelected = this.maquinaSelectedSource.asObservable();\r\n  procesoSelected = this.procesoSelectedSource.asObservable();\r\n  triggerSelected = this.triggerSelectedSource.asObservable();\r\n  fullname = this.fullnameSource.asObservable();\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '50%',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  openDialog2(): void {\r\n    const dialogRef = this.dialog.open(LoginModalComponent, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '571px',\r\n      height: '292px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  // get\r\n\r\n  GetAll() {\r\n    return this.http.get(this.apiUrl);\r\n  }\r\n\r\n  //\r\n\r\n  GetAllRoles() {\r\n    return this.http.get(this.apiRole);\r\n  }\r\n\r\n  GetById(id: any) {\r\n    return this.http.get(this.apiUrl + '/' + id);\r\n  }\r\n\r\n  LogIn(body: any) {\r\n    return this.http.post(this.apiUrl + 'login', body).pipe(\r\n      catchError(async (error) => {\r\n        console.log(error.message);\r\n        return error;\r\n      })\r\n    );\r\n  }\r\n  storeUserData(token: any, user: any, rtoken: any) {\r\n    console.log('storeUserData, user: ', user, 'token: ', token);\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(token)!.valueOf() -\r\n      new Date().valueOf();\r\n    sessionStorage.setItem('token', token);\r\n    sessionStorage.setItem('rtoken', rtoken);\r\n    sessionStorage.setItem('username', user.username);\r\n    sessionStorage.setItem('fullname', user.name);\r\n    sessionStorage.setItem('userrole', user.role.name);\r\n    this.authToken = token;\r\n    this.user = user;\r\n    // this.expirationCounter(this.timeout);\r\n    if (sessionStorage.getItem('userrole') == 'admin') {\r\n      this.router.navigate(['admin']);\r\n    } else {\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n\r\n  expirationCounter(timeout: any) {\r\n    console.log('timeout: ', timeout);\r\n    this.tokenSubscription.unsubscribe();\r\n    this.tokenSubscription = of(null)\r\n      .pipe(delay(timeout))\r\n      .subscribe((expired) => {\r\n        console.log('EXPIRED!!');\r\n        this.dialog.closeAll();\r\n        this.logout();\r\n        this.toastr.error('sesion expirada', 'vuelva a iniciar sesion');\r\n      });\r\n    this.pre_expirationCounter(timeout);\r\n  }\r\n\r\n  pre_expirationCounter(timeout: any) {\r\n    let timeNow = new Date();\r\n    console.log('time now: ', timeNow);\r\n    this.tokenSubscription2.unsubscribe();\r\n    this.tokenSubscription2 = of(null)\r\n      .pipe(delay(timeout - 120000))\r\n      .subscribe(() => {\r\n        this.openDialog();\r\n        console.log('about to expire !!');\r\n      });\r\n  }\r\n  logout() {\r\n    this.tokenSubscription.unsubscribe();\r\n    this.authToken = null;\r\n    this.user = null;\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/login']);\r\n    sessionStorage.setItem('token', '');\r\n    console.log(sessionStorage.getItem('token')?.toString());\r\n  }\r\n\r\n  IsLoggedIn() {\r\n    return sessionStorage.getItem('username') != null;\r\n  }\r\n  getUserRole() {\r\n    return sessionStorage.getItem('userrole') != null\r\n      ? sessionStorage.getItem('userrole')?.toString()\r\n      : '';\r\n  }\r\n\r\n  getUser() {\r\n    try {\r\n      var fullname = sessionStorage.getItem('fullname')!.toString();\r\n      this.fullnameSource.next(fullname);\r\n    } catch (error) {\r\n      console.log('getUser error: ', error);\r\n    }\r\n  }\r\n\r\n  // post\r\n  Proceedregister(inputdata: any) {\r\n    return this.http\r\n      .post(this.apiUrl, inputdata, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  UpdateUser(id: any, inputdata: any) {\r\n    return this.http.post(this.apiUrl + '/' + id, inputdata);\r\n  }\r\n\r\n  // get formularios\r\n  getForm(url: string) {\r\n    return this.http\r\n      .get(url, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          if (error.status == 403) {\r\n            this.router.navigate(['/login']);\r\n          }\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  postForm(url: string, formData: any) {\r\n    return this.http\r\n      .post(url, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  deleteForm(url: string, id: string) {\r\n    return this.http\r\n      .delete(url + 'delete/' + id, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  changeMessage(message: string) {\r\n    console.log('change message: ', message);\r\n    this.messageSource.next(message);\r\n  }\r\n  streamProvincias_PaisSelected(provincias: string) {\r\n    console.log('change message: ', provincias);\r\n    this.provinciasSource.next(provincias);\r\n  }\r\n\r\n  streamDepartamentos_ProvinciaSelected(departamentos: string) {\r\n    console.log('change message: ', departamentos);\r\n    this.departamentosSource.next(departamentos);\r\n  }\r\n  streamLocalidades_DepartamentoSelected(localidades: string) {\r\n    console.log('change message: ', localidades);\r\n    this.localidadesSource.next(localidades);\r\n  }\r\n\r\n  streamEmpresas_LocalidadSelected(empresas: string) {\r\n    console.log('change message: ', empresas);\r\n    this.empresasSource.next(empresas);\r\n  }\r\n  streamPlantas_EmpresaSelected(plantas: string) {\r\n    console.log('change message: ', plantas);\r\n    this.plantasSource.next(plantas);\r\n  }\r\n\r\n  streamLinea_PlantaSelected(linea: string) {\r\n    console.log('change message: ', linea);\r\n    this.lineaSource.next(linea);\r\n  }\r\n  streamMaquinas_LineaSelected(Maquinas: string) {\r\n    console.log('change message: ', Maquinas);\r\n    this.maquinaSource.next(Maquinas);\r\n  }\r\n  streamTipoSelected(TipoMaquina: string) {\r\n    console.log('tipo maquina selected: ', TipoMaquina);\r\n    this.tipoMaquinaSelectedSource.next(TipoMaquina);\r\n  }\r\n  streamMaquinaSelected(Maquina: string) {\r\n    console.log('maquina selected: ', Maquina);\r\n    this.maquinaSelectedSource.next(Maquina);\r\n  }\r\n  streamProcesoSelected(proceso: string) {\r\n    console.log('Proceso selected: ', proceso);\r\n    this.procesoSelectedSource.next(proceso);\r\n  }\r\n  streamTriggerSelected(trigger: string) {\r\n    console.log('Trigger selected: ', trigger);\r\n    this.triggerSelectedSource.next(trigger);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport 'date-fns/locale';\r\nChart.register(...registerables);\r\nChart.defaults.font.family = 'DIN-PRO';\r\nChart.defaults.font.size = 14;\r\nChart.defaults.font.weight = '400';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ChartGeneratorService {\r\n  chartList: any = [];\r\n  constructor() {}\r\n\r\n  generate(idList: any[], decimation: any, canvasBackgroundColor?: any) {\r\n    this.chartList = [];\r\n    for (let i = 0; i < idList.length; i++) {\r\n      var generatedChart = {\r\n        chart: new Chart(idList[i].titulo, {\r\n          type: 'line',\r\n          data: {\r\n            labels: [],\r\n            datasets: [\r\n              {\r\n                data: [],\r\n                borderColor: '#062984',\r\n                backgroundColor: 'rgba(6, 41, 132, 0.35)',\r\n                label: idList[i].titulo + ' minimo',\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            // hay que arreglar esto para que funcione la data decimation\r\n            // Turn off animations and data parsing for performance\r\n            aspectRatio: 1,\r\n            maintainAspectRatio: false,\r\n            animation: false,\r\n            parsing: false,\r\n            plugins: {\r\n              decimation: decimation,\r\n            },\r\n            scales: {\r\n              y: {\r\n                type: 'linear',\r\n                beginAtZero: true,\r\n                ticks: {},\r\n                grid: {\r\n                  display: false,\r\n                },\r\n              },\r\n              x: {\r\n                type: 'time',\r\n\r\n                ticks: {\r\n                  source: 'auto',\r\n                  // Disabled rotation for performance\r\n                  maxRotation: 0,\r\n                  autoSkip: true,\r\n                },\r\n                grid: {\r\n                  display: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n          plugins: [canvasBackgroundColor],\r\n        }),\r\n        titulo: idList[i].titulo,\r\n        id: idList[i].id,\r\n      };\r\n      this.chartList.push(generatedChart);\r\n    }\r\n    console.log('generated charts: ', this.chartList);\r\n  }\r\n\r\n  getCharts() {\r\n    return this.chartList;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject, catchError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RegistroFiltrado } from '../models/datos.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpService {\r\n  registroGeneral = environment.API_URL_RGENERAL;\r\n  registroGeneralts = environment.API_URL_RGENERALTS;\r\n  variables = environment.API_URL_VARIABLES;\r\n  // chartUrl = environment.API_URL_CHARTS;\r\n  private listaVariablesSource = new Subject();\r\n  private listaRegistroFiltradoSource = new BehaviorSubject(\r\n    <RegistroFiltrado[]>[]\r\n  );\r\n  private listaRegistroFiltrado2Source = new Subject();\r\n  private listaDatosSource3 = new BehaviorSubject(<[]>[]);\r\n  private listaDatosInRangeSource = new BehaviorSubject(<[]>[]);\r\n  private listChartInfoSource = new Subject();\r\n  private listCharDatatInfoSource = new Subject();\r\n  private rangeSource = new Subject();\r\n\r\n  listaVariables = this.listaVariablesSource.asObservable();\r\n  listaRegistroFiltrado = this.listaRegistroFiltradoSource.asObservable();\r\n  listaRegistroFiltrado2 = this.listaRegistroFiltrado2Source.asObservable();\r\n  listaDatos3 = this.listaDatosSource3.asObservable();\r\n  listaDatosInRange = this.listaDatosInRangeSource.asObservable();\r\n  listChartInfo = this.listChartInfoSource.asObservable();\r\n  listChartDataInfo = this.listCharDatatInfoSource.asObservable();\r\n  rangeInfo = this.rangeSource.asObservable();\r\n  inicio_str: string = '';\r\n  final_str: string = '';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getValores(variable: string): Observable<any> {\r\n    return this.http.get(this.registroGeneralts + 'all/' + variable, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  // getCharts(): Observable<any> {\r\n  //   return this.http.get(this.chartUrl, {\r\n  //     headers: {\r\n  //       Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n  //     },\r\n  //   });\r\n  // }\r\n  getValoresFiltrados(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String,\r\n    operacion: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneral + `filter/${variable}/${inicio}/${fin}/${operacion}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getValoresFiltrados2(\r\n    inicio: String,\r\n    fin: String,\r\n    granularidad: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneralts + `granularidad/${inicio}/${fin}/${granularidad}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getAllInRange(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneralts + `all/${variable}/${inicio}/${fin}/`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getVariables(): Observable<any> {\r\n    return this.http.get(this.variables, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  httpGet(url: string) {\r\n    return this.http.get(url);\r\n  }\r\n  httpPost(url: string, body: any) {\r\n    return this.http\r\n      .post(url, body, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  stream_Variables(variables: any) {\r\n    this.listaVariablesSource.next(variables);\r\n  }\r\n  stream_RegistroFiltrado(datos: RegistroFiltrado[]) {\r\n    console.log('stream registro filtrado: ', datos);\r\n    this.listaRegistroFiltradoSource.next(datos);\r\n  }\r\n  stream_RegistroFiltrado2(datoGeneral: any) {\r\n    this.listaRegistroFiltrado2Source.next(datoGeneral);\r\n  }\r\n  stream_Datos3(datoGeneral: any) {\r\n    this.listaDatosSource3.next(datoGeneral);\r\n  }\r\n  stream_DatosInRange(datoGeneral: any) {\r\n    this.listaDatosInRangeSource.next(datoGeneral);\r\n  }\r\n  stream_Chart_Info(chartInfo: any) {\r\n    this.listChartInfoSource.next(chartInfo);\r\n  }\r\n  stream_ChartData_Info(chartDataInfo: any) {\r\n    this.listCharDatatInfoSource.next(chartDataInfo);\r\n  }\r\n  set_Inicio_Final(inicio: string, final: string) {\r\n    this.rangeSource.next([inicio, final]);\r\n  }\r\n  get_Inicio_Final() {\r\n    return [this.inicio_str, this.final_str];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SpinnerService {\n  constructor(private _spinnerService: NgxSpinnerService) {}\n\n  public llamarSpinner(spinner: string) {\n    this._spinnerService.show(spinner);\n  }\n  public detenerSpinner(spinner: string) {\n    this._spinnerService.hide(spinner);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport colorLib from '@kurkle/color';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UtilsService {\r\n  constructor() {}\r\n  private CHART_COLORS = {\r\n    strong_blue: '#062984',\r\n    medium_blue: '#1758FF',\r\n    light_blue: '#6F97FF',\r\n    red: 'rgb(255, 99, 132)',\r\n    orange: 'rgb(255, 159, 64)',\r\n    yellow: 'rgb(255, 205, 86)',\r\n    green: 'rgb(75, 192, 192)',\r\n    blue: 'rgb(54, 162, 235)',\r\n    purple: 'rgb(153, 102, 255)',\r\n    grey: 'rgb(201, 203, 207)',\r\n  };\r\n\r\n  NAMED_COLORS = [\r\n    this.CHART_COLORS.strong_blue,\r\n    this.CHART_COLORS.medium_blue,\r\n    this.CHART_COLORS.light_blue,\r\n    this.CHART_COLORS.red,\r\n    this.CHART_COLORS.orange,\r\n    this.CHART_COLORS.yellow,\r\n    this.CHART_COLORS.green,\r\n    this.CHART_COLORS.blue,\r\n    this.CHART_COLORS.purple,\r\n    this.CHART_COLORS.grey,\r\n  ];\r\n\r\n  namedColor(index: number) {\r\n    return this.NAMED_COLORS[index % this.NAMED_COLORS.length];\r\n  }\r\n  transparentize(value: string, opacity: number) {\r\n    var alpha = opacity === undefined ? 0.5 : 1 - opacity;\r\n    return colorLib(value).alpha(alpha).rgbString();\r\n  }\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\r\n\r\nexport function checkUpperCase(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasUpperCase = /[A-Z]+/.test(value);\r\n\r\n    const passwordValid = hasUpperCase;\r\n\r\n    return !passwordValid ? { hasUpper: true } : null;\r\n  };\r\n}\r\nexport function checkLowerCase(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasLowerCase = /[a-z]+/.test(value);\r\n\r\n    const passwordValid = hasLowerCase;\r\n\r\n    return !passwordValid ? { hasLower: true } : null;\r\n  };\r\n}\r\nexport function checkNumber(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasNumeric = /[0-9]+/.test(value);\r\n\r\n    const passwordValid = hasNumeric;\r\n\r\n    return !passwordValid ? { hasNumber: true } : null;\r\n  };\r\n}\r\nexport function checkSpecial(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasSpecial = /[$@$!%*?&]+/.test(value);\r\n\r\n    const passwordValid = hasSpecial;\r\n\r\n    return !passwordValid ? { hasSp: true } : null;\r\n  };\r\n}\r\n","export const environment = {\r\n  production: false,\r\n  //old variables:\r\n  // API_URL_PAISES_OLD: 'http://automatismopalmar.ddns.net:3001/api/paises/',\r\n  // API_URL_PROVINCIAS_OLD: 'http://automatismopalmar.ddns.net:3001/api/provincias/',\r\n  // API_URL_LOCALIDADES_OLD: 'http://automatismopalmar.ddns.net:3001/api/localidad/',\r\n\r\n  API_URL_USERS: 'http://automatismopalmar.ddns.net:3001/api/users/',\r\n  API_URL_ROLES: 'http://automatismopalmar.ddns.net:3001/api/role/',\r\n  API_URL_RGENERAL:\r\n    'http://automatismopalmar.ddns.net:3001/api/registro-general/',\r\n  API_URL_RGENERALTS:\r\n    'http://automatismopalmar.ddns.net:3001/api/registro-general-ts/',\r\n  API_URL_VARIABLES: 'http://automatismopalmar.ddns.net:3001/api/variables/',\r\n  API_URL_PAISES: 'https://countriesnow.space/api/v0.1/countries/',\r\n  API_URL_PROVINCIAS: 'https://countriesnow.space/api/v0.1/countries/states',\r\n  API_URL_LOCALIDADES:\r\n    'https://countriesnow.space/api/v0.1/countries/state/cities',\r\n  API_URL_EMPRESAS: 'http://automatismopalmar.ddns.net:3001/api/empresas/',\r\n  API_URL_PLANTA: 'http://automatismopalmar.ddns.net:3001/api/empresa-planta/',\r\n  API_URL_TIPO_MAQUINA:\r\n    'http://automatismopalmar.ddns.net:3001/api/tipo-maquina/',\r\n  API_URL_MAQUINA: 'http://automatismopalmar.ddns.net:3001/api/maquinas/',\r\n  API_URL_LINEA_PRODUCCION:\r\n    'http://automatismopalmar.ddns.net:3001/api/linea-produccion/',\r\n  API_URL_PROCESO: 'http://automatismopalmar.ddns.net:3001/api/proceso/',\r\n  API_URL_TRIGGER: 'http:///automatismopalmar.ddns.net:3001/api/trigger/',\r\n  API_URL_RTOKEN: 'http:///automatismopalmar.ddns.net:3001/api/refresh',\r\n  API_URL_ARGENTINA_PROVINCIAS:\r\n    'https://apis.datos.gob.ar/georef/api/provincias?orden=nombre&campos=basico&max=30',\r\n  API_URL_ARGENTINA_DEPARTAMENTOS:\r\n    'https://apis.datos.gob.ar/georef/api/departamentos?provincia=',\r\n  API_URL_ARGENTINA_LOCALIDADES:\r\n    'https://apis.datos.gob.ar/georef/api/localidades?provincia=',\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatStepperModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n    MatProgressSpinnerModule,\r\n    MatMenuModule,\r\n    MatProgressBarModule,\r\n    MatTabsModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","var map = {\n\t\"./af\": 5528,\n\t\"./af.js\": 5528,\n\t\"./ar\": 1036,\n\t\"./ar-dz\": 7579,\n\t\"./ar-dz.js\": 7579,\n\t\"./ar-kw\": 9588,\n\t\"./ar-kw.js\": 9588,\n\t\"./ar-ly\": 6519,\n\t\"./ar-ly.js\": 6519,\n\t\"./ar-ma\": 3258,\n\t\"./ar-ma.js\": 3258,\n\t\"./ar-ps\": 5467,\n\t\"./ar-ps.js\": 5467,\n\t\"./ar-sa\": 4085,\n\t\"./ar-sa.js\": 4085,\n\t\"./ar-tn\": 287,\n\t\"./ar-tn.js\": 287,\n\t\"./ar.js\": 1036,\n\t\"./az\": 9757,\n\t\"./az.js\": 9757,\n\t\"./be\": 9620,\n\t\"./be.js\": 9620,\n\t\"./bg\": 1139,\n\t\"./bg.js\": 1139,\n\t\"./bm\": 4042,\n\t\"./bm.js\": 4042,\n\t\"./bn\": 9641,\n\t\"./bn-bd\": 9126,\n\t\"./bn-bd.js\": 9126,\n\t\"./bn.js\": 9641,\n\t\"./bo\": 494,\n\t\"./bo.js\": 494,\n\t\"./br\": 934,\n\t\"./br.js\": 934,\n\t\"./bs\": 6274,\n\t\"./bs.js\": 6274,\n\t\"./ca\": 5831,\n\t\"./ca.js\": 5831,\n\t\"./cs\": 2354,\n\t\"./cs.js\": 2354,\n\t\"./cv\": 1258,\n\t\"./cv.js\": 1258,\n\t\"./cy\": 8774,\n\t\"./cy.js\": 8774,\n\t\"./da\": 584,\n\t\"./da.js\": 584,\n\t\"./de\": 1557,\n\t\"./de-at\": 4954,\n\t\"./de-at.js\": 4954,\n\t\"./de-ch\": 1881,\n\t\"./de-ch.js\": 1881,\n\t\"./de.js\": 1557,\n\t\"./dv\": 6475,\n\t\"./dv.js\": 6475,\n\t\"./el\": 8877,\n\t\"./el.js\": 8877,\n\t\"./en-au\": 454,\n\t\"./en-au.js\": 454,\n\t\"./en-ca\": 7356,\n\t\"./en-ca.js\": 7356,\n\t\"./en-gb\": 456,\n\t\"./en-gb.js\": 456,\n\t\"./en-ie\": 8789,\n\t\"./en-ie.js\": 8789,\n\t\"./en-il\": 5471,\n\t\"./en-il.js\": 5471,\n\t\"./en-in\": 9664,\n\t\"./en-in.js\": 9664,\n\t\"./en-nz\": 7672,\n\t\"./en-nz.js\": 7672,\n\t\"./en-sg\": 805,\n\t\"./en-sg.js\": 805,\n\t\"./eo\": 7390,\n\t\"./eo.js\": 7390,\n\t\"./es\": 1564,\n\t\"./es-do\": 1473,\n\t\"./es-do.js\": 1473,\n\t\"./es-mx\": 2089,\n\t\"./es-mx.js\": 2089,\n\t\"./es-us\": 4156,\n\t\"./es-us.js\": 4156,\n\t\"./es.js\": 1564,\n\t\"./et\": 6513,\n\t\"./et.js\": 6513,\n\t\"./eu\": 7856,\n\t\"./eu.js\": 7856,\n\t\"./fa\": 2378,\n\t\"./fa.js\": 2378,\n\t\"./fi\": 1538,\n\t\"./fi.js\": 1538,\n\t\"./fil\": 32,\n\t\"./fil.js\": 32,\n\t\"./fo\": 6845,\n\t\"./fo.js\": 6845,\n\t\"./fr\": 8875,\n\t\"./fr-ca\": 6425,\n\t\"./fr-ca.js\": 6425,\n\t\"./fr-ch\": 1746,\n\t\"./fr-ch.js\": 1746,\n\t\"./fr.js\": 8875,\n\t\"./fy\": 7037,\n\t\"./fy.js\": 7037,\n\t\"./ga\": 1217,\n\t\"./ga.js\": 1217,\n\t\"./gd\": 7010,\n\t\"./gd.js\": 7010,\n\t\"./gl\": 1931,\n\t\"./gl.js\": 1931,\n\t\"./gom-deva\": 4488,\n\t\"./gom-deva.js\": 4488,\n\t\"./gom-latn\": 8032,\n\t\"./gom-latn.js\": 8032,\n\t\"./gu\": 4984,\n\t\"./gu.js\": 4984,\n\t\"./he\": 9090,\n\t\"./he.js\": 9090,\n\t\"./hi\": 2085,\n\t\"./hi.js\": 2085,\n\t\"./hr\": 8787,\n\t\"./hr.js\": 8787,\n\t\"./hu\": 2901,\n\t\"./hu.js\": 2901,\n\t\"./hy-am\": 9819,\n\t\"./hy-am.js\": 9819,\n\t\"./id\": 4074,\n\t\"./id.js\": 4074,\n\t\"./is\": 715,\n\t\"./is.js\": 715,\n\t\"./it\": 3838,\n\t\"./it-ch\": 7040,\n\t\"./it-ch.js\": 7040,\n\t\"./it.js\": 3838,\n\t\"./ja\": 3180,\n\t\"./ja.js\": 3180,\n\t\"./jv\": 4346,\n\t\"./jv.js\": 4346,\n\t\"./ka\": 5538,\n\t\"./ka.js\": 5538,\n\t\"./kk\": 9772,\n\t\"./kk.js\": 9772,\n\t\"./km\": 7905,\n\t\"./km.js\": 7905,\n\t\"./kn\": 9125,\n\t\"./kn.js\": 9125,\n\t\"./ko\": 9140,\n\t\"./ko.js\": 9140,\n\t\"./ku\": 6780,\n\t\"./ku-kmr\": 4662,\n\t\"./ku-kmr.js\": 4662,\n\t\"./ku.js\": 6780,\n\t\"./ky\": 3768,\n\t\"./ky.js\": 3768,\n\t\"./lb\": 4016,\n\t\"./lb.js\": 4016,\n\t\"./lo\": 3169,\n\t\"./lo.js\": 3169,\n\t\"./lt\": 2353,\n\t\"./lt.js\": 2353,\n\t\"./lv\": 3243,\n\t\"./lv.js\": 3243,\n\t\"./me\": 2338,\n\t\"./me.js\": 2338,\n\t\"./mi\": 5555,\n\t\"./mi.js\": 5555,\n\t\"./mk\": 5794,\n\t\"./mk.js\": 5794,\n\t\"./ml\": 3151,\n\t\"./ml.js\": 3151,\n\t\"./mn\": 6458,\n\t\"./mn.js\": 6458,\n\t\"./mr\": 9165,\n\t\"./mr.js\": 9165,\n\t\"./ms\": 8680,\n\t\"./ms-my\": 7477,\n\t\"./ms-my.js\": 7477,\n\t\"./ms.js\": 8680,\n\t\"./mt\": 9684,\n\t\"./mt.js\": 9684,\n\t\"./my\": 285,\n\t\"./my.js\": 285,\n\t\"./nb\": 5922,\n\t\"./nb.js\": 5922,\n\t\"./ne\": 9040,\n\t\"./ne.js\": 9040,\n\t\"./nl\": 5066,\n\t\"./nl-be\": 4460,\n\t\"./nl-be.js\": 4460,\n\t\"./nl.js\": 5066,\n\t\"./nn\": 3693,\n\t\"./nn.js\": 3693,\n\t\"./oc-lnc\": 8676,\n\t\"./oc-lnc.js\": 8676,\n\t\"./pa-in\": 2341,\n\t\"./pa-in.js\": 2341,\n\t\"./pl\": 7416,\n\t\"./pl.js\": 7416,\n\t\"./pt\": 4344,\n\t\"./pt-br\": 113,\n\t\"./pt-br.js\": 113,\n\t\"./pt.js\": 4344,\n\t\"./ro\": 2643,\n\t\"./ro.js\": 2643,\n\t\"./ru\": 1305,\n\t\"./ru.js\": 1305,\n\t\"./sd\": 6095,\n\t\"./sd.js\": 6095,\n\t\"./se\": 4486,\n\t\"./se.js\": 4486,\n\t\"./si\": 8742,\n\t\"./si.js\": 8742,\n\t\"./sk\": 6722,\n\t\"./sk.js\": 6722,\n\t\"./sl\": 3345,\n\t\"./sl.js\": 3345,\n\t\"./sq\": 2416,\n\t\"./sq.js\": 2416,\n\t\"./sr\": 9450,\n\t\"./sr-cyrl\": 501,\n\t\"./sr-cyrl.js\": 501,\n\t\"./sr.js\": 9450,\n\t\"./ss\": 2222,\n\t\"./ss.js\": 2222,\n\t\"./sv\": 9454,\n\t\"./sv.js\": 9454,\n\t\"./sw\": 9638,\n\t\"./sw.js\": 9638,\n\t\"./ta\": 6494,\n\t\"./ta.js\": 6494,\n\t\"./te\": 4435,\n\t\"./te.js\": 4435,\n\t\"./tet\": 5003,\n\t\"./tet.js\": 5003,\n\t\"./tg\": 3706,\n\t\"./tg.js\": 3706,\n\t\"./th\": 6025,\n\t\"./th.js\": 6025,\n\t\"./tk\": 9780,\n\t\"./tk.js\": 9780,\n\t\"./tl-ph\": 2068,\n\t\"./tl-ph.js\": 2068,\n\t\"./tlh\": 9167,\n\t\"./tlh.js\": 9167,\n\t\"./tr\": 2494,\n\t\"./tr.js\": 2494,\n\t\"./tzl\": 8707,\n\t\"./tzl.js\": 8707,\n\t\"./tzm\": 1296,\n\t\"./tzm-latn\": 4532,\n\t\"./tzm-latn.js\": 4532,\n\t\"./tzm.js\": 1296,\n\t\"./ug-cn\": 2086,\n\t\"./ug-cn.js\": 2086,\n\t\"./uk\": 5069,\n\t\"./uk.js\": 5069,\n\t\"./ur\": 9304,\n\t\"./ur.js\": 9304,\n\t\"./uz\": 5115,\n\t\"./uz-latn\": 7609,\n\t\"./uz-latn.js\": 7609,\n\t\"./uz.js\": 5115,\n\t\"./vi\": 4802,\n\t\"./vi.js\": 4802,\n\t\"./x-pseudo\": 5605,\n\t\"./x-pseudo.js\": 5605,\n\t\"./yo\": 8456,\n\t\"./yo.js\": 8456,\n\t\"./zh-cn\": 3272,\n\t\"./zh-cn.js\": 3272,\n\t\"./zh-hk\": 9402,\n\t\"./zh-hk.js\": 9402,\n\t\"./zh-mo\": 8101,\n\t\"./zh-mo.js\": 8101,\n\t\"./zh-tw\": 262,\n\t\"./zh-tw.js\": 262\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;"],"names":["RouterModule","ListarDatosComponent","RegisterComponent","LoginComponent","UserlistingComponent","authGuard","Home5Component","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","FormControl","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r3","fullName","ɵɵelement","ɵɵtemplate","AppComponent_mat_toolbar_0_a_6_Template","AppComponent_mat_toolbar_0_a_8_Template","AppComponent_mat_toolbar_0_p_12_Template","ɵɵnamespaceSVG","ɵɵlistener","AppComponent_mat_toolbar_0_Template__svg_svg_click_13_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","logOut","ɵɵproperty","ctx_r0","isAdminUser","ɵɵattribute","iniciales","mobile","AppComponent","constructor","builder","router","service","_httpService","spinnerService","matIconRegistry","domSanitizer","opened","title","isMenuRequired","listVariables","listDatos","exceedList","notExceedList2","addSvgIcon","bypassSecurityTrustResourceUrl","ngOnInit","valor","group","threshold","range","start","end","granularidad","subscription3","fullname","subscribe","message","setTimeout","console","log","splitFullName","subscription","listaVariables","subscription2","listaDatosInRange","window","screen","width","ngDoCheck","currentUrl","url","getUserRole","logout","getFiltrados","inicio","value","getTime","toString","final","llamarSpinner","getValoresFiltrados","_id","data","stream_RegistroFiltrado","length","detenerSpinner","getValoresFiltrados2","stream_RegistroFiltrado2","getInRangeTabla","notExceedList","getAllInRange","filter","x","valor_lectura","n","stream_DatosInRange","myBlock","i","map","e","index","time","formatTime","Date","time_stamp","cTime_stamp","formatDate","j","push","notExceed","exceed","seconds","hours","Math","floor","minutes","remainingSeconds","formattedHours","String","padStart","formattedMinutes","formattedSeconds","padTo2Digits","num","date","getFullYear","getMonth","getDate","join","getHours","getMinutes","getSeconds","output","split","charAt","toUpperCase","ɵɵdirectiveInject","FormBuilder","i2","Router","i3","AuthService","i4","HttpService","i5","SpinnerService","i6","MatIconRegistry","i7","DomSanitizer","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_mat_toolbar_0_Template","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","BrowserAnimationsModule","MaterialModule","ToastrModule","UpdatepopupComponent","PaisFormComponent","ProvinciaFormComponent","LocalidadFormComponent","EmpresaFormComponent","EmpresaPlantaFormComponent","MaquinaFormComponent","TipoMaquinaFormComponent","LineaProduccionFormComponent","ProcesoFormComponent","VariableFormComponent","JwtModule","TriggerFormComponent","TablaComponent","NgxSpinnerModule","MatTooltipModule","LoginModalComponent","DateAdapter","MatNativeDateModule","MAT_DATE_FORMATS","MAT_DATE_LOCALE","MomentDateAdapter","DepartamentosComponent","tokenGetter","localStorage","getItem","MY_DATE_FORMAT","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","AppModule","bootstrap","provide","useClass","deps","useValue","config","allowedDomains","declarations","MatTabGroup","jwtHelper","breakpointObserver","isTrue","isPaisCompleted","isProvinciaCompleted","isLocalidadCompleted","isEmpresaCompleted","isPlantaCompleted","isTipoMaquinaCompleted","isLineaProduccionCompleted","isMaquinaCompleted","isProcesoCompleted","isTriggerCompleted","completed","tituloTabs","selected","expirationCheck","getUser","paisSelected","provinciaSelected","localidadSelected","empresaSelected","plantaSelected","lineaSelected","tipoMaquinaSelected","maquinaSelected","procesoSelected","triggerSelected","token","sessionStorage","timeout","getTokenExpirationDate","valueOf","expirationCounter","nextButton","setValue","backButton","JwtHelperService","BreakpointObserver","viewQuery","Home5Component_Query","Home5Component_Template_mat_tab_group_selectedIndexChange_13_listener","$event","Home5Component_Template_button_click_36_listener","Home5Component_Template_button_click_38_listener","ɵɵtextInterpolate1","Chart","registerables","MatMenuTrigger","chart_r4","titulo","ɵɵpropertyInterpolate","register","defaults","font","family","size","weight","utils","authService","chartService","todayDate","sensor_1","sensor_2","pulsador","id","open","chartList","chartList2","canvasBackgroundColor","beforeDatasetsDraw","chart","args","pluginOptions","chartArea","top","bottom","left","right","height","scales","y","bgColors","bracketLow","bracketHigh","color","fillStyle","fillRect","getPixelForValue","parseInt","_labelItems","label","decimation","enabled","algorithm","samples","getDataColors","opacity","colors","getVariables","type","labels","datasets","options","aspectRatio","maintainAspectRatio","animation","parsing","plugins","beginAtZero","ticks","grid","source","maxRotation","autoSkip","getRegistros","listaRegistroFiltrado2","sortedList","item","item2","find","info","sort","objA","objB","Number","dato","parseFloat","max","toFixed","fecha_lectura","update","min","ngOnDestroy","clearInterval","dsColor","namedColor","dataSet","nombre","borderColor","backgroundColor","transparentize","stream_Variables","generate","getCharts","_d","setInicio_final","set_Inicio_Final","UtilsService","ChartGeneratorService","ListarDatosComponent_Query","ListarDatosComponent_Template_div_click_10_listener","stopPropagation","ListarDatosComponent_Template_input_dateChange_26_listener","ListarDatosComponent_Template_button_click_30_listener","ListarDatosComponent_div_40_Template","_r0","_r1","_r2","Validators","checkNumber","checkSpecial","checkUpperCase","LoginComponent_div_3_Template_form_ngSubmit_5_listener","_r4","proceedLogin","LoginComponent_div_3_Template_a_click_11_listener","ctx_r5","showPass","LoginComponent_div_3_Template_a_click_17_listener","ctx_r6","mostrarRegistro","ctx_r1","loginForm","pass","show","username","password","LoginComponent_div_4_Template_form_ngSubmit_5_listener","_r8","ctx_r7","proceedRegistration","registerForm","reset","LoginComponent_div_4_Template_a_click_15_listener","ctx_r9","ɵɵnamespaceHTML","LoginComponent_div_4_Template_a_click_44_listener","ctx_r10","mostrarLogin","ctx_r2","errors","hasUpper","hasSp","hasNumber","name","email","toastr","showDiv","Login","Register","control","required","clear","minLength","role","isActive","LogIn","res","userData","status","success","toastClass","positionClass","storeUserData","rtoken","error","openDialog2","valid","Proceedregister","next","warning","get","ToastrService","LoginComponent_Template","LoginComponent_div_1_Template","LoginComponent_div_3_Template","LoginComponent_div_4_Template","registerform","compose","pattern","navigate","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_5_listener","MatPaginator","MatSort","MatTableDataSource","variable_r11","element_r12","element_r13","element_r14","element_r15","csv","displayedColumns","dataSource","paginator","rangeInfo","removeDuplicates","ids","filtered","includes","downloadCSV","csvList","tiempo_inicio","tiempo_fin","diferencia","row","keysAmount","Object","keys","keysCounter","key","link","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","id_variable","notDuplicatedExceedList","notDuplicatedNotExceedList","result","notExceedListPusher","enviarDatos","variableSelected","target","ExceedList","resultado","TablaComponent_Query","TablaComponent_Template_button_click_5_listener","TablaComponent_Template_select_change_17_listener","TablaComponent_option_18_Template","TablaComponent_Template_button_click_19_listener","ɵɵelementContainerStart","TablaComponent_mat_header_cell_23_Template","TablaComponent_mat_cell_24_Template","ɵɵelementContainerEnd","TablaComponent_mat_header_cell_26_Template","TablaComponent_mat_cell_27_Template","TablaComponent_mat_header_cell_29_Template","TablaComponent_mat_cell_30_Template","TablaComponent_mat_header_cell_32_Template","TablaComponent_mat_cell_33_Template","TablaComponent_mat_header_row_34_Template","TablaComponent_mat_row_35_Template","ɵɵpureFunction0","_c0","MAT_DIALOG_DATA","item_r1","dialog","GetAllRoles","rolelist","GetById","editData","updateUser","UpdateUser","close","MatDialogRef","UpdatepopupComponent_Template","UpdatepopupComponent_Template_form_ngSubmit_5_listener","UpdatepopupComponent_mat_option_13_Template","UserlistingComponent_mat_cell_23_Template_mat_select_valueChange_1_listener","restoredCtx","_r17","$implicit","ɵɵstyleMap","editable","UserlistingComponent_mat_cell_26_Template_mat_select_valueChange_1_listener","_r20","element_r18","ulist","LoadUser","GetAll","userList","editableToggle","guardarCambios","dataToUpdate","UserlistingComponent_Query","UserlistingComponent_Template_a_click_5_listener","UserlistingComponent_mat_header_cell_13_Template","UserlistingComponent_mat_cell_14_Template","UserlistingComponent_mat_header_cell_16_Template","UserlistingComponent_mat_cell_17_Template","UserlistingComponent_mat_header_cell_19_Template","UserlistingComponent_mat_cell_20_Template","UserlistingComponent_mat_header_cell_22_Template","UserlistingComponent_mat_cell_23_Template","UserlistingComponent_mat_header_cell_25_Template","UserlistingComponent_mat_cell_26_Template","UserlistingComponent_mat_header_row_27_Template","UserlistingComponent_mat_row_28_Template","UserlistingComponent_Template_a_click_30_listener","_data","_value","MatButtonModule","MatDialogModule","MatFormFieldModule","MatInputModule","environment","DialogOverviewExampleDialog","dialogRef","rtoken_url","API_URL_RTOKEN","rBody","user","onNoClick","refreshToken","postForm","resData","accessToken","setItem","standalone","features","ɵɵStandaloneFeature","DialogOverviewExampleDialog_Template","DialogOverviewExampleDialog_Template_button_click_6_listener","DialogOverviewExampleDialog_Template_button_click_8_listener","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","MatButton","encapsulation","DepartamentosComponent_mat_option_5_Template_mat_option_click_0_listener","_r3","departamento_r1","setDepartamento","apiDepartamentos","API_URL_ARGENTINA_DEPARTAMENTOS","apiLocalidades","API_URL_ARGENTINA_LOCALIDADES","apiProvincias","API_URL_PROVINCIAS","apiEmpresas","API_URL_EMPRESAS","isOptional","departamentoForm","departamentoSelected","id_departamento","id_provincia","listDepartamentos","changeMessage","departamentoSelectedSource","GetLocalidadesByDepartamento","getForm","localidades","localidadesUnicas","streamLocalidades_DepartamentoSelected","seen","Set","filteredArr","el","duplicate","has","add","DepartamentosComponent_Template","DepartamentosComponent_mat_option_5_Template","EmpresaFormComponent_mat_option_10_Template_mat_option_click_0_listener","empresa_r1","setEmpresa","nombre_fantasia","apiLocalidad","API_URL_LOCALIDADES","apiPlantas","API_URL_PLANTA","empresaForm","razon_social","calle","altura","rubro","piso","deptartamento","id_localidad","listEmpresas","GetAllEmpresas","createEmpresa","borrarEmpresa","deleteForm","id_empresa","empresaSelectedSource","GetPlantasByEmpresas","streamPlantas_EmpresaSelected","EmpresaFormComponent_Template","EmpresaFormComponent_mat_option_10_Template","EmpresaFormComponent_Template_form_ngSubmit_17_listener","EmpresaFormComponent_Template_form_submit_17_listener","EmpresaPlantaFormComponent_mat_option_10_Template_mat_option_click_0_listener","planta_r1","setPlanta","apiPlanta","apiLinea","API_URL_LINEA_PRODUCCION","plantaForm","listPlantas","GetAllPlantas","createPlanta","borrarPlanta","id_planta","plantaSelectedSource","GetLineaByPlanta","streamLinea_PlantaSelected","EmpresaPlantaFormComponent_Template","EmpresaPlantaFormComponent_mat_option_10_Template","EmpresaPlantaFormComponent_Template_form_ngSubmit_17_listener","EmpresaPlantaFormComponent_Template_form_submit_17_listener","LineaProduccionFormComponent_mat_option_10_Template_mat_option_click_0_listener","linea_r1","setLinea","apiMaquina","API_URL_MAQUINA","lineaForm","descripcion","identificador","listLineas","id_empresa_planta","GetAllLineas","createLinea","borrarLineaProduccion","id_linea","lineaSelectedSource","GetMaquinaByLinea","streamMaquinas_LineaSelected","LineaProduccionFormComponent_Template","LineaProduccionFormComponent_mat_option_10_Template","LineaProduccionFormComponent_Template_form_ngSubmit_17_listener","LocalidadFormComponent_mat_option_5_Template_mat_option_click_0_listener","localidad_r1","setLocalidad","localidadForm","listLocalidades","GetAllLocalidades","createLocalidad","borrarLocalidad","localidadSelectedSource","GetEmpresasByLocalidad","streamEmpresas_LocalidadSelected","LocalidadFormComponent_Template","LocalidadFormComponent_mat_option_5_Template","MaquinaFormComponent_mat_option_10_Template_mat_option_click_0_listener","maquina_r1","setMaquina","StreamMaquinaSelected","apiTipoMaquina","API_URL_TIPO_MAQUINA","GetAllTipos","maquinaForm","marca","modelo","detalle","currentMessage","listMaquinas","id_linea_produccion","id_tipo_maquina","listTipoMaquina","GetAllMaquinas","createMaquina","borrarMaquina","maquina_id","streamMaquinaSelected","MaquinaFormComponent_Template","MaquinaFormComponent_mat_option_10_Template","MaquinaFormComponent_Template_form_ngSubmit_17_listener","MaquinaFormComponent_Template_form_submit_17_listener","PaisFormComponent_mat_option_5_Template_mat_option_click_0_listener","pais_r1","setPais","country","_formBuilder","_httpservice","apiPaises","API_URL_PAISES","apiArgentinaPronvincias","API_URL_ARGENTINA_PROVINCIAS","apiProvincia","GetAllPaises","paisForm","nombre_pais","httpGet","listPaises","paisSelectedSource","GetProvinciasByPais","provincias","streamProvincias_PaisSelected","httpPost","states","PaisFormComponent_Template","PaisFormComponent_Template_mat_select_selectionChange_4_listener","PaisFormComponent_mat_option_5_Template","ProcesoFormComponent_mat_option_10_Template_mat_option_click_0_listener","proceso_r1","setProceso","StreamProcesoSelected","apiProceso","API_URL_PROCESO","GetAllProcesos","procesoForm","listProceso","crearProceso","borrarProcesos","proceso_id","streamProcesoSelected","ProcesoFormComponent_Template","ProcesoFormComponent_mat_option_10_Template","ProcesoFormComponent_Template_form_ngSubmit_17_listener","ProvinciaFormComponent_mat_option_5_Template_mat_option_click_0_listener","provincia_r1","setProvincia","apiArgentinaDepartamentos","provinciaForm","listProvincias","listProvinciasPais","provinciaSelectedSource","GetDepartamentosByProvincia","departamentos","streamDepartamentos_ProvinciaSelected","state","ProvinciaFormComponent_Template","ProvinciaFormComponent_mat_option_5_Template","TipoMaquinaFormComponent_mat_option_10_Template_mat_option_click_0_listener","tipo_r1","setTipo","StreamTipoSelected","GetAllTiposMaquina","tipoMaquinaForm","createTipoMaquina","borrarTipoMaquina","tipo_id","streamTipoSelected","TipoMaquinaFormComponent_Template","TipoMaquinaFormComponent_mat_option_10_Template","TipoMaquinaFormComponent_Template_form_ngSubmit_17_listener","TipoMaquinaFormComponent_Template_form_submit_17_listener","TriggerFormComponent_div_10_Template_mat_option_click_1_listener","trigger_r1","setTrigger","StreamTriggerSelected","apiTrigger","API_URL_TRIGGER","GetAllTriggers","triggerForm","listTriggers","crearTrigger","borrarTrigger","trigger_descripcion","trigger_id","streamTriggerSelected","TriggerFormComponent_Template","TriggerFormComponent_div_10_Template","VariableModalComponent","VariableFormComponent_mat_list_11_Template_button_click_3_listener","variable_r1","openDialog","httpService","apiVariables","API_URL_VARIABLES","apiMaquinas","GetAllVariables","variableForm","trigger_valor","id_maquina","id_proceso","id_trigger","listProcesos","listMaquina","listTrigger","crearVariable","variable_id","MatDialog","VariableFormComponent_Template","VariableFormComponent_Template_mat_expansion_panel_click_7_listener","VariableFormComponent_mat_list_11_Template","VariableFormComponent_Template_form_ngSubmit_18_listener","borrarVariable","VariableModalComponent_Template","VariableModalComponent_Template_button_click_4_listener","VariableModalComponent_Template_button_click_6_listener","inject","route","IsLoggedIn","menu","cerrar","LoginModalComponent_Template","LoginModalComponent_Template_button_click_14_listener","Subscription","catchError","delay","BehaviorSubject","of","http","apiUrl","API_URL_USERS","apiRole","API_URL_ROLES","tokenSubscription","tokenSubscription2","messageSource","provinciasSource","departamentosSource","localidadesSource","empresasSource","plantasSource","lineaSource","maquinaSource","fullnameSource","tipoMaquinaSelectedSource","maquinaSelectedSource","procesoSelectedSource","triggerSelectedSource","asObservable","enterAnimationDuration","exitAnimationDuration","afterClosed","post","pipe","_ref","_asyncToGenerator","_x","apply","arguments","authToken","unsubscribe","expired","closeAll","pre_expirationCounter","timeNow","inputdata","headers","observe","_ref2","_x2","_this","Authorization","_ref3","_x3","formData","_ref4","_x4","delete","_ref5","_x5","empresas","plantas","linea","Maquinas","TipoMaquina","Maquina","proceso","trigger","ɵɵinject","HttpClient","factory","ɵfac","providedIn","idList","generatedChart","Subject","registroGeneral","API_URL_RGENERAL","registroGeneralts","API_URL_RGENERALTS","variables","listaVariablesSource","listaRegistroFiltradoSource","listaRegistroFiltrado2Source","listaDatosSource3","listaDatosInRangeSource","listChartInfoSource","listCharDatatInfoSource","rangeSource","listaRegistroFiltrado","listaDatos3","listChartInfo","listChartDataInfo","inicio_str","final_str","getValores","variable","fin","operacion","datos","datoGeneral","stream_Datos3","stream_Chart_Info","chartInfo","stream_ChartData_Info","chartDataInfo","get_Inicio_Final","_spinnerService","spinner","hide","NgxSpinnerService","colorLib","CHART_COLORS","strong_blue","medium_blue","light_blue","red","orange","yellow","green","blue","purple","grey","NAMED_COLORS","alpha","undefined","rgbString","hasUpperCase","test","passwordValid","checkLowerCase","hasLowerCase","hasLower","hasNumeric","hasSpecial","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","MatSelectModule","MatCardModule","MatRadioModule","MatCheckboxModule","MatTableModule","MatPaginatorModule","MatSortModule","MatExpansionModule","MatStepperModule","MatIconModule","MatListModule","MatChipsModule","MatDatepickerModule","MatSidenavModule","MatProgressSpinnerModule","MatMenuModule","MatProgressBarModule","MatTabsModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[58]}