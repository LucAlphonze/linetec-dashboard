{"version":3,"file":"main.js","mappings":"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":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home5/home5.component.ts","./src/app/components/home5/home5.component.html","./src/app/components/listar-datos/listar-daatos-modal/listar-datos-modal.component.ts","./src/app/components/listar-datos/listar-daatos-modal/listar-datos-modal.component.html","./src/app/components/listar-datos/listar-datos.component.ts","./src/app/components/listar-datos/listar-datos.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/tabla/tabla.component.ts","./src/app/components/tabla/tabla.component.html","./src/app/components/toolbar/toolbar.component.ts","./src/app/components/toolbar/toolbar.component.html","./src/app/components/updatepopup/updatepopup.component.ts","./src/app/components/updatepopup/updatepopup.component.html","./src/app/components/userlisting/userlisting.component.ts","./src/app/components/userlisting/userlisting.component.html","./src/app/dialog.component.ts","./src/app/dialog.component.html","./src/app/forms/departamentos/departamentos.component.ts","./src/app/forms/departamentos/departamentos.component.html","./src/app/forms/empresa-form/empresa-form.component.ts","./src/app/forms/empresa-form/empresa-form.component.html","./src/app/forms/empresa-planta-form/empresa-planta-form.component.ts","./src/app/forms/empresa-planta-form/empresa-planta-form.component.html","./src/app/forms/linea-produccion-form/linea-produccion-form.component.ts","./src/app/forms/linea-produccion-form/linea-produccion-form.component.html","./src/app/forms/localidad-form/localidad-form.component.ts","./src/app/forms/localidad-form/localidad-form.component.html","./src/app/forms/maquina-form/maquina-form.component.ts","./src/app/forms/maquina-form/maquina-form.component.html","./src/app/forms/pais-form/pais-form.component.ts","./src/app/forms/pais-form/pais-form.component.html","./src/app/forms/proceso-form/proceso-form.component.ts","./src/app/forms/proceso-form/proceso-form.component.html","./src/app/forms/provincia-form/provincia-form.component.ts","./src/app/forms/provincia-form/provincia-form.component.html","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.ts","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.html","./src/app/forms/trigger-form/trigger-form.component.ts","./src/app/forms/trigger-form/trigger-form.component.html","./src/app/forms/variable-form/variable-form.component.ts","./src/app/forms/variable-form/variable-form.component.html","./src/app/forms/variable-form/variable.modal.component.ts","./src/app/forms/variable-form/variable-modal.html","./src/app/guard/auth.guard.ts","./src/app/login-modal/login-modal.component.ts","./src/app/login-modal/login-modal.component.html","./src/app/service/auth.service.ts","./src/app/service/chart-generator.service.ts","./src/app/service/http.service.ts","./src/app/service/spinner.service.ts","./src/app/service/utils.service.ts","./src/app/service/validator.ts","./src/environments/environment.staging.ts","./src/main.ts","./src/material.module.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { authGuard } from './guard/auth.guard';\r\n\r\nimport { Home5Component } from './components/home5/home5.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ListarDatosComponent, canActivate: [authGuard] },\r\n  { path: 'admin', component: Home5Component, canActivate: [authGuard] },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'user', component: UserlistingComponent, canActivate: [authGuard] },\r\n  { path: '**', redirectTo: 'login', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, DoCheck, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './service/auth.service';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { HttpService } from './service/http.service';\r\nimport { Subscription, catchError } from 'rxjs';\r\nimport { RegistroFiltrado, Variable } from './models/datos.model';\r\nimport { SpinnerService } from './service/spinner.service';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements DoCheck, OnInit {\r\n  opened: boolean = false;\r\n\r\n  range!: FormGroup;\r\n\r\n  valor!: FormGroup;\r\n  title = 'angular-charts';\r\n  isMenuRequired = false;\r\n  isAdminUser = false;\r\n  listVariables: any = [];\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  subscription3!: Subscription;\r\n  listDatos: RegistroFiltrado[] = [];\r\n  exceedList: any = [];\r\n\r\n  notExceedList2: any = [];\r\n  fullName!: string;\r\n  iniciales!: string;\r\n  mobile = false;\r\n\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private router: Router,\r\n    private service: AuthService,\r\n    private _httpService: HttpService,\r\n    private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer\r\n  ) {\r\n    this.matIconRegistry.addSvgIcon(\r\n      'ajustes-deslizadores',\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n        '../assets/ajustes-deslizadores.svg'\r\n      )\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      'calendario',\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n        '../assets/calendario 2.svg'\r\n      )\r\n    );\r\n  }\r\n  ngOnInit(): void {\r\n    this.valor = this.builder.group({\r\n      threshold: new FormControl<number>(25),\r\n    });\r\n    this.range = this.builder.group({\r\n      start: new FormControl<Date | null>(null),\r\n      end: new FormControl<Date | null>(null),\r\n      granularidad: new FormControl<string>('day'),\r\n    });\r\n    this.subscription3 = this.service.fullname.subscribe((message) => {\r\n      setTimeout(() => {\r\n        console.log('fullname: ', message);\r\n        this.fullName = message;\r\n        this.iniciales = this.splitFullName();\r\n      }, 0);\r\n    });\r\n    this.subscription = this._httpService.listaVariables.subscribe(\r\n      (message: any) => (this.listVariables = message)\r\n    );\r\n\r\n    this.subscription2 = this._httpService.listaDatosInRange.subscribe(\r\n      (message) => {\r\n        // console.log('app component datos in range: ', message);\r\n      }\r\n    );\r\n\r\n    if (window.screen.width < 500) {\r\n      this.mobile = true;\r\n    }\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    let currentUrl = this.router.url;\r\n    if (currentUrl == '/login' || currentUrl == '/register') {\r\n      this.isMenuRequired = false;\r\n      this.opened = false;\r\n    } else {\r\n      this.isMenuRequired = true;\r\n    }\r\n    if (this.service.getUserRole() === 'admin') {\r\n      this.isAdminUser = true;\r\n    } else {\r\n      this.isAdminUser = false;\r\n    }\r\n  }\r\n  logOut() {\r\n    this.service.logout();\r\n  }\r\n\r\n  splitFullName() {\r\n    var output = this.fullName.split(' ');\r\n    var iniciales = '';\r\n    if (output.length > 1) {\r\n      iniciales = output[0].charAt(0) + output[1].charAt(0);\r\n    } else {\r\n      iniciales = output[0].charAt(0) + output[0].charAt(1);\r\n    }\r\n    console.log('iniciales: ', iniciales);\r\n    return iniciales.toUpperCase();\r\n  }\r\n}\r\n","<style>\r\n  :host {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\r\n      \"Segoe UI Symbol\";\r\n    font-size: 14px;\r\n    color: #333;\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n\r\n  .toolbar {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    height: 75px;\r\n    font-weight: 600;\r\n    background: #fff;\r\n\r\n    /* shadow */\r\n    box-shadow: 0px 4px 16px 0px rgba(0, 0, 0, 0.08);\r\n  }\r\n\r\n  .navbar-menu {\r\n    cursor: pointer;\r\n  }\r\n  .navbar-menu:hover {\r\n    color: #cb3f45;\r\n  }\r\n</style>\r\n\r\n<mat-toolbar class=\"toolbar flex items-center\" *ngIf=\"isMenuRequired\">\r\n  <div class=\"grid grid-cols-3 grid-rows-1 gap-4 content-center\">\r\n    <div class=\"col-span-1 pl-5\">\r\n      <a routerLink=\"/\" class=\"navbar-menu\">\r\n        <img\r\n          src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n          alt=\"\"\r\n          class=\"lintec_logo\"\r\n      /></a>\r\n    </div>\r\n    <div class=\"col-span-1 pt-5\">\r\n      <a *ngIf=\"isAdminUser\" routerLink=\"/admin\" class=\"navbar-menu\"\r\n        >Formularios</a\r\n      >\r\n    </div>\r\n    <div class=\"col-span-1 pt-5\">\r\n      <a *ngIf=\"isAdminUser\" routerLink=\"/user\" class=\"navbar-menu\">Usuarios</a>\r\n    </div>\r\n  </div>\r\n\r\n  <span class=\"spacer\"></span>\r\n  <div class=\"perfil\">\r\n    <p [attr.data-letters]=\"iniciales\" class=\"profile\"></p>\r\n    <p *ngIf=\"!mobile\" class=\"fullName\">{{ fullName }}</p>\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      class=\"navbar-menu m-5\"\r\n      (click)=\"logOut()\"\r\n    >\r\n      <g clip-path=\"url(#clip0_137_246)\">\r\n        <path\r\n          d=\"M22.829 9.17192L18.95 5.29292C18.7614 5.11076 18.5088 5.00997 18.2466 5.01224C17.9844 5.01452 17.7336 5.11969 17.5482 5.3051C17.3628 5.49051 17.2576 5.74132 17.2553 6.00352C17.2531 6.26571 17.3539 6.51832 17.536 6.70692L21.415 10.5859C21.5303 10.7034 21.631 10.8344 21.715 10.9759C21.7 10.9759 21.688 10.9679 21.673 10.9679L5.98901 10.9999C5.7238 10.9999 5.46944 11.1053 5.28191 11.2928C5.09437 11.4803 4.98901 11.7347 4.98901 11.9999C4.98901 12.2651 5.09437 12.5195 5.28191 12.707C5.46944 12.8946 5.7238 12.9999 5.98901 12.9999L21.667 12.9679C21.695 12.9679 21.718 12.9539 21.745 12.9519C21.6563 13.1211 21.5438 13.2767 21.411 13.4139L17.532 17.2929C17.4365 17.3852 17.3603 17.4955 17.3079 17.6175C17.2555 17.7395 17.2279 17.8707 17.2268 18.0035C17.2256 18.1363 17.2509 18.268 17.3012 18.3909C17.3515 18.5138 17.4257 18.6254 17.5196 18.7193C17.6135 18.8132 17.7252 18.8875 17.8481 18.9377C17.971 18.988 18.1026 19.0133 18.2354 19.0122C18.3682 19.011 18.4994 18.9834 18.6214 18.931C18.7434 18.8786 18.8538 18.8024 18.946 18.7069L22.825 14.8279C23.5749 14.0778 23.9962 13.0606 23.9962 11.9999C23.9962 10.9393 23.5749 9.92203 22.825 9.17192H22.829Z\"\r\n          fill=\"#c82d3b\"\r\n        />\r\n        <path\r\n          d=\"M7 22H5C4.20435 22 3.44129 21.6839 2.87868 21.1213C2.31607 20.5587 2 19.7956 2 19V5C2 4.20435 2.31607 3.44129 2.87868 2.87868C3.44129 2.31607 4.20435 2 5 2H7C7.26522 2 7.51957 1.89464 7.70711 1.70711C7.89464 1.51957 8 1.26522 8 1C8 0.734784 7.89464 0.48043 7.70711 0.292893C7.51957 0.105357 7.26522 0 7 0L5 0C3.67441 0.00158786 2.40356 0.528882 1.46622 1.46622C0.528882 2.40356 0.00158786 3.67441 0 5L0 19C0.00158786 20.3256 0.528882 21.5964 1.46622 22.5338C2.40356 23.4711 3.67441 23.9984 5 24H7C7.26522 24 7.51957 23.8946 7.70711 23.7071C7.89464 23.5196 8 23.2652 8 23C8 22.7348 7.89464 22.4804 7.70711 22.2929C7.51957 22.1054 7.26522 22 7 22Z\"\r\n          fill=\"#c82d3b\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <clipPath id=\"clip0_137_246\">\r\n          <rect width=\"24\" height=\"24\" fill=\"white\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </div>\r\n</mat-toolbar>\r\n\r\n<div role=\"main\">\r\n  <router-outlet class=\"\"></router-outlet>\r\n</div>\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// Import FusionCharts library and chart modules\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from 'src/material.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UpdatepopupComponent } from './components/updatepopup/updatepopup.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { PaisFormComponent } from './forms/pais-form/pais-form.component';\r\nimport { ProvinciaFormComponent } from './forms/provincia-form/provincia-form.component';\r\nimport { LocalidadFormComponent } from './forms/localidad-form/localidad-form.component';\r\nimport { EmpresaFormComponent } from './forms/empresa-form/empresa-form.component';\r\nimport { EmpresaPlantaFormComponent } from './forms/empresa-planta-form/empresa-planta-form.component';\r\nimport { MaquinaFormComponent } from './forms/maquina-form/maquina-form.component';\r\nimport { TipoMaquinaFormComponent } from './forms/tipo-maquina-form/tipo-maquina-form.component';\r\nimport { LineaProduccionFormComponent } from './forms/linea-produccion-form/linea-produccion-form.component';\r\nimport { ProcesoFormComponent } from './forms/proceso-form/proceso-form.component';\r\nimport { VariableFormComponent } from './forms/variable-form/variable-form.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { TriggerFormComponent } from './forms/trigger-form/trigger-form.component';\r\nimport { Home5Component } from './components/home5/home5.component';\r\nimport { TablaComponent } from './components/tabla/tabla.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { LoginModalComponent } from './login-modal/login-modal.component';\r\n\r\nimport {\r\n  DateAdapter,\r\n  MatNativeDateModule,\r\n  MAT_DATE_FORMATS,\r\n  MAT_DATE_LOCALE,\r\n} from '@angular/material/core';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DepartamentosComponent } from './forms/departamentos/departamentos.component';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\nconst MY_DATE_FORMAT = {\r\n  parse: {\r\n    dateInput: 'yyyy-MM-dd', // this is how your date will be parsed from Input\r\n  },\r\n  display: {\r\n    dateInput: 'yyyy-MM-DD', // this is how your date will get displayed on the Input\r\n    monthYearLabel: 'MMMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListarDatosComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    UpdatepopupComponent,\r\n    UserlistingComponent,\r\n    PaisFormComponent,\r\n    ProvinciaFormComponent,\r\n    LocalidadFormComponent,\r\n    EmpresaFormComponent,\r\n    EmpresaPlantaFormComponent,\r\n    MaquinaFormComponent,\r\n    TipoMaquinaFormComponent,\r\n    LineaProduccionFormComponent,\r\n    ProcesoFormComponent,\r\n    VariableFormComponent,\r\n    TriggerFormComponent,\r\n    Home5Component,\r\n    TablaComponent,\r\n    LoginModalComponent,\r\n    DepartamentosComponent,\r\n    ToolbarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgxSpinnerModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: ['localhost'],\r\n      },\r\n    }),\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    ToastrModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE],\r\n    },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMAT },\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatStepper, StepperOrientation } from '@angular/material/stepper';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { MatTabGroup } from '@angular/material/tabs';\r\n\r\n@Component({\r\n  selector: 'app-home5',\r\n  templateUrl: './home5.component.html',\r\n  styleUrls: ['./home5.component.css'],\r\n})\r\nexport class Home5Component implements OnInit {\r\n  @ViewChild('stepper') stepper!: MatStepper;\r\n  @ViewChild(MatTabGroup) tabgroup!: MatTabGroup;\r\n  paisForm!: FormGroup;\r\n  provinciaForm!: FormGroup;\r\n  localidadForm!: FormGroup;\r\n  empresaForm!: FormGroup;\r\n  plantaForm!: FormGroup;\r\n  tipoMaquinaForm!: FormGroup;\r\n  lineaProduccionForm!: FormGroup;\r\n  maquinaForm!: FormGroup;\r\n  procesoForm!: FormGroup;\r\n  triggerForm!: FormGroup;\r\n  timeout: any;\r\n  token: any;\r\n  isTrue: boolean = false;\r\n\r\n  isPaisCompleted: boolean = false;\r\n  isProvinciaCompleted: boolean = false;\r\n  isLocalidadCompleted: boolean = false;\r\n  isEmpresaCompleted: boolean = false;\r\n  isPlantaCompleted: boolean = false;\r\n  isTipoMaquinaCompleted: boolean = false;\r\n  isLineaProduccionCompleted: boolean = false;\r\n  isMaquinaCompleted: boolean = false;\r\n  isProcesoCompleted: boolean = false;\r\n  isTriggerCompleted: boolean = false;\r\n  subscription!: Subscription;\r\n  completed: boolean = false;\r\n  tituloTabs = [\r\n    'Direccion',\r\n    'Empresa',\r\n    'Empresa/Planta',\r\n    'Línea de producción',\r\n    'Tipo de Máquina',\r\n    'Máquina',\r\n    'Proceso',\r\n    'Trigger',\r\n    'Variables',\r\n  ];\r\n  public selected = new FormControl(0);\r\n\r\n  constructor(\r\n    private service: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    breakpointObserver: BreakpointObserver\r\n  ) {}\r\n  ngOnInit() {\r\n    this.expirationCheck();\r\n    this.service.getUser();\r\n    this.subscription = this.service.paisSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPaisCompleted = true;\r\n      } else {\r\n        this.isPaisCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.provinciaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProvinciaCompleted = true;\r\n      } else {\r\n        this.isProvinciaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLocalidadCompleted = true;\r\n        this.completed = this.isLocalidadCompleted;\r\n      } else {\r\n        this.isLocalidadCompleted = false;\r\n        this.completed = this.isLocalidadCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.empresaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isEmpresaCompleted = true;\r\n        this.completed = this.isEmpresaCompleted;\r\n      } else {\r\n        this.isEmpresaCompleted = false;\r\n        this.completed = this.isEmpresaCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.plantaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPlantaCompleted = true;\r\n        this.completed = this.isPlantaCompleted;\r\n      } else {\r\n        this.isPlantaCompleted = false;\r\n        this.completed = this.isPlantaCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.lineaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLineaProduccionCompleted = true;\r\n        this.completed = this.isPlantaCompleted;\r\n      } else {\r\n        this.isLineaProduccionCompleted = false;\r\n        this.completed = this.isLocalidadCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => {\r\n        if (message != '') {\r\n          this.isTipoMaquinaCompleted = true;\r\n          this.completed = this.isTipoMaquinaCompleted;\r\n        } else {\r\n          this.isTipoMaquinaCompleted = false;\r\n          this.completed = this.isTipoMaquinaCompleted;\r\n        }\r\n      }\r\n    );\r\n    this.subscription = this.service.maquinaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isMaquinaCompleted = true;\r\n        this.completed = this.isMaquinaCompleted;\r\n      } else {\r\n        this.isMaquinaCompleted = false;\r\n        this.completed = this.isMaquinaCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.procesoSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProcesoCompleted = true;\r\n        this.completed = this.isProcesoCompleted;\r\n      } else {\r\n        this.isProcesoCompleted = false;\r\n        this.completed = this.isProcesoCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.triggerSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isTriggerCompleted = true;\r\n        this.completed = this.isTriggerCompleted;\r\n      } else {\r\n        this.isTriggerCompleted = false;\r\n        this.completed = this.isTriggerCompleted;\r\n      }\r\n    });\r\n  }\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.service.expirationCounter(this.timeout);\r\n  }\r\n  nextButton() {\r\n    this.selected.setValue(this.selected.value! + 1);\r\n    console.log(this.selected.value);\r\n    this.completed = false;\r\n  }\r\n  backButton() {\r\n    this.selected.setValue(this.selected.value! - 1);\r\n    console.log(this.selected.value);\r\n  }\r\n}\r\n","<div class=\"p-3 fondo\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div class=\"grid grid-cols-6 grid-rows-2 gap-1 m-6\">\r\n        <div class=\"col-span-5\">\r\n          <mat-progress-bar\r\n            mode=\"determinate\"\r\n            [value]=\"(selected.value ? selected.value : 0) * 12.5\"\r\n          ></mat-progress-bar>\r\n        </div>\r\n        <div class=\"col-start-6 justify-self-end\">\r\n          <p>{{ selected.value ? selected.value + 1 : 1 }} / 9</p>\r\n        </div>\r\n        <div class=\"row-start-2\">\r\n          <h2>{{ tituloTabs[selected.value || 0] }}</h2>\r\n        </div>\r\n      </div>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <mat-tab-group\r\n        class=\"invisible-tabs\"\r\n        [selectedIndex]=\"selected.value\"\r\n        (selectedIndexChange)=\"selected.setValue($event)\"\r\n      >\r\n        <mat-tab>\r\n          <app-pais-form></app-pais-form>\r\n          <app-provincia-form></app-provincia-form>\r\n          <app-departamentos></app-departamentos>\r\n          <app-localidad-form></app-localidad-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-empresa-form></app-empresa-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-empresa-planta-form></app-empresa-planta-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-linea-produccion-form></app-linea-produccion-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-tipo-maquina-form></app-tipo-maquina-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-maquina-form></app-maquina-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-proceso-form></app-proceso-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-trigger-form></app-trigger-form>\r\n        </mat-tab>\r\n        <mat-tab><app-variable-form></app-variable-form></mat-tab>\r\n      </mat-tab-group>\r\n\r\n      <div class=\"flex justify-between\">\r\n        <button\r\n          class=\"boton\"\r\n          mat-raised-button\r\n          [disabled]=\"!selected.value\"\r\n          (click)=\"backButton()\"\r\n        >\r\n          Atrás\r\n        </button>\r\n        <button\r\n          class=\"boton\"\r\n          mat-raised-button\r\n          [disabled]=\"!completed || selected.value == 8\"\r\n          (click)=\"nextButton()\"\r\n        >\r\n          Siguiente\r\n        </button>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { CommonModule, NgFor } from '@angular/common';\r\nimport { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { Subscription } from 'rxjs';\r\nimport { HttpService } from 'src/app/service/http.service';\r\n\r\n@Component({\r\n  selector: 'app-listar-datos-modal',\r\n  templateUrl: './listar-datos-modal.component.html',\r\n  styleUrls: ['./listar-datos-modal.component.css'],\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    CommonModule,\r\n    NgFor,\r\n  ],\r\n})\r\nexport class ListarDatosModal implements OnInit {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ListarDatosModal>,\r\n    private service: HttpService\r\n  ) {}\r\n  subscription!: Subscription;\r\n  listVariables: any;\r\n\r\n  ngOnInit(): void {\r\n    this.service.getVariables().subscribe((data) => {\r\n      this.listVariables = data.filter(\r\n        (x: any) =>\r\n          x.id_trigger.nombre !== 'sin-filtro' &&\r\n          x.id_trigger.nombre !== 'cambio-tiempo'\r\n      );\r\n    });\r\n  }\r\n}\r\n","<h2 mat-dialog-title class=\"titulo\">\r\n  Aviso sobre la visualización de los datos\r\n</h2>\r\n<div mat-dialog-content>\r\n  <p class=\"subtitulo\">\r\n    Es posible que los cálculos de los valores medios de las variables\r\n    <span *ngFor=\"let variable of listVariables\"> {{ variable.nombre }}, </span>\r\n    difieran de la realidad\r\n  </p>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-button [mat-dialog-close] class=\"btn-aceptar\">Aceptar</button>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { Chart, registerables } from 'node_modules/chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport 'date-fns/locale';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { UtilsService } from 'src/app/service/utils.service';\r\nimport { Dato, RegistroFiltrado } from 'src/app/models/datos.model';\r\nimport { Subscription, catchError } from 'rxjs';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\r\nimport { ChartGeneratorService } from 'src/app/service/chart-generator.service';\r\nimport { environment } from 'src/environments/environment';\r\n// import zoomPlugin from 'chartjs-plugin-zoom';\r\nChart.register(...registerables);\r\nChart.defaults.font.family = 'DIN-PRO';\r\nChart.defaults.font.size = 14;\r\nChart.defaults.font.weight = '400';\r\n\r\n@Component({\r\n  selector: 'app-listar-datos',\r\n  templateUrl: './listar-datos.component.html',\r\n  styleUrls: ['./listar-datos.component.css'],\r\n})\r\nexport class ListarDatosComponent implements OnInit, OnDestroy {\r\n  listDatos: any;\r\n  listVariables: any[] = [];\r\n  todayDate: Date = new Date();\r\n  sixMonthAgoDate!: Date;\r\n  dato!: Dato;\r\n  sensor_1: string = 'sensor 1';\r\n  sensor_2: string = 'sensor 2';\r\n  pulsador: string = 'Pulsador';\r\n  id: any = 0;\r\n  chart: any;\r\n  chart3: any;\r\n  title: string = 'Prueba angular';\r\n  timeout: any;\r\n  token: any;\r\n  subscription!: Subscription;\r\n  open: boolean = false;\r\n  range!: any;\r\n  rangeSub!: any;\r\n  interval!: any;\r\n  chartList: any = [];\r\n  chartList2: any = [];\r\n  i: any = null;\r\n  tabla: any = 'tabla';\r\n  isOpen = false;\r\n  selectValue: any = [\r\n    {\r\n      option: 'Media',\r\n      value: 'avg',\r\n    },\r\n    {\r\n      option: 'Mínimo',\r\n      value: 'min',\r\n    },\r\n    {\r\n      option: 'Máximo',\r\n      value: 'max',\r\n    },\r\n  ];\r\n  selectedValue = this.selectValue[2].value;\r\n  selectedInterval = this.selectValue[0];\r\n\r\n  selectTime: any = [\r\n    {\r\n      option: '1h',\r\n      value: 3600000,\r\n      binSize: 1,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '3h',\r\n      value: 10800000,\r\n      binSize: 10,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '12h',\r\n      value: 43200000,\r\n      binSize: 5,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '1d',\r\n      value: 86400000,\r\n      binSize: 15,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '3d',\r\n      value: 259200000,\r\n      binSize: 1,\r\n      unit: 'hour',\r\n    },\r\n    {\r\n      option: '1w',\r\n      value: 604800000,\r\n      binSize: 6,\r\n      unit: 'hour',\r\n    },\r\n  ];\r\n  selectedTime = this.selectTime[0];\r\n\r\n  selectTimeOut: any = [\r\n    {\r\n      option: 'Desactivado',\r\n      value: 'null',\r\n    },\r\n    {\r\n      option: '30Seg',\r\n      value: '30s',\r\n    },\r\n    {\r\n      option: '1 Minuto',\r\n      value: '1m',\r\n    },\r\n    {\r\n      option: '2 Minutos',\r\n      value: '2m',\r\n    },\r\n    {\r\n      option: '5 Minutos',\r\n      value: '5m',\r\n    },\r\n    {\r\n      option: '15 Minutos',\r\n      value: '15m',\r\n    },\r\n  ];\r\n\r\n  canvasBackgroundColor = {\r\n    id: 'canvasBackgroundColor',\r\n    beforeDatasetsDraw(chart: any, args: any, pluginOptions: any) {\r\n      const {\r\n        ctx,\r\n        chartArea: { top, bottom, left, right, width, height },\r\n        scales: { x, y },\r\n      } = chart;\r\n\r\n      function bgColors(\r\n        bracketLow: number,\r\n        bracketHigh: number,\r\n        color: string\r\n      ) {\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(\r\n          left,\r\n          y.getPixelForValue(bracketHigh),\r\n          width,\r\n          y.getPixelForValue(bracketLow) - y.getPixelForValue(bracketHigh)\r\n        );\r\n        ctx.restore();\r\n      }\r\n      bgColors(y.min, y.max, 'rgba(111, 151, 255, 0.30)');\r\n    },\r\n  };\r\n  decimation: any = {\r\n    id: 'decimation',\r\n    enabled: true,\r\n    algorithm: 'lttb',\r\n    samples: 5000,\r\n    threshold: 1000,\r\n  };\r\n  @ViewChild(MatMenuTrigger) trigger!: MatMenuTrigger;\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private utils: UtilsService,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private spinnerService: SpinnerService,\r\n    private builder: FormBuilder,\r\n    private chartService: ChartGeneratorService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    console.log(`base url listar datos: ${environment.API_BASE_URL}`);\r\n    this.getVariables();\r\n    this.authService.getUser();\r\n\r\n    this.range = this.builder.group({\r\n      start: new FormControl<Date | null>(null),\r\n      end: new FormControl<Date | null>(null),\r\n      granularidad: new FormControl<string>('day'),\r\n    });\r\n\r\n    this.interval = this.builder.group({\r\n      intervalo: new FormControl<Number | null>(1),\r\n      medida: new FormControl<String | null>('max'),\r\n      tiempo: new FormControl<Number | null>(60 * 60 * 1000),\r\n    });\r\n\r\n    this.chart = new Chart('myChart', {\r\n      type: 'line',\r\n      data: {\r\n        labels: [],\r\n        datasets: [],\r\n      },\r\n      options: {\r\n        // hay que arreglar esto para que funcione la data decimation\r\n        // Turn off animations and data parsing for performance\r\n        elements: {\r\n          line: {\r\n            tension: 0.5,\r\n          },\r\n        },\r\n        aspectRatio: 1,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            ticks: {},\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n          x: {\r\n            type: 'time',\r\n\r\n            ticks: {\r\n              source: 'auto',\r\n              // Disabled rotation for performance\r\n              maxRotation: 0,\r\n              autoSkip: true,\r\n            },\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      plugins: [this.canvasBackgroundColor], //canvasBackgroundColor,\r\n    });\r\n\r\n    this.subscription = this._httpService.listaVariables.subscribe(\r\n      (message: any) => {\r\n        this.listVariables = message;\r\n        this.getRegistros();\r\n      }\r\n    );\r\n    this.expirationCheck();\r\n\r\n    this.subscription = this._httpService.listaRegistroFiltrado2.subscribe(\r\n      (message) => {\r\n        console.log('registro filtrado 2:', message);\r\n        this.listDatos = message;\r\n        if (this.listDatos.length != 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n        var sortedList = this.listVariables;\r\n        sortedList = sortedList.map((item: { _id: any }) => {\r\n          const item2 = this.listDatos.find(\r\n            (i2: { _id: any }) => i2._id === item._id\r\n          );\r\n          return item2 ? { ...item, ...item2 } : item;\r\n        });\r\n        console.log('sortedList: ', sortedList);\r\n        for (let i = 0; i < this.listVariables.length; i++) {\r\n          this.chart.data.datasets[i].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.max.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chart.update();\r\n\r\n          if (i == this.listVariables.length - 1) {\r\n            this.spinnerService.detenerSpinner('grafico');\r\n            this.chart.update();\r\n          }\r\n        }\r\n        for (let i = 0; i < this.chartList.length; i++) {\r\n          this.chartList2[i].chart.data.datasets[0].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.min.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.min.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chartList2[i].chart.update();\r\n        }\r\n      }\r\n    );\r\n    this.subscription = this._httpService.rangeInfo.subscribe(\r\n      (message: any) => {\r\n        this.rangeSub = message;\r\n      }\r\n    );\r\n    this.subscription = this.chartService.chartInfo.subscribe(\r\n      (message: any) => {\r\n        console.log('chart info datos: ', message);\r\n        this.changeCurrentValues(\r\n          this.chartList2[message.index].chart,\r\n          message.value,\r\n          message.datos ? message.datos : this.chartList2.datos,\r\n          message.index\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.id) {\r\n      clearInterval(this.id);\r\n    }\r\n  }\r\n\r\n  getRegistros() {\r\n    var inicio = new Date('2023-05-01').getTime().toString();\r\n    var final = new Date('2024-12-31').getTime().toString();\r\n    var sortedList = this.listVariables;\r\n    this.spinnerService.llamarSpinner('grafico');\r\n    this._httpService\r\n      .getValoresFiltrados2(inicio, final, this.range.value.granularidad)\r\n      .subscribe((data) => {\r\n        this.listDatos = data['datos'];\r\n\r\n        sortedList = sortedList.map((item: { _id: any }) => {\r\n          const item2 = this.listDatos.find(\r\n            (i2: { _id: any }) => i2._id === item._id\r\n          );\r\n          return item2 ? { ...item, ...item2 } : item;\r\n        });\r\n        sortedList = sortedList.filter((e) => 'info' in e);\r\n        if (this.chart.data.datasets.length < sortedList.length) {\r\n          for (let j = 0; j < sortedList.length; j++) {\r\n            const dsColor = this.utils.namedColor(\r\n              this.chart.data.datasets.length\r\n            );\r\n            const dataSet = {\r\n              data: [],\r\n              label: sortedList[j].nombre,\r\n              borderColor: dsColor,\r\n              backgroundColor: this.utils.transparentize(dsColor, 0.5),\r\n            };\r\n            this.chart.data.datasets.push(dataSet);\r\n          }\r\n        }\r\n\r\n        console.log('sortedList: ', sortedList);\r\n        for (let i = 0; i < sortedList.length; i++) {\r\n          this.chart.data.datasets[i].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.max.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chart.update();\r\n\r\n          if (i == sortedList.length - 1) {\r\n            this.spinnerService.detenerSpinner('grafico');\r\n            this.chart.update();\r\n          }\r\n        }\r\n        for (let i = 0; i < this.chartList.length; i++) {\r\n          this.chartList2[i].chart.data.datasets[0].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.min.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.min.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chartList2[i].datos = [sortedList[i]];\r\n          this.chartList2[i].chart.update();\r\n        }\r\n      });\r\n  }\r\n\r\n  getVariables() {\r\n    this._httpService.getVariables().subscribe((data) => {\r\n      this._httpService.stream_Variables(data);\r\n      console.log(data);\r\n\r\n      this.chartList = [\r\n        {\r\n          titulo: data[0] ? data[0].nombre : 'myChart1',\r\n          id: data[0],\r\n        },\r\n        {\r\n          titulo: data[1] ? data[1].nombre : 'myChart2',\r\n          id: data[1],\r\n        },\r\n        {\r\n          titulo: data[2] ? data[2].nombre : 'myChart3',\r\n          id: data[2],\r\n        },\r\n      ];\r\n      setTimeout(() => {\r\n        this.chartService.generate(\r\n          this.chartList,\r\n          this.decimation,\r\n          this.canvasBackgroundColor\r\n        );\r\n        this.chartList2 = this.chartService.getCharts();\r\n        this.chartService.streamCharts(this.chartList2);\r\n      }, 500);\r\n    });\r\n  }\r\n\r\n  getFiltrados() {\r\n    var inicio: any = this.range.value.start._d?.getTime().toString();\r\n    var final: any = this.range.value.end._d?.getTime().toString();\r\n    this.spinnerService.llamarSpinner('grafico');\r\n    this._httpService\r\n      .getValoresFiltrados2(inicio, final, this.range.value.granularidad)\r\n      .subscribe((data) => {\r\n        // console.log(data);\r\n        this._httpService.stream_RegistroFiltrado2(data['datos']);\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n      });\r\n  }\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.authService.expirationCounter(this.timeout);\r\n  }\r\n  getDataColors = (opacity?: String) => {\r\n    const colors = [\r\n      '#7448c2',\r\n      '#21c0d7',\r\n      '#d99e2b',\r\n      '#cd3a81',\r\n      '#9c99cc',\r\n      '#e14eca',\r\n      '#ffffff',\r\n      '#ff0000',\r\n      '#d6ff00',\r\n      '#0038ff',\r\n    ];\r\n    return colors.map((color) => (opacity ? `${color + opacity}` : color));\r\n  };\r\n\r\n  setInicio_final() {\r\n    var inicio: any = this.range.value.start._d?.getTime().toString();\r\n    var final: any = this.range.value.end._d?.getTime().toString();\r\n    var difference = parseInt(final) - parseInt(inicio);\r\n    if (difference < this.selectTime[4].value) {\r\n      this.setInterval({\r\n        option: '1d',\r\n        value: 86400000,\r\n        binSize: 15,\r\n        unit: 'minute',\r\n      });\r\n    } else if (difference < this.selectTime[5].value) {\r\n      this.setInterval({\r\n        option: '3d',\r\n        value: 259200000,\r\n        binSize: 1,\r\n        unit: 'hour',\r\n      });\r\n    } else if (difference < this.selectTime[5].value * 5) {\r\n      this.setInterval({\r\n        option: '1w',\r\n        value: 604800000,\r\n        binSize: 6,\r\n        unit: 'hour',\r\n      });\r\n    } else {\r\n      //cambiar intervalo para mostrar mas puntos en el grafico, usar la version de cada 6 horas para sumar x4 los puntos a graficar\r\n      this.setInterval({\r\n        option: '1m',\r\n        value: 2419200000,\r\n        binSize: 1,\r\n        unit: 'day',\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleIsOpen() {\r\n    this.isOpen = !this.isOpen;\r\n    console.log('is open value', this.isOpen);\r\n  }\r\n  changeCurrentValues(chart: any, val: string, datos: any, index?: number) {\r\n    console.log('change current values: ', val);\r\n    console.log('chart: ', chart);\r\n\r\n    var sortedList = this.listVariables;\r\n    sortedList = sortedList\r\n      .map((item: { _id: any }) => {\r\n        const item2 = datos.find((i2: { _id: any }) => i2._id === item._id);\r\n        return item2;\r\n      })\r\n      .filter((e) => {\r\n        return e !== undefined;\r\n      });\r\n    console.log('change current values sorted list: ', sortedList);\r\n    if (datos.length > 0) {\r\n      switch (val) {\r\n        case 'max':\r\n          for (let i = 0; i < sortedList.length; i++) {\r\n            chart.data.datasets[i].data = sortedList[i]?.info\r\n              .sort(\r\n                (objA: any, objB: any) =>\r\n                  Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n              )\r\n              .map(\r\n                (x: any) =>\r\n                  (this.dato = {\r\n                    y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                    x: new Date(x.max.fecha_lectura).getTime(),\r\n                  })\r\n              );\r\n            chart.update();\r\n\r\n            if (i == sortedList.length - 1) {\r\n              this.spinnerService.detenerSpinner('grafico');\r\n              console.log('sorted list: ', sortedList);\r\n\r\n              chart.update();\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'min':\r\n          for (let i = 0; i < sortedList.length; i++) {\r\n            chart.data.datasets[i].data = sortedList[i]?.info\r\n              .sort(\r\n                (objA: any, objB: any) =>\r\n                  Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n              )\r\n              .map(\r\n                (x: any) =>\r\n                  (this.dato = {\r\n                    y: parseFloat(x.min.valor_lectura.toFixed(2)),\r\n                    x: new Date(x.min.fecha_lectura).getTime(),\r\n                  })\r\n              );\r\n            chart.update();\r\n\r\n            if (i == sortedList.length - 1) {\r\n              this.spinnerService.detenerSpinner('grafico');\r\n              console.log('sorted list: ', sortedList);\r\n\r\n              chart.update();\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'avg':\r\n          const hasSinFiltro = this.listVariables.some(\r\n            (x) => x.id_trigger.nombre === 'sin-filtro'\r\n          );\r\n          if (hasSinFiltro) {\r\n            this.authService.openDialogListarDatos();\r\n          }\r\n          for (let i = 0; i < sortedList.length; i++) {\r\n            chart.data.datasets[i].data = sortedList[i]?.info\r\n              .sort(\r\n                (objA: any, objB: any) =>\r\n                  Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n              )\r\n              .map(\r\n                (x: any) =>\r\n                  (this.dato = {\r\n                    y: parseFloat(x.avg.toFixed(2)),\r\n                    x: new Date(x.date).getTime(),\r\n                  })\r\n              );\r\n            chart.update();\r\n\r\n            if (i == sortedList.length - 1) {\r\n              this.spinnerService.detenerSpinner(`grafico${index}`);\r\n              console.log('sorted list: ', sortedList);\r\n\r\n              chart.update();\r\n            }\r\n          }\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      chart.data.datasets[0].data = [];\r\n      chart.update();\r\n      console.log('no hay datos');\r\n    }\r\n  }\r\n\r\n  getValuesByInterval() {\r\n    const currentDateObj = new Date();\r\n    const final = this.range.value.end._d\r\n      ? this.range.value.end._d?.getTime()\r\n      : currentDateObj.getTime();\r\n    const millis = this.selectedTime.value;\r\n    const inicio = this.range.value.end._d\r\n      ? this.range.value.start._d?.getTime()\r\n      : final - millis;\r\n    console.log(`get values interval inicio: ${inicio}, final: ${final}`);\r\n    this.spinnerService.llamarSpinner('grafico');\r\n    this._httpService\r\n      .getInterval(\r\n        inicio,\r\n        final,\r\n        this.selectedInterval.unit,\r\n        this.selectedInterval.binSize\r\n      )\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      )\r\n      .subscribe((data) => {\r\n        this.listDatos = data['datos'];\r\n        console.log('getInterval: ', data);\r\n\r\n        this.spinnerService.detenerSpinner('grafico');\r\n\r\n        this.changeCurrentValues(\r\n          this.chart,\r\n          this.selectedValue,\r\n          this.listDatos\r\n        );\r\n      });\r\n  }\r\n  setTime(time: any) {\r\n    this.rangeSub = [];\r\n    this.selectedTime = time;\r\n  }\r\n  setInterval(interval: any) {\r\n    this.setTime(interval.value);\r\n    this.selectedInterval = interval;\r\n  }\r\n  setValue(value: any) {\r\n    this.selectedValue = value;\r\n    this.changeCurrentValues(this.chart, this.selectedValue, this.listDatos);\r\n  }\r\n}\r\n","<div class=\"grid grid-flow-row grid-cols-1 sm:grid-cols-1 p-3 fondo\">\r\n  <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-menu [hasBackdrop]=\"true\" #menu=\"matMenu\" class=\"menu\">\r\n        <div\r\n          class=\"grid grid-cols-2 grid-flow-row sm:grid-cols-2 grid-row-2 gap-4 m-3\"\r\n          [formGroup]=\"range\"\r\n          (click)=\"$event.stopPropagation()\"\r\n        >\r\n          <div>\r\n            <h2 class=\"subtitulo\">Desde</h2>\r\n            <div class=\"c-input px-2\">\r\n              <input\r\n                [matDatepicker]=\"startpicker\"\r\n                formControlName=\"start\"\r\n                class=\"input-field\"\r\n                type=\"date\"\r\n              />\r\n              <mat-datepicker-toggle [for]=\"startpicker\">\r\n                <mat-icon\r\n                  svgIcon=\"calendario\"\r\n                  class=\"calendario\"\r\n                  matDatepickerToggleIcon\r\n                  iconPositionEnd\r\n                ></mat-icon>\r\n              </mat-datepicker-toggle>\r\n              <mat-datepicker #startpicker></mat-datepicker>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h2 class=\"subtitulo\">Hasta</h2>\r\n            <div class=\"c-input px-3\">\r\n              <input\r\n                formControlName=\"end\"\r\n                [matDatepicker]=\"endpicker\"\r\n                class=\"input-field\"\r\n                type=\"date\"\r\n                (dateChange)=\"[setInicio_final(), getValuesByInterval()]\"\r\n              />\r\n              <mat-datepicker-toggle [for]=\"endpicker\">\r\n                <mat-icon\r\n                  svgIcon=\"calendario\"\r\n                  class=\"calendario\"\r\n                  matDatepickerToggleIcon\r\n                  iconPositionEnd\r\n                ></mat-icon>\r\n              </mat-datepicker-toggle>\r\n              <mat-datepicker #endpicker></mat-datepicker>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-menu>\r\n      <mat-card-header\r\n        [formGroup]=\"interval\"\r\n        class=\"grid grid-cols-1 sm:grid-cols-2\"\r\n      >\r\n        <mat-card-title>\r\n          <h2 class=\"titulo\">Todas Las variables</h2>\r\n        </mat-card-title>\r\n        <div class=\"flex flex-row justify-end\">\r\n          <div class=\"d-input px-3\">\r\n            <select\r\n              class=\"input-field\"\r\n              #selectMedida\r\n              formControlName=\"medida\"\r\n              (change)=\"[setValue(selectMedida.value)]\"\r\n            >\r\n              <option\r\n                *ngFor=\"let valor of selectValue\"\r\n                value=\"{{ valor.value }}\"\r\n              >\r\n                {{ valor.option }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"pl-5\">\r\n            <mat-button-toggle-group>\r\n              <mat-button-toggle\r\n                *ngFor=\"let time of selectTime\"\r\n                [value]=\"time\"\r\n                (click)=\"[setInterval(time), getValuesByInterval()]\"\r\n              >\r\n                {{ time.option }}\r\n              </mat-button-toggle>\r\n              <mat-button-toggle [matMenuTriggerFor]=\"menu\">\r\n                <mat-icon\r\n                  svgIcon=\"calendario\"\r\n                  class=\"calendario\"\r\n                  iconPositionEnd\r\n                ></mat-icon>\r\n              </mat-button-toggle>\r\n            </mat-button-toggle-group>\r\n          </div>\r\n        </div>\r\n\r\n        <mat-menu #menuTimeout=\"matMenu\">\r\n          <button mat-menu-item *ngFor=\"let timeOut of selectTimeOut\">\r\n            {{ timeOut.option }}\r\n          </button>\r\n        </mat-menu>\r\n      </mat-card-header>\r\n      <mat-card-content *ngIf=\"chart.data.datasets.length != 0\">\r\n        <canvas id=\"myChart\"></canvas>\r\n        <ngx-spinner\r\n          bdColor=\"rgba(51,51,51,0.8)\"\r\n          size=\"medium\"\r\n          color=\"#fff\"\r\n          type=\"ball-spin-clockwise\"\r\n          [fullScreen]=\"false\"\r\n          name=\"grafico\"\r\n        >\r\n        </ngx-spinner>\r\n      </mat-card-content>\r\n      <mat-card-content #elseBlock>\r\n        <div>\r\n          <h1>No hay datos</h1>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  class=\"grid grid-flow-row grid-cols-1 justify-end sm:grid-cols-2 p-3 fondo\"\r\n>\r\n  <div class=\"p-3\" *ngFor=\"let chart of chartList; index as i\">\r\n    <mat-card>\r\n      <app-toolbar\r\n        [value]=\"chart\"\r\n        [selectValue]=\"selectValue\"\r\n        [selectTime]=\"selectTime\"\r\n        [indice]=\"i\"\r\n      >\r\n      </app-toolbar>\r\n      <mat-card-content>\r\n        <canvas id=\"{{ chart.titulo }}\"></canvas>\r\n        <ngx-spinner\r\n          bdColor=\"rgba(51,51,51,0.8)\"\r\n          size=\"medium\"\r\n          color=\"#fff\"\r\n          type=\"ball-spin-clockwise\"\r\n          [fullScreen]=\"false\"\r\n          name=\"grafico{{ i }}\"\r\n        >\r\n        </ngx-spinner>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"p-3\">\r\n    <app-tabla></app-tabla>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport {\r\n  checkNumber,\r\n  checkSpecial,\r\n  checkUpperCase,\r\n} from 'src/app/service/validator';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  registerForm: any;\r\n  pass: string = '';\r\n  show = false;\r\n  mobile = false;\r\n\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.pass = 'password';\r\n    if (window.screen.width < 500) {\r\n      this.mobile = true;\r\n    }\r\n    this.registerForm = this.builder.group({\r\n      username: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n      ]),\r\n      name: new FormControl('', [Validators.required, Validators.minLength(5)]),\r\n      password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n          checkUpperCase(),\r\n          checkNumber(),\r\n          checkSpecial(),\r\n        ],\r\n      ],\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      role: this.builder.control('64f1f60e918724a5f931d909'),\r\n      isActive: this.builder.control('inactive'),\r\n    });\r\n  }\r\n\r\n  showDiv = {\r\n    Login: true,\r\n    Register: false,\r\n  };\r\n\r\n  loginForm = this.builder.group({\r\n    username: this.builder.control('', Validators.required),\r\n    password: this.builder.control('', Validators.required),\r\n  });\r\n\r\n  userData: any;\r\n\r\n  proceedLogin() {\r\n    this.service.LogIn(this.loginForm.value).subscribe((res) => {\r\n      this.userData = res;\r\n      console.log(this.userData.status);\r\n      console.log(this.userData);\r\n      switch (this.userData.status) {\r\n        case 200:\r\n          if (this.userData['datos'].isActive === 'active') {\r\n            this.toastr.success('acceso concedido', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service.storeUserData(\r\n              this.userData.token,\r\n              this.userData['datos'],\r\n              this.userData.rtoken\r\n            );\r\n          } else {\r\n            this.toastr.error(\r\n              'Contactar con administrador',\r\n              'usuario inactivo'\r\n            );\r\n          }\r\n          break;\r\n        case 403:\r\n          this.service.openDialogLogin('login');\r\n          break;\r\n\r\n        default:\r\n          this.service.openDialogLogin('login');\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  proceedRegistration() {\r\n    if (this.registerForm.valid) {\r\n      console.log(this.registerForm.value);\r\n      this.service.Proceedregister(this.registerForm.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else if (res.status == 200) {\r\n            this.toastr.success(\r\n              'Solicitar acceso con el administrador ',\r\n              'Registro exitoso'\r\n            );\r\n            this.mostrarLogin();\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.toastr.warning('error', error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  mostrarLogin() {\r\n    this.showDiv.Login = true;\r\n    this.showDiv.Register = false;\r\n    this.show = false;\r\n    this.pass = 'password';\r\n  }\r\n  mostrarRegistro() {\r\n    this.showDiv.Register = true;\r\n    this.showDiv.Login = false;\r\n    this.show = false;\r\n    this.pass = 'password';\r\n  }\r\n\r\n  get password() {\r\n    return this.registerForm.get('password')!;\r\n  }\r\n\r\n  showPass() {\r\n    if (this.pass === 'password') {\r\n      this.pass = 'text';\r\n      this.show = true;\r\n    } else {\r\n      this.pass = 'password';\r\n      this.show = false;\r\n    }\r\n  }\r\n  openForgotPass() {\r\n    this.service.openDialogLogin('pass');\r\n  }\r\n}\r\n","<div class=\"grid grid-flow-row-dense grid-cols-1 sm:grid-cols-2\">\r\n  <div *ngIf=\"!mobile\" class=\"row-span-1 col-span-1\">\r\n    <img src=\"assets/g850.png\" alt=\"\" class=\"login\" />\r\n  </div>\r\n\r\n  <div class=\"row-span-1 col-span-1\">\r\n    <div class=\"carta flex flex-col col-span-1\" *ngIf=\"showDiv.Login\">\r\n      <div class=\"logo\">\r\n        <img\r\n          src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n          alt=\"\"\r\n          class=\"linetec_logo m-5\"\r\n        />\r\n        <h2 class=\"titulo\">Iniciar sesión</h2>\r\n      </div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"loginForm\"\r\n        (ngSubmit)=\"proceedLogin()\"\r\n      >\r\n        <div class=\"flex flex-col\">\r\n          <mat-form-field class=\"m-input\">\r\n            <input matInput placeholder=\"Usuario\" formControlName=\"username\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              [type]=\"pass\"\r\n              matInput\r\n              placeholder=\"Contraseña\"\r\n              formControlName=\"password\"\r\n            />\r\n            <a\r\n              matSuffix\r\n              style=\"cursor: pointer\"\r\n              (click)=\"showPass()\"\r\n              class=\"p-2\"\r\n            >\r\n              <mat-icon>{{ show ? \"visibility\" : \"visibility_off\" }}</mat-icon>\r\n            </a>\r\n          </mat-form-field>\r\n          <div class=\"space-y-[10vh] 2xl:space-y-[40vh]\">\r\n            <button\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !loginForm.value.username || !loginForm.value.password\r\n              \"\r\n              id=\"boton2\"\r\n              class=\"mb-5\"\r\n            >\r\n              Ingresar\r\n            </button>\r\n            <a class=\"link p-3\" (click)=\"openForgotPass()\">\r\n              Olvidé mi contraseña\r\n            </a>\r\n            <a mat-raised-button (click)=\"mostrarRegistro()\" id=\"boton\">\r\n              Registrar Usuario\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"carta col-span-1\" *ngIf=\"showDiv.Register\">\r\n      <div class=\"logo\">\r\n        <img\r\n          src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n          alt=\"\"\r\n          class=\"linetec_logo m-5 p-3\"\r\n        />\r\n        <h2 class=\"titulo\">Registro de usuario</h2>\r\n      </div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"registerForm\"\r\n        (ngSubmit)=\"[proceedRegistration(), registerForm.reset()]\"\r\n      >\r\n        <div class=\"flex flex-col p-5\">\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Nombre de usuario\"\r\n              formControlName=\"username\"\r\n            />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Nombre y apellido\"\r\n              formControlName=\"name\"\r\n            />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input matInput placeholder=\"Email\" formControlName=\"email\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              [type]=\"pass\"\r\n              matInput\r\n              placeholder=\"Contraseña\"\r\n              formControlName=\"password\"\r\n            />\r\n            <a\r\n              matSuffix\r\n              style=\"cursor: pointer\"\r\n              (click)=\"showPass()\"\r\n              class=\"p-2\"\r\n            >\r\n              <mat-icon>{{ show ? \"visibility\" : \"visibility_off\" }}</mat-icon>\r\n            </a>\r\n          </mat-form-field>\r\n          <div class=\"m-input\">\r\n            <h2>REQUISITOS</h2>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                    !password.value || password.errors?.hasUpper\r\n                      ? ''\r\n                      : 'iconFill'\r\n                  \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n\r\n              <p\r\n                [ngClass]=\"\r\n                  !password.value || password.errors?.hasUpper\r\n                    ? ''\r\n                    : 'requisitos'\r\n                \"\r\n              >\r\n                Al menos una mayúscula\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"!password.value || password.errors?.['minlength'] ?  '' : 'iconFill'\"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n\r\n              <p\r\n                [ngClass]=\"!password.value || password.errors?.['minlength'] ?  '' : 'requisitos'\"\r\n              >\r\n                8 caracteres mínimo\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                    !password.value || password.errors?.hasSp ? '' : 'iconFill'\r\n                  \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n              <p\r\n                [ngClass]=\"\r\n                  !password.value || password.errors?.hasSp ? '' : 'requisitos'\r\n                \"\r\n              >\r\n                Al menos un caracter especial\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                    !password.value || password.errors?.hasNumber\r\n                      ? ''\r\n                      : 'iconFill'\r\n                  \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n              <p\r\n                [ngClass]=\"\r\n                  !password.value || password.errors?.hasNumber\r\n                    ? ''\r\n                    : 'requisitos'\r\n                \"\r\n              >\r\n                Al menos un número\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"flex flex-col justify-between space-y-6\">\r\n            <button\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                password.errors ||\r\n                !registerForm.value.username ||\r\n                !registerForm.value.password ||\r\n                !registerForm.value.name ||\r\n                !registerForm.value.email\r\n              \"\r\n              id=\"boton2\"\r\n            >\r\n              Enviar\r\n            </button>\r\n\r\n            <a (click)=\"mostrarLogin()\" id=\"volver\"> Volver </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.minLength(5)])\r\n    ),\r\n    name: this.builder.control('', Validators.required),\r\n    password: this.builder.control(\r\n      '',\r\n      Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(\r\n          '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{8,}'\r\n        ),\r\n      ])\r\n    ),\r\n    email: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.email])\r\n    ),\r\n    role: this.builder.control('64f1f60e918724a5f931d909'),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  proceedRegistration() {\r\n    if (this.registerform.valid) {\r\n      console.log(this.registerform.value);\r\n      this.service.Proceedregister(this.registerform.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else if (res.status == 200) {\r\n            this.toastr.success(\r\n              'Solicitar acceso con el administrador ',\r\n              'Registro exitoso'\r\n            );\r\n            this.router.navigate(['login']);\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.toastr.warning('error', error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Registro</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"proceedRegistration()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre de usuario</mat-label>\r\n          <input matInput formControlName=\"username\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input matInput formControlName=\"name\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Contraseña</mat-label>\r\n          <input type=\"password\" matInput formControlName=\"password\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput formControlName=\"email\" />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Enviar</button>\r\n        <a routerLink=\"/login\" mat-raised-button color=\"accent\"\r\n          >Volver a pantalla de ingreso</a\r\n        >\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Subscription } from 'rxjs';\r\nimport { CSVDato } from 'src/app/models/datos.model';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-tabla',\r\n  templateUrl: './tabla.component.html',\r\n  styleUrls: ['./tabla.component.css'],\r\n})\r\nexport class TablaComponent implements OnInit {\r\n  constructor(\r\n    private service: HttpService,\r\n    private spinnerService: SpinnerService,\r\n    private builder: FormBuilder\r\n  ) {}\r\n  tabla: any = {\r\n    titulo: 'Alerta de valores excedidos',\r\n  };\r\n  table: any = {\r\n    inicio: '',\r\n    final: '',\r\n    id_variable: '',\r\n  };\r\n  selectValue: any = null;\r\n  i: any = null;\r\n  exceedList: any = [];\r\n  dataSource: any;\r\n  listVariables: any = [];\r\n  notExceedList: any = [];\r\n  subscription!: Subscription;\r\n  csv: any = '';\r\n  valor: any;\r\n  range: any = [];\r\n  selectTime: any = [\r\n    {\r\n      option: '1h',\r\n      value: 3600000,\r\n      binSize: 1,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '3h',\r\n      value: 10800000,\r\n      binSize: 10,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '12h',\r\n      value: 43200000,\r\n      binSize: 5,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '1d',\r\n      value: 86400000,\r\n      binSize: 15,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '3d',\r\n      value: 259200000,\r\n      binSize: 1,\r\n      unit: 'hour',\r\n    },\r\n    {\r\n      option: '1w',\r\n      value: 604800000,\r\n      binSize: 6,\r\n      unit: 'hour',\r\n    },\r\n  ];\r\n  id_variable!: string;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  ngOnInit(): void {\r\n    this.getVariables();\r\n    this.valor = this.builder.group({\r\n      threshold: new FormControl<number>(25),\r\n    });\r\n\r\n    this.subscription = this.service.listaDatosInRange.subscribe((message) => {\r\n      this.exceedList = message;\r\n      console.log('lista excedida stream', this.exceedList);\r\n      // console.log('prueba filter: ', this.removeDuplicates(this.exceedList));\r\n      this.dataSource = new MatTableDataSource(this.exceedList);\r\n      if (this.exceedList.length != 0) {\r\n        this.spinnerService.detenerSpinner('tabla');\r\n      }\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n    this.subscription = this.service.rangeInfo.subscribe((message: any) => {\r\n      console.log('inicio', message[0], 'final', message[1]);\r\n      this.range = message;\r\n      this.getInRangeTabla(this.table);\r\n    });\r\n  }\r\n\r\n  removeDuplicates(data: any) {\r\n    const ids = data.map(\r\n      ({ cTime_stamp }: { cTime_stamp: any }) => cTime_stamp\r\n    );\r\n    const filtered = data.filter(\r\n      ({ cTime_stamp }: { cTime_stamp: any }, index: number) =>\r\n        ids.includes(cTime_stamp, index + 1)\r\n    );\r\n\r\n    return filtered;\r\n  }\r\n  downloadCSV() {\r\n    let csvList: CSVDato[];\r\n    csvList = this.exceedList.map((e: any) => ({\r\n      valor_lectura: e.valor_lectura,\r\n      tiempo_inicio: e.time_stamp,\r\n      tiempo_fin: e.cTime_stamp,\r\n      diferencia: e.time,\r\n    }));\r\n\r\n    for (let row = 0; row < csvList.length; row++) {\r\n      let keysAmount = Object.keys(csvList[row]).length;\r\n      let keysCounter = 0;\r\n\r\n      // If this is the first row, generate the headings\r\n      if (row === 0) {\r\n        // Loop each property of the object\r\n        for (let key in csvList[row]) {\r\n          // This is to not add a comma at the last cell\r\n          // The '\\n' adds a new line\r\n          this.csv += key + (keysCounter + 1 < keysAmount ? ',' : '\\r\\n');\r\n          keysCounter++;\r\n        }\r\n      } else {\r\n        for (let key in csvList[row]) {\r\n          this.csv +=\r\n            csvList[row][key] + (keysCounter + 1 < keysAmount ? ',' : '\\r\\n');\r\n          keysCounter++;\r\n        }\r\n      }\r\n\r\n      keysCounter = 0;\r\n    }\r\n    let link = document.createElement('a');\r\n    link.id = 'download-csv';\r\n    link.setAttribute(\r\n      'href',\r\n      'data:text/plain;charset=utf-8,' + encodeURIComponent(this.csv)\r\n    );\r\n    link.setAttribute('download', 'alertas_data.csv');\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  }\r\n\r\n  displayedColumns: string[] = [\r\n    'exceed_value',\r\n    'tiempo_inicio',\r\n    'tiempo_fin',\r\n    'diferencia',\r\n  ];\r\n\r\n  getInRangeTabla(tabla: any) {\r\n    this.spinnerService.llamarSpinner('tabla');\r\n    var inicio: any = this.range[0];\r\n    var final: any = this.range[1];\r\n    this.service\r\n      .getAllInRange(tabla.id_variable, inicio, final)\r\n      .subscribe((data) => {\r\n        this.exceedList = data['datos'].filter((x: any) => {\r\n          return x.valor_lectura > tabla.threshold;\r\n        });\r\n        this.notExceedList = data['datos'].filter((n: any) => {\r\n          return n.valor_lectura < tabla.threshold;\r\n        });\r\n        var notDuplicatedExceedList = this.removeDuplicates(this.exceedList);\r\n        var notDuplicatedNotExceedList = this.removeDuplicates(\r\n          this.notExceedList\r\n        );\r\n        console.log(\r\n          'exceed: ',\r\n          notDuplicatedExceedList,\r\n          'not exceed: ',\r\n          notDuplicatedNotExceedList\r\n        );\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('tabla');\r\n          this.service.stream_DatosInRange([]);\r\n        }\r\n        this.spinnerService.detenerSpinner('tabla');\r\n        var result = this.notExceedListPusher(\r\n          notDuplicatedNotExceedList,\r\n          notDuplicatedExceedList\r\n        );\r\n        this.enviarDatos(result[0], result[1]);\r\n      });\r\n  }\r\n  formatTime(notExceed: number, exceed: number) {\r\n    var seconds = (notExceed - exceed) / 1000;\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const remainingSeconds = seconds % 60;\r\n\r\n    const formattedHours = String(hours).padStart(2, '0');\r\n    const formattedMinutes = String(minutes).padStart(2, '0');\r\n    const formattedSeconds = String(remainingSeconds).padStart(2, '0');\r\n\r\n    return `${formattedHours}H ${formattedMinutes}M ${formattedSeconds}S`;\r\n  }\r\n  formatDate(data: string) {\r\n    const date = new Date(data);\r\n    return (\r\n      [\r\n        date.getFullYear(),\r\n        this.padTo2Digits(date.getMonth() + 1),\r\n        this.padTo2Digits(date.getDate()),\r\n      ].join('-') +\r\n      ' ' +\r\n      [\r\n        this.padTo2Digits(date.getHours()),\r\n        this.padTo2Digits(date.getMinutes()),\r\n        this.padTo2Digits(date.getSeconds()),\r\n      ].join(':')\r\n    );\r\n  }\r\n  padTo2Digits(num: number) {\r\n    return num.toString().padStart(2, '0');\r\n  }\r\n  getVariables() {\r\n    this.service.getVariables().subscribe((data) => {\r\n      this.listVariables = data;\r\n      this.id_variable = this.listVariables[0]._id;\r\n    });\r\n  }\r\n  variableSelected(value: Event) {\r\n    this.id_variable = (value.target as HTMLSelectElement).value;\r\n    console.log('valor variable:', this.id_variable);\r\n  }\r\n  enviarDatos(notExceedList: any, ExceedList: any) {\r\n    console.log(\r\n      'exceed: ',\r\n      ExceedList.length,\r\n      'not exceed: ',\r\n      notExceedList.length\r\n    );\r\n    ExceedList.map((e: any, index: number) => {\r\n      e.time = this.formatTime(\r\n        new Date(\r\n          notExceedList[\r\n            index < notExceedList.length ? index : notExceedList.length - 1\r\n          ].time_stamp\r\n        ).getTime(),\r\n        new Date(e.time_stamp).getTime()\r\n      );\r\n      e.cTime_stamp = this.formatDate(\r\n        notExceedList[\r\n          index < notExceedList.length ? index : notExceedList.length - 1\r\n        ].time_stamp\r\n      );\r\n      e.time_stamp = this.formatDate(e.time_stamp);\r\n    });\r\n    this.service.stream_DatosInRange(ExceedList);\r\n  }\r\n\r\n  notExceedListPusher(notDuplicatedNotExceedList: any, exceedList: any) {\r\n    const notExceedList = [];\r\n    const ExceedList = [];\r\n    const resultado: any = [];\r\n    let j = 0;\r\n\r\n    //no funciona bien si el not exceeded list es mas grande hay que arreglarlo\r\n\r\n    for (let i = 0; i < exceedList.length; ) {\r\n      // console.log('i es: ', i);\r\n      if (\r\n        new Date(notDuplicatedNotExceedList[j].time_stamp).getTime() >\r\n        new Date(exceedList[i].time_stamp).getTime()\r\n      ) {\r\n        // console.log(\r\n        //   'exceed: ',\r\n        //   exceedList[i],\r\n        //   'not exceed: ',\r\n        //   notDuplicatedNotExceedList[j]\r\n        // );\r\n        notExceedList.push(notDuplicatedNotExceedList[j]);\r\n        ExceedList.push(exceedList[i]);\r\n        i++;\r\n      }\r\n      if (\r\n        j == notDuplicatedNotExceedList.length - 1 ||\r\n        i == exceedList.length - 1\r\n      ) {\r\n        resultado.push(notExceedList);\r\n        resultado.push(ExceedList);\r\n        return resultado;\r\n      } else if (\r\n        new Date(notDuplicatedNotExceedList[j].time_stamp).getTime() <\r\n        new Date(exceedList[i].time_stamp).getTime()\r\n      ) {\r\n        // console.log(\r\n        //   'exceed time stamp: ',\r\n        //   exceedList[i].time_stamp,\r\n        //   'not exceed time stamp: ',\r\n        //   notDuplicatedNotExceedList[j].time_stamp\r\n        // );\r\n        j++;\r\n        // console.log('j es: ', j);\r\n      }\r\n    }\r\n\r\n    return resultado;\r\n  }\r\n}\r\n","<mat-card class=\"carta_tabla\">\r\n  <div>\r\n    <app-toolbar\r\n      [value]=\"tabla\"\r\n      [selectTime]=\"selectTime\"\r\n      [indice]=\"i\"\r\n      [tabla]=\"table\"\r\n    ></app-toolbar>\r\n  </div>\r\n\r\n  <mat-card-content>\r\n    <mat-table matSort [dataSource]=\"dataSource\">\r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"exceed_value\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef>\r\n          Valor Excedido\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.valor_lectura.toFixed(2) }}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"tiempo_inicio\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef>\r\n          Tiempo de inicio\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.time_stamp }}\r\n        </mat-cell>\r\n      </ng-container>\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"tiempo_fin\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef\r\n          >Tiempo de fin</mat-header-cell\r\n        >\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.cTime_stamp }}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"diferencia\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef>\r\n          Diferencia en tiempo\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">{{ element.time }}</mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[5, 10, 20]\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of periodic elements\"\r\n    >\r\n    </mat-paginator>\r\n    <ngx-spinner\r\n      bdColor=\"rgba(51,51,51,0.8)\"\r\n      size=\"medium\"\r\n      color=\"#fff\"\r\n      type=\"ball-spin-clockwise\"\r\n      [fullScreen]=\"false\"\r\n      name=\"tabla\"\r\n    >\r\n    </ngx-spinner>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { Subscription, catchError } from 'rxjs';\r\nimport { ChartGeneratorService } from 'src/app/service/chart-generator.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css'],\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n  subscription!: Subscription;\r\n  chartList: any = [];\r\n  interval: any = [];\r\n  range!: any;\r\n  rangeSub!: any;\r\n  listVariables: any;\r\n  valor: any;\r\n  selectTime2: any = [\r\n    {\r\n      option: '1h',\r\n      value: 3600000,\r\n      binSize: 1,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '3h',\r\n      value: 10800000,\r\n      binSize: 10,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '12h',\r\n      value: 43200000,\r\n      binSize: 5,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '1d',\r\n      value: 86400000,\r\n      binSize: 15,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '3d',\r\n      value: 259200000,\r\n      binSize: 1,\r\n      unit: 'hour',\r\n    },\r\n    {\r\n      option: '1w',\r\n      value: 604800000,\r\n      binSize: 6,\r\n      unit: 'hour',\r\n    },\r\n    {\r\n      option: '1m',\r\n      binSize: 1,\r\n      unit: 'day',\r\n      value: 2419200000,\r\n    },\r\n  ];\r\n\r\n  @Input() value: any;\r\n  @Input() selectValue: any;\r\n  @Input() selectTime: any;\r\n  @Input() indice: any;\r\n  @Input() tabla: any;\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private spinnerService: SpinnerService,\r\n    private builder: FormBuilder,\r\n    private chartService: ChartGeneratorService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.range = this.builder.group({\r\n      start: new FormControl<Date | null>(null),\r\n      end: new FormControl<Date | null>(null),\r\n      granularidad: new FormControl<string>('day'),\r\n    });\r\n\r\n    this.interval = this.builder.group({\r\n      medida: new FormControl<String | null>('min'),\r\n      threshold: new FormControl<number>(25),\r\n    });\r\n    if (this.tabla) {\r\n      this.getVariables();\r\n    }\r\n    this.subscription = this.chartService.listaDeCharts.subscribe((data) => {\r\n      this.chartList = data;\r\n      console.log('toolbar chartList', this.chartList);\r\n      for (let i = 0; i < this.chartList.length; i++) {\r\n        this.setSelectTimeInterval(\r\n          {\r\n            option: '1h',\r\n            value: 3600000,\r\n            binSize: 1,\r\n            unit: 'second',\r\n          },\r\n          i\r\n        );\r\n      }\r\n    });\r\n    this.subscription = this.chartService.rangeInfo.subscribe(\r\n      (message: any) => {\r\n        this.rangeSub = message;\r\n      }\r\n    );\r\n  }\r\n\r\n  setValue(value: any, i: number) {\r\n    console.log('value toolbar:', value, 'indice: ', i);\r\n  }\r\n  setSelectValue(sValue: any, i: number) {\r\n    this.chartList[i].sValue = sValue;\r\n    var data = this.chartList[i];\r\n    data.value = sValue;\r\n    data.index = i;\r\n\r\n    this.chartService.streamChartIntervalInfo(data);\r\n    console.log('select value: ', this.chartList[i], 'indice: ', i);\r\n  }\r\n  setSelectTimeInterval(sTime: any, i: number, tabla?: any) {\r\n    this.chartList[i].inicio = null;\r\n    this.chartList[i].final = null;\r\n    tabla\r\n      ? (tabla.sTime = sTime.value)\r\n      : (this.chartList[i].sTime = sTime.value);\r\n    tabla ? (tabla.sInterval = sTime) : (this.chartList[i].sInterval = sTime);\r\n\r\n    console.log(\r\n      'select time: ',\r\n      tabla ? tabla : this.chartList[i],\r\n      'indice: ',\r\n      i\r\n    );\r\n  }\r\n\r\n  setInicioFinal(i: number, tabla?: any) {\r\n    tabla\r\n      ? (tabla.inicio = this.range.value.start._d?.getTime().toString())\r\n      : (this.chartList[i].inicio = this.range.value.start._d\r\n          ?.getTime()\r\n          .toString());\r\n    tabla\r\n      ? (tabla.final = this.range.value.end._d?.getTime().toString())\r\n      : (this.chartList[i].final = this.range.value.end._d\r\n          ?.getTime()\r\n          .toString());\r\n\r\n    console.log(\r\n      'inicio: ',\r\n      tabla ? tabla.inicio : this.chartList[i].inicio,\r\n      'final ',\r\n      tabla ? tabla.final : this.chartList[i].final,\r\n      'indice: ',\r\n      i\r\n    );\r\n    var difference =\r\n      parseInt(tabla ? tabla.final : this.chartList[i].final) -\r\n      parseInt(tabla ? tabla.inicio : this.chartList[i].inicio);\r\n    if (difference < this.selectTime[4].value) {\r\n      tabla\r\n        ? (tabla.sTime = this.selectTime2[3].value)\r\n        : (this.chartList[i].sTime = this.selectTime2[3].value);\r\n      tabla\r\n        ? (tabla.sInterval = this.selectTime2[3])\r\n        : (this.chartList[i].sInterval = this.selectTime2[3]);\r\n    } else if (difference < this.selectTime[5].value) {\r\n      tabla\r\n        ? (tabla.sTime = this.selectTime2[4].value)\r\n        : (this.chartList[i].sTime = this.selectTime2[4].value);\r\n      tabla\r\n        ? (tabla.sInterval = this.selectTime2[4])\r\n        : (this.chartList[i].sInterval = this.selectTime2[4]);\r\n    } else if (difference < this.selectTime[5].value * 3) {\r\n      tabla\r\n        ? (tabla.sTime = this.selectTime2[5].value)\r\n        : (this.chartList[i].sTime = this.selectTime2[5].value);\r\n      tabla\r\n        ? (tabla.sInterval = this.selectTime2[5])\r\n        : (this.chartList[i].sInterval = this.selectTime2[5]);\r\n    } else {\r\n      tabla\r\n        ? (tabla.sTime = this.selectTime2[6].value)\r\n        : (this.chartList[i].sTime = this.selectTime2[6].value);\r\n      tabla\r\n        ? (tabla.sInterval = this.selectTime2[6])\r\n        : (this.chartList[i].sInterval = this.selectTime2[6]);\r\n    }\r\n  }\r\n\r\n  getValuesByInterval(i: number, tabla?: any) {\r\n    if (tabla) {\r\n      this._httpService.set_Inicio_Final(tabla.inicio, tabla.final);\r\n      return console.log(\r\n        `tabla: ${JSON.stringify(tabla)}, inicio: ${tabla.inicio}, final: ${\r\n          tabla.final\r\n        }`\r\n      );\r\n    }\r\n    const currentDateObj = new Date();\r\n    const final = this.chartList[i].final\r\n      ? this.chartList[i].final\r\n      : currentDateObj.getTime();\r\n    const millis = this.chartList[i].sTime;\r\n    const inicio = this.chartList[i].final\r\n      ? this.chartList[i].inicio\r\n      : final - millis;\r\n    console.log('inicio: ', inicio, 'final: ', final);\r\n\r\n    this.spinnerService.llamarSpinner(`grafico${i}`);\r\n    this._httpService\r\n      .getInterval(\r\n        inicio,\r\n        final,\r\n        this.chartList[i].sInterval.unit,\r\n        this.chartList[i].sInterval.binSize\r\n      )\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      )\r\n      .subscribe((data) => {\r\n        data.index = i;\r\n        data.value = this.interval.value.medida;\r\n        const datosFilter = data.datos.filter((e: any) => {\r\n          return e._id == this.chartList[i].variable;\r\n        });\r\n        data.datos = datosFilter;\r\n        console.log(\r\n          'filter data: ',\r\n          data,\r\n          'medida: ',\r\n          this.interval.value.medida\r\n        );\r\n        this.chartList[i].datos = data.datos;\r\n        this.chartService.streamChartIntervalInfo(data);\r\n        this.spinnerService.detenerSpinner(`grafico${i}`);\r\n      });\r\n  }\r\n\r\n  getVariables() {\r\n    this._httpService.getVariables().subscribe((data) => {\r\n      this.listVariables = data;\r\n      this.tabla.id_variable = this.listVariables[0]._id;\r\n      this.tabla.threshold = this.interval.value.threshold;\r\n      console.log('tabla', this.tabla);\r\n    });\r\n  }\r\n\r\n  variableSelected(variable: any) {\r\n    this.tabla.id_variable = variable;\r\n    console.log('variable selected: ', this.tabla);\r\n  }\r\n\r\n  setThreshold() {\r\n    console.log('threshold', this.interval.value.threshold);\r\n    this.tabla.threshold = this.interval.value.threshold;\r\n  }\r\n}\r\n","<mat-menu [hasBackdrop]=\"true\" #menu=\"matMenu\" class=\"menu\">\r\n  <div\r\n    class=\"grid grid-cols-2 grid-flow-row sm:grid-cols-2 grid-row-2 gap-4 m-3\"\r\n    [formGroup]=\"range\"\r\n    (click)=\"$event.stopPropagation()\"\r\n  >\r\n    <div>\r\n      <h2 class=\"subtitulo\">Desde</h2>\r\n      <div class=\"c-input\">\r\n        <mat-datepicker-toggle [for]=\"startpicker\">\r\n          <mat-icon\r\n            svgIcon=\"calendario\"\r\n            class=\"calendario\"\r\n            matDatepickerToggleIcon\r\n          ></mat-icon>\r\n        </mat-datepicker-toggle>\r\n        <input\r\n          [matDatepicker]=\"startpicker\"\r\n          formControlName=\"start\"\r\n          class=\"input-field\"\r\n          type=\"date\"\r\n        />\r\n      </div>\r\n      <mat-datepicker #startpicker></mat-datepicker>\r\n    </div>\r\n    <div>\r\n      <h2 class=\"subtitulo\">Hasta</h2>\r\n      <div class=\"c-input\">\r\n        <mat-datepicker-toggle [for]=\"endpicker\">\r\n          <mat-icon\r\n            svgIcon=\"calendario\"\r\n            class=\"calendario\"\r\n            matDatepickerToggleIcon\r\n          ></mat-icon>\r\n        </mat-datepicker-toggle>\r\n        <input\r\n          formControlName=\"end\"\r\n          [matDatepicker]=\"endpicker\"\r\n          class=\"input-field\"\r\n          type=\"date\"\r\n          (dateChange)=\"\r\n            [setInicioFinal(indice, tabla), getValuesByInterval(indice, tabla)]\r\n          \"\r\n        />\r\n      </div>\r\n      <mat-datepicker #endpicker></mat-datepicker>\r\n    </div>\r\n    <div class=\"col-span-2 row-start-2\"></div>\r\n  </div>\r\n</mat-menu>\r\n<mat-card-header\r\n  [formGroup]=\"interval\"\r\n  class=\"grid grid-cols-1 grid-rows-3 sm:grid-cols-1 grid-rows-2\"\r\n>\r\n  <h2 class=\"titulo col-span-2 row-start-1\">\r\n    {{ value.titulo }}\r\n  </h2>\r\n  <mat-icon\r\n    *ngIf=\"!tabla\"\r\n    class=\"col-span-1 row-start-1\"\r\n    matTooltip=\"\r\n  Proceso: {{ value.id ? value.id.id_proceso.descripcion : 'no hay proceso' }} \r\n  Maquina: {{ value.id ? value.id.id_maquina.nombre : 'no hay maquina' }}\r\n  Trigger: {{ value.id ? value.id.id_trigger.nombre : 'no hay trigger' }}\r\n  \r\n\"\r\n  >\r\n    info_outlined\r\n  </mat-icon>\r\n  <div class=\"flex flex-row justify-end sm:row-start-2\">\r\n    <div *ngIf=\"!tabla\" class=\"d-input px-3\">\r\n      <select\r\n        class=\"input-field\"\r\n        formControlName=\"medida\"\r\n        #selectMedida\r\n        (change)=\"[setSelectValue(selectMedida.value, indice)]\"\r\n      >\r\n        <option *ngFor=\"let valor of selectValue\" value=\"{{ valor.value }}\">\r\n          {{ valor.option }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div *ngIf=\"tabla\" class=\"d-input px-3 mr-5\">\r\n      <input\r\n        id=\"valor_limite\"\r\n        class=\"input-field\"\r\n        placeholder=\"Elegir valor limite\"\r\n        (change)=\"setThreshold()\"\r\n        formControlName=\"threshold\"\r\n      />\r\n    </div>\r\n\r\n    <div *ngIf=\"tabla\" class=\"d-input px-3\">\r\n      <select\r\n        id=\"select_variable\"\r\n        class=\"input-field\"\r\n        #selectVariable\r\n        (change)=\"variableSelected(selectVariable.value)\"\r\n      >\r\n        <option value=\"null\">Elegir variable</option>\r\n        <option\r\n          *ngFor=\"let variable of listVariables\"\r\n          value=\"{{ variable._id }}\"\r\n        >\r\n          {{ variable.nombre }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div class=\"pl-5\">\r\n      <mat-button-toggle-group>\r\n        <mat-button-toggle\r\n          *ngFor=\"let time of selectTime\"\r\n          [value]=\"time\"\r\n          (click)=\"\r\n            [\r\n              setSelectTimeInterval(time, indice, tabla),\r\n              getValuesByInterval(indice, tabla)\r\n            ]\r\n          \"\r\n        >\r\n          {{ time.option }}\r\n        </mat-button-toggle>\r\n        <mat-button-toggle [matMenuTriggerFor]=\"menu\">\r\n          <mat-icon\r\n            svgIcon=\"calendario\"\r\n            class=\"calendario\"\r\n            iconPositionEnd\r\n          ></mat-icon>\r\n        </mat-button-toggle>\r\n      </mat-button-toggle-group>\r\n    </div>\r\n  </div>\r\n</mat-card-header>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-updatepopup',\r\n  templateUrl: './updatepopup.component.html',\r\n  styleUrls: ['./updatepopup.component.css'],\r\n})\r\nexport class UpdatepopupComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private service: AuthService,\r\n    private toastr: ToastrService,\r\n    private dialog: MatDialogRef<UpdatepopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  editData: any;\r\n\r\n  ngOnInit(): void {\r\n    this.service.GetAllRoles().subscribe((res) => {\r\n      console.log('roles', res);\r\n      this.rolelist = res;\r\n    });\r\n    if (this.data.username != null && this.data.username != '') {\r\n      this.service.GetById(this.data.username).subscribe((res) => {\r\n        this.editData = res;\r\n        this.registerform.setValue({\r\n          username: this.editData.username,\r\n          name: this.editData.name,\r\n          password: this.editData.password,\r\n          email: this.editData.email,\r\n          role: this.editData.role,\r\n          isActive: this.editData.isActive,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  rolelist: any;\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(''),\r\n    name: this.builder.control(''),\r\n    password: this.builder.control(''),\r\n    email: this.builder.control(''),\r\n    role: this.builder.control('', Validators.required),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  updateUser() {\r\n    if (this.registerform.valid) {\r\n      this.service\r\n        .UpdateUser(this.registerform.value.username, this.registerform.value)\r\n        .subscribe((res) => {\r\n          this.toastr.success('Updated successfully');\r\n          this.dialog.close();\r\n        });\r\n    } else {\r\n      this.toastr.warning('Please select a role');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Update User</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"updateUser()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Role</mat-label>\r\n          <mat-select formControlName=\"role\">\r\n            <mat-option value=\"\">Select Role </mat-option>\r\n            <mat-option *ngFor=\"let item of rolelist\" [value]=\"item._id\">\r\n              {{ item.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-checkbox formControlName=\"isActive\">Is Active? </mat-checkbox>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Update</button>\r\n        <a mat-dialog-close mat-raised-button color=\"accent\">Close</a>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from 'src/app/forms/variable-form/variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {\r\n  checkNumber,\r\n  checkSpecial,\r\n  checkUpperCase,\r\n} from 'src/app/service/validator';\r\n\r\n@Component({\r\n  selector: 'app-userlisting',\r\n  templateUrl: './userlisting.component.html',\r\n  styleUrls: ['./userlisting.component.css'],\r\n})\r\nexport class UserlistingComponent implements OnInit {\r\n  constructor(\r\n    private service: AuthService,\r\n    private toastr: ToastrService,\r\n    public dialog: MatDialog,\r\n    private builder: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.LoadUser();\r\n  }\r\n  pass: string = 'password';\r\n  show = false;\r\n  userList: any = [];\r\n  dataSource: any;\r\n  editable: boolean = false;\r\n  userUrl = environment.API_URL_USERS;\r\n  subscription!: Subscription;\r\n  userForm!: FormGroup;\r\n  fields: any = [];\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n\r\n  LoadUser() {\r\n    this.service.GetAll().subscribe((res) => {\r\n      this.service.streamUsers(res);\r\n    });\r\n    this.subscription = this.service.listUser.subscribe((message: any) => {\r\n      Array.from(message).forEach((element: any) => {\r\n        element.show = false;\r\n        element.pass = 'password';\r\n      });\r\n\r\n      this.userList = message;\r\n      console.log('userlist: ', this.userList);\r\n      this.buildForm();\r\n      this.dataSource = new MatTableDataSource(this.userList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n\r\n    this.service.getUser();\r\n  }\r\n\r\n  displayedColumns: string[] = [\r\n    'username',\r\n    'name',\r\n    'email',\r\n    'role',\r\n    'password',\r\n    'status',\r\n    'action',\r\n  ];\r\n\r\n  editableToggle() {\r\n    this.editable = !this.editable;\r\n  }\r\n\r\n  guardarCambios(data: any) {\r\n    var ulist: any = [];\r\n\r\n    this.service.GetAll().subscribe((res) => {\r\n      ulist = res;\r\n      for (let i = 0; i < ulist.length; i++) {\r\n        console.log(data[i]);\r\n        console.log(this.userForm.controls[ulist[i].name].value);\r\n        data[i].password = this.userForm.controls[ulist[i].name].value;\r\n        if (\r\n          ulist[i].isActive != data[i].isActive ||\r\n          ulist[i].role._id != data[i].role._id ||\r\n          ulist[i].password != data[i].password\r\n        ) {\r\n          console.log(data[i]);\r\n          this.service\r\n            .UpdateUser(data[i].username, data[i])\r\n            .subscribe((res) => {\r\n              console.log(res);\r\n              this.toastr.success('¡Cambios Guardados con exito!', '', {\r\n                toastClass: 'yourclass ngx-toastr',\r\n                positionClass: 'toast-bottom-center',\r\n              });\r\n            });\r\n        }\r\n        if (i == this.userList.length - 1) {\r\n          return;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'este usuario',\r\n      },\r\n    });\r\n  }\r\n  showPass(element: any): void {\r\n    if (element.pass === 'password') {\r\n      element.show = true;\r\n      element.pass = '';\r\n    } else {\r\n      element.show = false;\r\n      element.pass = 'password';\r\n    }\r\n  }\r\n  get password() {\r\n    if (this.editable === true) {\r\n      this.userForm.enable();\r\n    } else {\r\n      this.userForm.disable();\r\n    }\r\n\r\n    return this.userForm;\r\n  }\r\n\r\n  getFormControlsFields() {\r\n    const formGroupFields: any = {};\r\n    for (const user of this.userList) {\r\n      formGroupFields[user.name] = new FormControl(user.password, [\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        checkUpperCase(),\r\n        checkNumber(),\r\n        checkSpecial(),\r\n      ]);\r\n      this.fields.push(user);\r\n    }\r\n    return formGroupFields;\r\n  }\r\n  buildForm() {\r\n    const formGroupFields = this.getFormControlsFields();\r\n    (this.userForm = new FormGroup(formGroupFields)),\r\n      [\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        checkUpperCase(),\r\n        checkNumber(),\r\n        checkSpecial(),\r\n      ];\r\n    console.log('form group fields', formGroupFields);\r\n    console.log('userform', this.userForm.controls);\r\n  }\r\n}\r\n","<mat-card class=\"fondo\">\r\n  <mat-card-header class=\"\">\r\n    <div class=\"grid grid-cols-2 header\">\r\n      <h2 class=\"titulo justify-self-start\">Listado de usuarios</h2>\r\n    </div>\r\n  </mat-card-header>\r\n\r\n  <mat-card-content>\r\n    <div class=\"card\">\r\n      <mat-table matSort [dataSource]=\"dataSource\" class=\"mb-3\">\r\n        <!-- username Column -->\r\n        <ng-container matColumnDef=\"username\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Nombre de usuario</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">{{ element.username }}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Nombre</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">{{ element.name }}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- email Column -->\r\n        <ng-container matColumnDef=\"email\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Email</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">{{ element.email }}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- role Column -->\r\n        <ng-container matColumnDef=\"role\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Rol</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <mat-select\r\n              [ngClass]=\"editable ? '' : 'select'\"\r\n              [disabled]=\"!editable\"\r\n              [(value)]=\"element.role._id\"\r\n            >\r\n              <mat-option value=\"64f1f60e918724a5f931d909\">\r\n                Usuario\r\n              </mat-option>\r\n              <mat-option value=\"64d3cdd575d7a2df083079bd\">\r\n                Administrador\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Password Column -->\r\n        <ng-container matColumnDef=\"password\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Contraseña\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element; let i = index\">\r\n            <div class=\"contenedor flex\" [formGroup]=\"userForm\">\r\n              <mat-form-field class=\"input-user\">\r\n                <input\r\n                  matInput\r\n                  [type]=\"element.pass\"\r\n                  [formControlName]=\"element.name\"\r\n                  [value]=\"element.password\"\r\n                />\r\n              </mat-form-field>\r\n              <a\r\n                style=\"cursor: pointer\"\r\n                (click)=\"showPass(element)\"\r\n                class=\"p-2 mt-3\"\r\n                matSuffix\r\n              >\r\n                <mat-icon>{{\r\n                  element.show ? \"visibility\" : \"visibility_off\"\r\n                }}</mat-icon>\r\n              </a>\r\n              <svg\r\n                *ngIf=\"editable\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"mt-6\"\r\n                matTooltip=\"\r\n        - Al menos una mayúscula \r\n        - 8 caracteres mínimo\r\n        - Al menos un caracter especial\r\n        - Al menos un número\r\n        \"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                !userForm.get(element.name)!.value || userForm.get(element.name)?.errors?.['hasNumber'] || userForm.get(element.name)?.errors?.['hasSp'] ||  userForm.get(element.name)?.errors?.['minlength'] || userForm.get(element.name)?.errors?.['hasUpper']\r\n                ? ''\r\n                : 'iconFill'\r\n                \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n            </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Status Column -->\r\n        <ng-container matColumnDef=\"status\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Estado</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <mat-select\r\n              class=\"{{ element.isActive }}\"\r\n              [ngClass]=\"editable ? '' : 'select'\"\r\n              [disabled]=\"!editable\"\r\n              [(value)]=\"element.isActive\"\r\n            >\r\n              <mat-option value=\"inactive\" class=\"inactive\"\r\n                >Inactivo</mat-option\r\n              >\r\n              <mat-option value=\"active\" class=\"active\">Activo</mat-option>\r\n            </mat-select>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Action Column -->\r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Accion</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <button\r\n              mat-icon-button\r\n              [disabled]=\"!editable\"\r\n              (click)=\"openDialog(element._id)\"\r\n            >\r\n              <mat-icon\r\n                [ngClass]=\"editable ? 'delete_icon' : 'delete_icon_disabled'\"\r\n                >delete</mat-icon\r\n              >\r\n            </button>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n      </mat-table>\r\n      <div class=\"flex justify-end\">\r\n        <a\r\n          (click)=\"editableToggle()\"\r\n          mat-raised-button\r\n          class=\"boton justify-self-end mx-8\"\r\n        >\r\n          <mat-icon id=\"icon\"> edit_note </mat-icon>\r\n          {{ editable ? \"Cancelar\" : \"Editar Listado\" }}\r\n        </a>\r\n        <a\r\n          (click)=\"guardarCambios(dataSource._data._value)\"\r\n          class=\"justify-self-end\"\r\n          mat-raised-button\r\n          [disabled]=\"password.status === 'INVALID'\"\r\n          [ngClass]=\"password.status === 'INVALID' ? 'boton_disabled' : 'boton'\"\r\n          >Guardar Cambios</a\r\n        >\r\n      </div>\r\n      <mat-paginator\r\n        [pageSizeOptions]=\"[5, 10, 20]\"\r\n        showFirstLastButtons\r\n        aria-label=\"Select page of periodic elements\"\r\n      >\r\n      </mat-paginator>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthService } from './service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  rtoken_url = environment.API_URL_RTOKEN;\r\n  rBody = {\r\n    token: sessionStorage.getItem('rtoken')?.toString(),\r\n    user: sessionStorage.getItem('username')?.toString(),\r\n  };\r\n  resData: any;\r\n  timeout: any;\r\n  token: any;\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  refreshToken(): void {\r\n    this.authService.postForm(this.rtoken_url, this.rBody).subscribe((res) => {\r\n      this.resData = res.body;\r\n      console.log(\r\n        'refresh token: ',\r\n        this.rBody,\r\n        'access Token: ',\r\n        this.resData\r\n      );\r\n      console.log('status code: ', res.status);\r\n      this.token = this.resData.accessToken;\r\n      sessionStorage.setItem('token', this.resData.accessToken);\r\n      sessionStorage.setItem('rtoken', this.resData.refreshToken);\r\n      this.timeout =\r\n        this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n        new Date().valueOf();\r\n      this.authService.expirationCounter(this.timeout);\r\n      if (res.status == 200) {\r\n        this.toastr.success('sesion extendida');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Sesion a punto de exipirar</h1>\r\n<div mat-dialog-content>\r\n  <p>Desea continuar con su sesion?</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No</button>\r\n  <button\r\n    class=\"m-3\"\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    mat-button\r\n    (click)=\"refreshToken()\"\r\n    [mat-dialog-close]\r\n    cdkFocusInitial\r\n  >\r\n    De acuerdo\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n@Component({\r\n  selector: 'app-departamentos',\r\n  templateUrl: './departamentos.component.html',\r\n  styleUrls: ['./departamentos.component.css'],\r\n})\r\nexport class DepartamentosComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listProvincias: any;\r\n  listDepartamentos: any;\r\n  apiDepartamentos = environment.API_URL_ARGENTINA_DEPARTAMENTOS; //hay que cambiar la variable\r\n  apiLocalidades = environment.API_URL_ARGENTINA_LOCALIDADES; //hay que cambiar la variable\r\n  apiProvincias = environment.API_URL_PROVINCIAS;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  isOptional = true;\r\n  id_provincia!: string;\r\n  id_departamento!: string;\r\n  departamentoForm!: FormGroup;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.departamentoForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.departamentoSelected.subscribe(\r\n      (message) => (this.id_departamento = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n    this.subscription2 = this.service.listDepartamentos.subscribe(\r\n      (message) => (this.listDepartamentos = message)\r\n    );\r\n  }\r\n  //no esta en uso\r\n\r\n  setDepartamento(id: any) {\r\n    console.log('set Departamento', id);\r\n    this.service.changeMessage(id);\r\n    this.service.departamentoSelectedSource.next(id);\r\n\r\n    this.GetLocalidadesByDepartamento();\r\n  }\r\n\r\n  GetLocalidadesByDepartamento() {\r\n    this.service\r\n      .getForm(\r\n        this.apiLocalidades +\r\n          this.id_provincia +\r\n          `&departamento=${this.id_departamento}&orden=nombre&aplanar=true&campos=departamento.nombre&max=600&exacto=true`\r\n      )\r\n      .subscribe((res: any) => {\r\n        console.log('Departamento-form get localidades', res.localidades);\r\n        let localidadesUnicas = this.removeDuplicates(res.localidades);\r\n        console.log('localidades unicas: ', localidadesUnicas);\r\n        this.service.streamLocalidades_DepartamentoSelected(localidadesUnicas);\r\n      });\r\n  }\r\n  removeDuplicates(data: any) {\r\n    const seen = new Set();\r\n    const filteredArr = data.filter((el: any) => {\r\n      const duplicate = seen.has(el.nombre);\r\n      seen.add(el.nombre);\r\n      return !duplicate;\r\n    });\r\n    return filteredArr;\r\n  }\r\n}\r\n// https://apis.datos.gob.ar/georef/api/localidades?provincia=${provincia}&departamento=${departamento}&aplanar=true&campos=basico&max=100&exacto=true\r\n","<div class=\"carta flex flex-col p-3\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Departamentos/Partidos/Comunas </mat-label>\r\n    <mat-select [disabled]=\"!id_provincia\">\r\n      <mat-option\r\n        *ngFor=\"let departamento of listDepartamentos\"\r\n        [value]=\"departamento.nombre\"\r\n        (click)=\"[setDepartamento(departamento.nombre)]\"\r\n      >\r\n        <p>{{ departamento.nombre }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from '../variable-form/variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-empresa-form',\r\n  templateUrl: './empresa-form.component.html',\r\n  styleUrls: ['./empresa-form.component.css'],\r\n})\r\nexport class EmpresaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  listLocalidades: any;\r\n  listEmpresas: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlantas = environment.API_URL_PLANTA;\r\n  isOptional = true;\r\n  id_localidad!: string;\r\n  id_empresa!: string;\r\n  empresaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.empresaForm = this.builder.group({\r\n      razon_social: this.builder.control('', Validators.required),\r\n      nombre_fantasia: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n      rubro: this.builder.control('', Validators.required),\r\n      piso: this.builder.control(''),\r\n      deptartamento: this.builder.control(''),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.listEmpresas.subscribe(\r\n      (message) => (this.listEmpresas = message)\r\n    );\r\n  }\r\n\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createEmpresa() {\r\n    if (this.empresaForm.valid) {\r\n      console.log(this.empresaForm.value);\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        razon_social: this.empresaForm.value.razon_social,\r\n        nombre_fantasia: this.empresaForm.value.nombre_fantasia,\r\n        calle: this.empresaForm.value.calle,\r\n        altura: this.empresaForm.value.altura,\r\n        piso: this.empresaForm.value.piso,\r\n        deptartamento: this.empresaForm.value.deptartamento,\r\n        rubro: this.empresaForm.value.rubro,\r\n      };\r\n      this.service.postForm(this.apiEmpresas, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Empresa registrada corectamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service\r\n              .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n              .subscribe((res: any) => {\r\n                console.log('empresas res after crear: ', res);\r\n                this.listEmpresas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarEmpresa(id: string) {\r\n    console.log(this.apiEmpresas + id);\r\n    this.service.deleteForm(this.apiEmpresas, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Empresa borrada correctamente');\r\n          this.GetAllEmpresas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setEmpresa(id: any) {\r\n    console.log('set empresa', id);\r\n    this.id_empresa = id;\r\n    this.service.changeMessage(id);\r\n    this.service.empresaSelectedSource.next(id);\r\n    this.GetPlantasByEmpresas();\r\n  }\r\n\r\n  GetPlantasByEmpresas() {\r\n    this.service\r\n      .getForm(this.apiPlantas + this.id_empresa)\r\n      .subscribe((res: any) => {\r\n        console.log('empresa get plantas', res);\r\n        this.service.streamPlantas_EmpresaSelected(res);\r\n      });\r\n  }\r\n\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'esta empresa',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir una empresa</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Lista De Empresas</mat-label>\r\n\r\n        <mat-select>\r\n          <div *ngFor=\"let empresa of listEmpresas\">\r\n            <mat-option\r\n              [value]=\"empresa._id\"\r\n              (click)=\"[setEmpresa(empresa._id)]\"\r\n            >\r\n              <p>{{ empresa.nombre_fantasia }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <button\r\n              mat-icon-button\r\n              (click)=\"[$event.stopPropagation(), openDialog(empresa._id)]\"\r\n            >\r\n              <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header>\r\n    <h2 class=\"titulo\">Ingresar nueva empresa</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <form\r\n        [formGroup]=\"empresaForm\"\r\n        (ngSubmit)=\"createEmpresa()\"\r\n        (submit)=\"empresaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-6 gap-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Razon Social</mat-label>\r\n              <input class=\"d-input\" matInput formControlName=\"razon_social\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 row-start-2\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre Fantasia</mat-label>\r\n              <input matInput formControlName=\"nombre_fantasia\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 row-start-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row-start-4\">\r\n            <mat-form-field>\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row-start-4\">\r\n            <mat-form-field>\r\n              <mat-label>Piso</mat-label>\r\n              <input matInput formControlName=\"piso\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row-start-4\">\r\n            <mat-form-field>\r\n              <mat-label>Deptartamento</mat-label>\r\n              <input matInput formControlName=\"deptartamento\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Rubro</mat-label>\r\n              <input matInput formControlName=\"rubro\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !empresaForm.value.razon_social ||\r\n                !empresaForm.value.nombre_fantasia ||\r\n                !empresaForm.value.calle ||\r\n                !empresaForm.value.altura ||\r\n                !empresaForm.value.rubro\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from '../variable-form/variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-empresa-planta-form',\r\n  templateUrl: './empresa-planta-form.component.html',\r\n  styleUrls: ['./empresa-planta-form.component.css'],\r\n})\r\nexport class EmpresaPlantaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  listEmpresas: any;\r\n  listLocalidades: any;\r\n  listPlantas: any;\r\n  id_empresa!: string;\r\n  id_localidad!: string;\r\n  id_planta!: string;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  isOptional = true;\r\n  plantaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllEmpresas();\r\n    this.plantaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.listPlantas.subscribe(\r\n      (message) => (this.listPlantas = message)\r\n    );\r\n    this.subscription = this.service.empresaSelected.subscribe(\r\n      (message) => (this.id_empresa = message)\r\n    );\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n  }\r\n\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createPlanta() {\r\n    if (this.plantaForm.valid) {\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        id_empresa: this.id_empresa,\r\n        nombre: this.plantaForm.value.nombre,\r\n        calle: this.plantaForm.value.calle,\r\n        altura: this.plantaForm.value.altura,\r\n      };\r\n      console.log(this.plantaForm.value);\r\n      this.service.postForm(this.apiPlanta, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else {\r\n            this.toastr.success('Planta registrada corectamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service\r\n              .getForm(this.apiPlanta + this.id_empresa)\r\n              .subscribe((res: any) => {\r\n                this.listPlantas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarPlanta(id: string) {\r\n    console.log(this.apiPlanta + id);\r\n    this.service.deleteForm(this.apiPlanta, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Planta borrada correctamente');\r\n          this.GetAllPlantas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setPlanta(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_planta = id;\r\n    this.service.plantaSelectedSource.next(id);\r\n    this.GetLineaByPlanta();\r\n  }\r\n\r\n  GetLineaByPlanta() {\r\n    this.service\r\n      .getForm(this.apiLinea + this.id_planta)\r\n      .subscribe((res: any) => {\r\n        console.log('planta get lineas', res);\r\n        this.service.streamLinea_PlantaSelected(res);\r\n      });\r\n  }\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'esta planta',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir una planta</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-form-field>\r\n        <mat-label>Elegir una planta</mat-label>\r\n        <mat-select>\r\n          <div *ngFor=\"let planta of listPlantas\">\r\n            <mat-option\r\n              [value]=\"planta._id\"\r\n              (click)=\"[setPlanta(planta._id, planta.nombre)]\"\r\n            >\r\n              <p>{{ planta.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <button\r\n              mat-icon-button\r\n              (click)=\"[$event.stopPropagation(), openDialog(planta._id)]\"\r\n            >\r\n              <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar nueva planta</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <form\r\n        [formGroup]=\"plantaForm\"\r\n        (ngSubmit)=\"createPlanta()\"\r\n        (submit)=\"plantaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !plantaForm.value.nombre ||\r\n                !plantaForm.value.calle ||\r\n                !plantaForm.value.altura\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from '../variable-form/variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-linea-produccion-form',\r\n  templateUrl: './linea-produccion-form.component.html',\r\n  styleUrls: ['./linea-produccion-form.component.css'],\r\n})\r\nexport class LineaProduccionFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  listPlantas: any;\r\n  listLineas: any;\r\n  id_empresa_planta!: string;\r\n  id_linea!: string;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  lineaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPlantas();\r\n    this.lineaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n      identificador: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.listLineas.subscribe(\r\n      (message) => (this.listLineas = message)\r\n    );\r\n    this.subscription = this.service.plantaSelected.subscribe(\r\n      (message) => (this.id_empresa_planta = message)\r\n    );\r\n  }\r\n\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLinea() {\r\n    if (this.lineaForm.valid) {\r\n      console.log(this.lineaForm.value);\r\n      let body = {\r\n        id_empresa_planta: this.id_empresa_planta,\r\n        nombre: this.lineaForm.value.nombre,\r\n        descripcion: this.lineaForm.value.descripcion,\r\n        identificador: this.lineaForm.value.identificador,\r\n      };\r\n      this.service.postForm(this.apiLinea, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success(\r\n              'Linea de produccion registrada corectamente',\r\n              '',\r\n              {\r\n                toastClass: 'yourclass ngx-toastr',\r\n                positionClass: 'toast-bottom-center',\r\n              }\r\n            );\r\n            this.service\r\n              .getForm(this.apiLinea + this.id_empresa_planta)\r\n              .subscribe((res: any) => {\r\n                this.listLineas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLineaProduccion(id: string) {\r\n    console.log(this.apiLinea + id);\r\n    this.service.deleteForm(this.apiLinea, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Linea de produccion borrada correctamente');\r\n          this.GetAllLineas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLinea(id: any, nombre: any) {\r\n    console.log('set linea', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_linea = id;\r\n    this.service.lineaSelectedSource.next(id);\r\n    this.GetMaquinaByLinea();\r\n  }\r\n\r\n  GetMaquinaByLinea() {\r\n    this.service\r\n      .getForm(this.apiMaquina + this.id_linea)\r\n      .subscribe((res: any) => {\r\n        console.log('linea get maquinas', res);\r\n        this.service.streamMaquinas_LineaSelected(res);\r\n      });\r\n  }\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'esta linea de produccion',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Elegir una línea de producción</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Linea</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let linea of listLineas\">\r\n            <mat-option\r\n              [value]=\"linea._id\"\r\n              (click)=\"[setLinea(linea._id, linea.nombre)]\"\r\n            >\r\n              <p>{{ linea.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ linea.descripcion }}\r\n            </p>\r\n            <button\r\n              mat-icon-button\r\n              (click)=\"[$event.stopPropagation(), openDialog(linea._id)]\"\r\n            >\r\n              <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar nueva línea</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"lineaForm\"\r\n        (ngSubmit)=\"createLinea()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>identificador</mat-label>\r\n              <input matInput formControlName=\"identificador\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !lineaForm.value.nombre ||\r\n                !lineaForm.value.descripcion ||\r\n                !lineaForm.value.identificador\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-localidad-form',\r\n  templateUrl: './localidad-form.component.html',\r\n  styleUrls: ['./localidad-form.component.css'],\r\n})\r\nexport class LocalidadFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listProvincias: any;\r\n  listLocalidades: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiProvincias = environment.API_URL_PROVINCIAS;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  isOptional = true;\r\n  id_provincia!: string;\r\n  id_localidad!: string;\r\n  id_departamento!: string;\r\n  localidadForm!: FormGroup;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.localidadForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n    this.subscription = this.service.departamentoSelected.subscribe(\r\n      (message) => (this.id_departamento = message)\r\n    );\r\n    this.subscription2 = this.service.listLocalidades.subscribe(\r\n      (message) => (this.listLocalidades = message)\r\n    );\r\n  }\r\n  //no esta en uso\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLocalidad() {\r\n    if (this.localidadForm.valid) {\r\n      console.log(this.localidadForm.value);\r\n      let body = {\r\n        nombre: this.localidadForm.value.nombre,\r\n        id_provincia: this.id_provincia,\r\n      };\r\n      this.service.postForm(this.apiLocalidad, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Localidad registrada correctamente');\r\n            this.service\r\n              .getForm(this.apiLocalidad + this.id_provincia)\r\n              .subscribe((res: any) => {\r\n                this.listLocalidades = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLocalidad(id: string) {\r\n    console.log(this.apiLocalidad + id);\r\n    this.service.deleteForm(this.apiLocalidad, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Localidad borrada correctamente');\r\n          this.GetAllLocalidades();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLocalidad(id: any) {\r\n    console.log('set localidad', id);\r\n    this.service.changeMessage(id);\r\n    this.service.localidadSelectedSource.next(id);\r\n\r\n    this.GetEmpresasByLocalidad();\r\n  }\r\n\r\n  GetEmpresasByLocalidad() {\r\n    this.service\r\n      .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n      .subscribe((res: any) => {\r\n        console.log('Localidad-form get empresas', res);\r\n        this.service.streamEmpresas_LocalidadSelected(res);\r\n      });\r\n  }\r\n}\r\n","<div class=\"carta flex flex-col p-3\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Localidad </mat-label>\r\n    <mat-select [disabled]=\"!id_departamento\">\r\n      <mat-option\r\n        *ngFor=\"let localidad of listLocalidades\"\r\n        [value]=\"localidad.nombre ? localidad.nombre : localidad\"\r\n        (click)=\"\r\n          [setLocalidad(localidad.nombre ? localidad.nombre : localidad)]\r\n        \"\r\n      >\r\n        <p>{{ localidad.nombre ? localidad.nombre : localidad }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from '../variable-form/variable.modal.component';\r\n\r\n@Component({\r\n  selector: 'app-maquina-form',\r\n  templateUrl: './maquina-form.component.html',\r\n  styleUrls: ['./maquina-form.component.css'],\r\n})\r\nexport class MaquinaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  listLineas: any;\r\n  listTipoMaquina: any;\r\n  listMaquinas: any;\r\n  message: any;\r\n  id_linea_produccion!: string;\r\n  id_tipo_maquina!: string;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  maquinaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLineas();\r\n    this.GetAllTipos();\r\n\r\n    this.maquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      marca: this.builder.control('', Validators.required),\r\n      modelo: this.builder.control('', Validators.required),\r\n      detalle: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.currentMessage.subscribe(\r\n      (message) => (this.message = message)\r\n    );\r\n    this.subscription = this.service.listMaquinas.subscribe(\r\n      (message) => (this.listMaquinas = message)\r\n    );\r\n    this.subscription = this.service.lineaSelected.subscribe(\r\n      (message) => (this.id_linea_produccion = message)\r\n    );\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => (this.id_tipo_maquina = message)\r\n    );\r\n  }\r\n\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n  GetAllTipos() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquinas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createMaquina() {\r\n    if (this.maquinaForm.valid) {\r\n      console.log(this.maquinaForm.value);\r\n      let body = {\r\n        id_linea_produccion: this.id_linea_produccion,\r\n        id_tipo_maquina: this.id_tipo_maquina,\r\n        nombre: this.maquinaForm.value.nombre,\r\n        marca: this.maquinaForm.value.marca,\r\n        modelo: this.maquinaForm.value.modelo,\r\n        detalle: this.maquinaForm.value.detalle,\r\n      };\r\n      this.service.postForm(this.apiMaquina, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Maquina registrada corectamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service\r\n              .getForm(this.apiMaquina + this.id_linea_produccion)\r\n              .subscribe((res: any) => {\r\n                console.log('res maquina: ', res);\r\n                this.listMaquinas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarMaquina(id: string) {\r\n    console.log(this.apiMaquina + id);\r\n    this.service.deleteForm(this.apiMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Maquina borrada correctamente');\r\n          this.GetAllMaquinas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setMaquina(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamMaquinaSelected(maquina_id: string) {\r\n    this.service.streamMaquinaSelected(maquina_id);\r\n  }\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'esta maquina',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir una máquina</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una maquina</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let maquina of listMaquinas\">\r\n            <mat-option\r\n              [value]=\"maquina._id\"\r\n              (click)=\"\r\n                [\r\n                  setMaquina(maquina._id, maquina.nombre),\r\n                  StreamMaquinaSelected(maquina._id)\r\n                ]\r\n              \"\r\n            >\r\n              <p>{{ maquina.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ maquina.detalle }}\r\n            </p>\r\n            <button\r\n              mat-icon-button\r\n              (click)=\"[$event.stopPropagation(), openDialog(maquina._id)]\"\r\n            >\r\n              <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar una nueva máquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"maquinaForm\"\r\n        (ngSubmit)=\"createMaquina()\"\r\n        (submit)=\"maquinaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-5\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Marca</mat-label>\r\n              <input matInput formControlName=\"marca\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Modelo</mat-label>\r\n              <input matInput formControlName=\"modelo\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Detalle</mat-label>\r\n              <input matInput formControlName=\"detalle\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !maquinaForm.value.nombre ||\r\n                !maquinaForm.value.marca ||\r\n                !maquinaForm.value.modelo ||\r\n                !maquinaForm.value.detalle\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-pais-form',\r\n  templateUrl: './pais-form.component.html',\r\n  styleUrls: ['./pais-form.component.css'],\r\n})\r\nexport class PaisFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private _httpservice: HttpService\r\n  ) {}\r\n  listPaises: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiArgentinaPronvincias = environment.API_URL_ARGENTINA_PROVINCIAS;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  isOptional = true;\r\n  paisForm!: FormGroup;\r\n  nombre_pais!: string;\r\n  message2!: any;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  completed: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPaises();\r\n    this.paisForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.nombre_pais = message)\r\n    );\r\n  }\r\n\r\n  GetAllPaises() {\r\n    this._httpservice.httpGet(this.apiPaises).subscribe((res: any) => {\r\n      console.log('lista paises', res);\r\n      this.listPaises = res['data'];\r\n      this.setPais(this.listPaises[7].country);\r\n    });\r\n  }\r\n  setPais(id: any) {\r\n    console.log('set pais', id);\r\n    this.service.changeMessage(id);\r\n    this.service.paisSelectedSource.next(id);\r\n    this.GetProvinciasByPais();\r\n  }\r\n\r\n  GetProvinciasByPais() {\r\n    console.log('pais nombre', this.nombre_pais);\r\n    if (this.nombre_pais == 'Argentina') {\r\n      this._httpservice\r\n        .httpGet(this.apiArgentinaPronvincias)\r\n        .subscribe((res: any) => {\r\n          console.log('pais form get provincias', res.provincias);\r\n          this.service.streamProvincias_PaisSelected(res.provincias);\r\n        });\r\n    } else {\r\n      let body = {\r\n        country: this.nombre_pais,\r\n      };\r\n      this._httpservice\r\n        .httpPost(this.apiProvincia, body)\r\n        .subscribe((res: any) => {\r\n          console.log('pais form get provincias', res.body.data.states);\r\n          this.service.streamProvincias_PaisSelected(res.body.data.states);\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"carta mat-elevation-z flex flex-col p-3\" style=\"display: none\">\r\n  <mat-form-field>\r\n    <mat-label>País</mat-label>\r\n\r\n    <mat-select (selectionChange)=\"(!completed)\">\r\n      <mat-option\r\n        *ngFor=\"let pais of listPaises\"\r\n        [value]=\"pais.country\"\r\n        (click)=\"setPais(pais.country)\"\r\n      >\r\n        <p>{{ pais.country }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from '../variable-form/variable.modal.component';\r\n\r\n@Component({\r\n  selector: 'app-proceso-form',\r\n  templateUrl: './proceso-form.component.html',\r\n  styleUrls: ['./proceso-form.component.css'],\r\n})\r\nexport class ProcesoFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  procesoForm!: FormGroup;\r\n  listProceso: any;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllProcesos();\r\n    this.subscription = this.service.listProceso.subscribe(\r\n      (message) => (this.listProceso = message)\r\n    );\r\n    this.procesoForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProceso = res['datos'];\r\n    });\r\n  }\r\n\r\n  crearProceso() {\r\n    if (this.procesoForm.valid) {\r\n      console.log(this.procesoForm.value);\r\n      this.service.postForm(this.apiProceso, this.procesoForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('proceso registrado correctamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.GetAllProcesos();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarProcesos(id: string) {\r\n    console.log(this.apiProceso + id);\r\n    this.service.deleteForm(this.apiProceso, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Proceso borrado correctamente');\r\n          this.GetAllProcesos();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setProceso(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamProcesoSelected(proceso_id: string) {\r\n    this.service.streamProcesoSelected(proceso_id);\r\n  }\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'este proceso',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir un proceso</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un proceso</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let proceso of listProceso\">\r\n            <mat-option\r\n              [value]=\"proceso._id\"\r\n              (click)=\"\r\n                [\r\n                  setProceso(proceso._id, proceso.nombre),\r\n                  StreamProcesoSelected(proceso._id)\r\n                ]\r\n              \"\r\n            >\r\n              <p>{{ proceso.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ proceso.descripcion }}\r\n            </p>\r\n            <button\r\n              mat-icon-button\r\n              (click)=\"[$event.stopPropagation(), openDialog(proceso._id)]\"\r\n            >\r\n              <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar un nuevo proceso</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"procesoForm\"\r\n        (ngSubmit)=\"crearProceso()\"\r\n        (submit)=\"procesoForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-3\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre del proceso</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Descripcion del proceso</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !procesoForm.value.nombre || !procesoForm.value.descripcion\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-provincia-form',\r\n  templateUrl: './provincia-form.component.html',\r\n  styleUrls: ['./provincia-form.component.css'],\r\n})\r\nexport class ProvinciaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private _httpservice: HttpService\r\n  ) {}\r\n  listPaises: any;\r\n  listProvincias: any;\r\n  listProvinciasPais: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiArgentinaDepartamentos = environment.API_URL_ARGENTINA_DEPARTAMENTOS;\r\n  isOptional = true;\r\n  provinciaForm!: FormGroup;\r\n  nombre_pais!: string;\r\n  id_provincia!: string;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.provinciaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.nombre_pais = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n\r\n    this.subscription2 = this.service.listProvincias.subscribe(\r\n      (message) => (this.listProvinciasPais = message)\r\n    );\r\n  }\r\n\r\n  setProvincia(nombre: any) {\r\n    console.log('set provincia nombre', nombre);\r\n    this.service.changeMessage(nombre);\r\n    this.service.provinciaSelectedSource.next(nombre);\r\n    this.GetDepartamentosByProvincia();\r\n  }\r\n\r\n  GetDepartamentosByProvincia() {\r\n    if (this.nombre_pais == 'Argentina') {\r\n      this._httpservice\r\n        .httpGet(\r\n          this.apiArgentinaDepartamentos +\r\n            this.id_provincia +\r\n            '&orden=nombre&max=2100&exacto=true'\r\n        )\r\n        .subscribe((res: any) => {\r\n          console.log('pais form get departamentos', res.departamentos);\r\n\r\n          this.service.streamDepartamentos_ProvinciaSelected(res.departamentos);\r\n        });\r\n    } else {\r\n      let body = {\r\n        country: this.nombre_pais,\r\n        state: this.id_provincia,\r\n      };\r\n      this._httpservice\r\n        .httpPost(this.apiLocalidad, body)\r\n        .subscribe((res: any) => {\r\n          console.log('provincia form get localidades', res.body.data);\r\n\r\n          this.service.streamDepartamentos_ProvinciaSelected(res.body.data);\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"carta flex flex-col p-3\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Provincia</mat-label>\r\n\r\n    <mat-select>\r\n      <mat-option\r\n        *ngFor=\"let provincia of listProvinciasPais\"\r\n        [value]=\"provincia.name ? provincia.name : provincia.nombre\"\r\n        (click)=\"\r\n          [setProvincia(provincia.name ? provincia.name : provincia.nombre)]\r\n        \"\r\n      >\r\n        <p>{{ provincia.name ? provincia.name : provincia.nombre }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from '../variable-form/variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-tipo-maquina-form',\r\n  templateUrl: './tipo-maquina-form.component.html',\r\n  styleUrls: ['./tipo-maquina-form.component.css'],\r\n})\r\nexport class TipoMaquinaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  listPaises: any;\r\n  listTipoMaquina: any;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  isOptional = true;\r\n  tipoMaquinaForm!: FormGroup;\r\n  pais: any;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTiposMaquina();\r\n    this.subscription = this.service.listTipoMaquina.subscribe(\r\n      (message) => (this.listTipoMaquina = message)\r\n    );\r\n    this.tipoMaquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  createTipoMaquina() {\r\n    if (this.tipoMaquinaForm.valid) {\r\n      console.log(this.tipoMaquinaForm.value);\r\n      this.service\r\n        .postForm(this.apiTipoMaquina, this.tipoMaquinaForm.value)\r\n        .subscribe({\r\n          next: (res: any) => {\r\n            console.log('respuesta: ', res);\r\n            if (res.status == 500) {\r\n              this.toastr.warning(res.error.error);\r\n            } else {\r\n              this.toastr.success(\r\n                'Tipo de maquina registrada correctamente',\r\n                '',\r\n                {\r\n                  toastClass: 'yourclass ngx-toastr',\r\n                  positionClass: 'toast-bottom-center',\r\n                }\r\n              );\r\n              this.GetAllTiposMaquina();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.toastr.error(error);\r\n            console.log(error);\r\n          },\r\n        });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  GetAllTiposMaquina() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log('tipo maquinas: ', res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n\r\n  borrarTipoMaquina(id: string) {\r\n    console.log(this.apiTipoMaquina + id);\r\n    this.service.deleteForm(this.apiTipoMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Tipo de maquina borrada correctamente');\r\n          this.GetAllTiposMaquina();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTipo(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamTipoSelected(tipo_id: string) {\r\n    this.service.streamTipoSelected(tipo_id);\r\n  }\r\n\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'este tipo de maquina',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Elegir un tipo de máquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un Tipo de maquina</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let tipo of listTipoMaquina\">\r\n            <mat-option\r\n              [value]=\"tipo._id\"\r\n              (click)=\"\r\n                [setTipo(tipo._id, tipo.nombre), StreamTipoSelected(tipo._id)]\r\n              \"\r\n            >\r\n              <p>{{ tipo.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ tipo.descripcion }}\r\n            </p>\r\n            <button\r\n              mat-icon-button\r\n              (click)=\"[$event.stopPropagation(), openDialog(tipo._id)]\"\r\n            >\r\n              <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar un nuevo tipo de máquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"tipoMaquinaForm\"\r\n        (ngSubmit)=\"createTipoMaquina()\"\r\n        (submit)=\"tipoMaquinaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-3\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !tipoMaquinaForm.value.nombre ||\r\n                !tipoMaquinaForm.value.descripcion\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-trigger-form',\r\n  templateUrl: './trigger-form.component.html',\r\n  styleUrls: ['./trigger-form.component.css'],\r\n})\r\nexport class TriggerFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  triggerForm!: FormGroup;\r\n  listTriggers: any;\r\n  trigger_descripcion!: string;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTriggers();\r\n    this.triggerForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTriggers = res;\r\n    });\r\n  }\r\n\r\n  crearTrigger() {\r\n    if (this.triggerForm.valid) {\r\n      console.log(this.triggerForm.value);\r\n      this.service.postForm(this.apiTrigger, this.triggerForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Trigger registrado correctamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.GetAllTriggers();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarTrigger(id: string) {\r\n    console.log(this.apiTrigger + id);\r\n    this.service.deleteForm(this.apiTrigger, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Trigger borrado correctamente');\r\n          this.GetAllTriggers();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTrigger(id: any, nombre: any, descripcion: string) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.trigger_descripcion = descripcion;\r\n  }\r\n\r\n  StreamTriggerSelected(trigger_id: string) {\r\n    this.service.streamTriggerSelected(trigger_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir un trigger</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Seleccionar una opcion del listado</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let trigger of listTriggers\">\r\n            <mat-option\r\n              [value]=\"trigger._id\"\r\n              (click)=\"\r\n                [\r\n                  setTrigger(trigger._id, trigger.nombre, trigger.descripcion),\r\n                  StreamTriggerSelected(trigger._id)\r\n                ]\r\n              \"\r\n            >\r\n              <p>{{ trigger.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ trigger.descripcion }}\r\n            </p>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from './variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-variable-form',\r\n  templateUrl: './variable-form.component.html',\r\n  styleUrls: ['./variable-form.component.css'],\r\n})\r\nexport class VariableFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private httpService: HttpService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  apiVariables = environment.API_URL_VARIABLES;\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  apiMaquinas = environment.API_URL_MAQUINA;\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  variableForm!: FormGroup;\r\n  id_maquina: any;\r\n  id_proceso: any;\r\n  id_trigger: any;\r\n  listProcesos: any;\r\n  listMaquina: any;\r\n  listTrigger: any;\r\n  listaVariables: any;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllVariables();\r\n    this.GetAllProcesos();\r\n    this.GetAllMaquinas();\r\n    this.GetAllTriggers();\r\n    this.variableForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control(''),\r\n      trigger_valor: this._formBuilder.control(''),\r\n    });\r\n    this.subscription = this.service.maquinaSelected.subscribe(\r\n      (message) => (this.id_maquina = message)\r\n    );\r\n    this.subscription = this.service.procesoSelected.subscribe(\r\n      (message) => (this.id_proceso = message)\r\n    );\r\n    this.subscription = this.service.triggerSelected.subscribe(\r\n      (message) => (this.id_trigger = message)\r\n    );\r\n    this.subscription = this.httpService.listaVariables.subscribe(\r\n      (message) => (this.listaVariables = message)\r\n    );\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProcesos = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquinas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTrigger = res;\r\n    });\r\n  }\r\n  GetAllVariables() {\r\n    this.service.getForm(this.apiVariables).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listaVariables = res;\r\n    });\r\n  }\r\n\r\n  crearVariable() {\r\n    if (this.variableForm.valid) {\r\n      console.log(this.variableForm.value);\r\n      let body = {\r\n        id_maquina: this.id_maquina,\r\n        id_proceso: this.id_proceso,\r\n        id_trigger: this.id_trigger,\r\n        nombre: this.variableForm.value.nombre,\r\n        trigger_valor: this.variableForm.value.trigger_valor,\r\n        time_stamp: new Date(),\r\n      };\r\n      this.service.postForm(this.apiVariables, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Variable registrada correctamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.GetAllVariables();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor ingrese datos validos');\r\n    }\r\n  }\r\n\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'esta variable',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Elegir una variable</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-accordion>\r\n        <mat-expansion-panel (click)=\"GetAllVariables()\" hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Listado de variables</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <mat-list role=\"list\" *ngFor=\"let variable of listaVariables\">\r\n            <mat-list-item role=\"listitem\">\r\n              {{ variable.nombre }}\r\n\r\n              <div matListItemMeta>\r\n                <mat-icon\r\n                  matTooltip=\"\r\n\r\n                Proceso: {{ variable.id_proceso.descripcion }}\r\n                Maquina: {{ variable.id_maquina.nombre }}\r\n                Trigger: {{ variable.id_trigger.nombre }}\r\n                \r\n                \"\r\n                >\r\n                  info_outlined\r\n                </mat-icon>\r\n              </div>\r\n              <button\r\n                matListItemMeta\r\n                mat-icon-button\r\n                (click)=\"openDialog(variable._id)\"\r\n              >\r\n                <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n              </button>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar una nueva variable</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"variableForm\"\r\n        (ngSubmit)=\"crearVariable()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>nombre de la variable </mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion de la variable </mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>valor del trigger </mat-label>\r\n              <input matInput formControlName=\"trigger_valor\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !variableForm.value.nombre || !variableForm.value.descripcion\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'variable-modal',\r\n  templateUrl: 'variable-modal.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class VariableModalComponent implements OnInit {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<VariableModalComponent>,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private httpService: HttpService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n  subscription!: Subscription;\r\n  listaVariables: any;\r\n\r\n  apiVariables = environment.API_URL_VARIABLES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlantas = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  userUrl = environment.API_URL_USERS;\r\n\r\n  id_localidad!: string;\r\n  id_empresa!: string;\r\n  id_planta!: string;\r\n  id_linea!: string;\r\n  id_tipoMaquina!: string;\r\n  id_maquina!: string;\r\n  id_preoceso!: string;\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.empresaSelected.subscribe(\r\n      (message) => (this.id_empresa = message)\r\n    );\r\n    this.subscription = this.service.plantaSelected.subscribe(\r\n      (message) => (this.id_planta = message)\r\n    );\r\n    this.subscription = this.service.lineaSelected.subscribe(\r\n      (message) => (this.id_linea = message)\r\n    );\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => (this.id_tipoMaquina = message)\r\n    );\r\n    this.subscription = this.service.maquinaSelected.subscribe(\r\n      (message) => (this.id_maquina = message)\r\n    );\r\n    this.subscription = this.service.procesoSelected.subscribe(\r\n      (message) => (this.id_preoceso = message)\r\n    );\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  switchDelete(id: any) {\r\n    switch (this.data.titulo) {\r\n      case 'esta empresa':\r\n        this.borrarEmpresa(id);\r\n        break;\r\n      case 'esta planta':\r\n        this.borrarPlanta(id);\r\n        break;\r\n      case 'esta linea de produccion':\r\n        this.borrarLineaProduccion(id);\r\n        break;\r\n      case 'este tipo de maquina':\r\n        this.borrarTipoMaquina(id);\r\n        break;\r\n      case 'esta maquina':\r\n        this.borrarMaquina(id);\r\n        break;\r\n      case 'este proceso':\r\n        this.borrarProcesos(id);\r\n        break;\r\n      case 'esta variable':\r\n        this.borrarVariable(id);\r\n        break;\r\n      case 'este usuario':\r\n        this.borrarUsuario(id);\r\n        break;\r\n\r\n      default:\r\n        this.toastr.warning('Error desconocido');\r\n\r\n        break;\r\n    }\r\n  }\r\n\r\n  borrarVariable(id: string) {\r\n    console.log(this.apiVariables + id);\r\n    this.service.deleteForm(this.apiVariables, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Variable borrada correctamente', '', {\r\n            toastClass: 'yourclass ngx-toastr',\r\n            positionClass: 'toast-bottom-center',\r\n          });\r\n          this.GetAllVariables();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  borrarEmpresa(id: string) {\r\n    this.service.deleteForm(this.apiEmpresas, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Empresa borrada correctamente');\r\n          this.GetEmpresasByLocalidad();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  borrarPlanta(id: string) {\r\n    console.log(this.apiPlantas + id);\r\n    this.service.deleteForm(this.apiPlantas, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Planta borrada correctamente');\r\n          this.GetPlantasByEmpresas();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  borrarLineaProduccion(id: string) {\r\n    console.log(this.apiLinea + id);\r\n    this.service.deleteForm(this.apiLinea, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Linea de produccion borrada correctamente');\r\n          this.GetLineaByPlanta();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  borrarTipoMaquina(id: string) {\r\n    console.log(this.apiTipoMaquina + id);\r\n    this.service.deleteForm(this.apiTipoMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Tipo de maquina borrada correctamente');\r\n          this.GetMaquinaByLinea();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  borrarMaquina(id: string) {\r\n    console.log(this.apiMaquina + id);\r\n    this.service.deleteForm(this.apiMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Maquina borrada correctamente');\r\n          this.GetMaquinaByLinea();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  borrarProcesos(id: string) {\r\n    console.log(this.apiProceso + id);\r\n    this.service.deleteForm(this.apiProceso, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Proceso borrado correctamente');\r\n          this.GetAllProcesos();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  borrarUsuario(id: string) {\r\n    this.service.deleteForm(this.userUrl, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Usuario borrado correctamente');\r\n          this.service.GetAll().subscribe((res) => {\r\n            this.service.streamUsers(res);\r\n          });\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  GetAllVariables() {\r\n    this.service.getForm(this.apiVariables).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.httpService.stream_Variables(res);\r\n    });\r\n  }\r\n  GetEmpresasByLocalidad() {\r\n    this.service\r\n      .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n      .subscribe((res: any) => {\r\n        console.log('Localidad-form get empresas', res);\r\n        this.service.streamEmpresas_LocalidadSelected(res);\r\n      });\r\n  }\r\n  GetPlantasByEmpresas() {\r\n    this.service\r\n      .getForm(this.apiPlantas + this.id_empresa)\r\n      .subscribe((res: any) => {\r\n        console.log('empresa get plantas', res);\r\n        this.service.streamPlantas_EmpresaSelected(res);\r\n      });\r\n  }\r\n  GetLineaByPlanta() {\r\n    this.service\r\n      .getForm(this.apiLinea + this.id_planta)\r\n      .subscribe((res: any) => {\r\n        console.log('planta get lineas', res);\r\n        this.service.streamLinea_PlantaSelected(res);\r\n      });\r\n  }\r\n  GetMaquinaByLinea() {\r\n    this.service\r\n      .getForm(this.apiMaquina + this.id_linea)\r\n      .subscribe((res: any) => {\r\n        console.log('linea get maquinas', res);\r\n        this.service.streamMaquinas_LineaSelected(res);\r\n      });\r\n  }\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.service.streamProcesos(res['datos']);\r\n    });\r\n  }\r\n  GetAllTipoMaquinas() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.service.streamTipoMaquinas(res['datos']);\r\n    });\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  <p>¿Estás seguro que deseás borrar {{data.titulo}}?</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button (click)=\"onNoClick()\">Cancelar</button>\r\n  <button\r\n    mat-raised-button\r\n    color=\"warn\"\r\n    (click)=\"switchDelete(data.variable_id)\"\r\n    cdkFocusInitial\r\n  >\r\n    Confirmar\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { inject } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivateFn,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const authGuard: CanActivateFn = (\r\n  route: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot\r\n) => {\r\n  const router = inject(Router);\r\n  const service = inject(AuthService);\r\n  const toastr = inject(ToastrService);\r\n\r\n  if (service.IsLoggedIn()) {\r\n    if (route.url.length > 0) {\r\n      let menu = route.url[0].path;\r\n      console.log('authService', menu);\r\n      if (menu == 'user' || 'admin') {\r\n        if (service.getUserRole() == 'admin') {\r\n          return true;\r\n        } else {\r\n          toastr.warning('Acceso restringido, no es administrador');\r\n          router.navigate(['']);\r\n          return false;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  } else {\r\n    router.navigate(['login']);\r\n    return false;\r\n  }\r\n};\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-login-modal',\r\n  templateUrl: './login-modal.component.html',\r\n  styleUrls: ['./login-modal.component.css'],\r\n})\r\nexport class LoginModalComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<LoginModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { isLogin: string }\r\n  ) {}\r\n\r\n  cerrar(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"flex flex-col card\">\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"80\"\r\n    height=\"80\"\r\n    viewBox=\"0 0 80 80\"\r\n    fill=\"none\"\r\n    class=\"icono\"\r\n  >\r\n    <g clip-path=\"url(#clip0_139_508)\">\r\n      <path\r\n        d=\"M40 0C32.0888 0 24.3552 2.34596 17.7772 6.74122C11.1992 11.1365 6.07234 17.3836 3.04484 24.6927C0.0173314 32.0017 -0.774802 40.0444 0.768607 47.8036C2.31202 55.5629 6.12165 62.6902 11.7157 68.2843C17.3098 73.8784 24.4372 77.688 32.1964 79.2314C39.9556 80.7748 47.9983 79.9827 55.3074 76.9552C62.6164 73.9277 68.8635 68.8008 73.2588 62.2228C77.6541 55.6448 80 47.9113 80 40C79.9885 29.3949 75.7706 19.2274 68.2716 11.7284C60.7727 4.22943 50.6052 0.0114703 40 0ZM40 73.3333C33.4073 73.3333 26.9626 71.3784 21.481 67.7157C15.9994 64.0529 11.727 58.847 9.20403 52.7561C6.68111 46.6652 6.021 39.963 7.30718 33.497C8.59335 27.031 11.768 21.0915 16.4298 16.4298C21.0915 11.768 27.031 8.59333 33.497 7.30716C39.963 6.02098 46.6653 6.6811 52.7561 9.20402C58.847 11.7269 64.053 15.9994 67.7157 21.481C71.3784 26.9626 73.3334 33.4073 73.3334 40C73.3236 48.8376 69.8086 57.3104 63.5595 63.5595C57.3104 69.8086 48.8376 73.3236 40 73.3333Z\"\r\n        fill=\"#C82D3B\"\r\n      />\r\n      <path\r\n        d=\"M40 16.6667C39.1159 16.6667 38.2681 17.0179 37.6429 17.643C37.0178 18.2681 36.6666 19.116 36.6666 20V46.6667C36.6666 47.5507 37.0178 48.3986 37.6429 49.0237C38.2681 49.6488 39.1159 50 40 50C40.884 50 41.7319 49.6488 42.357 49.0237C42.9821 48.3986 43.3333 47.5507 43.3333 46.6667V20C43.3333 19.116 42.9821 18.2681 42.357 17.643C41.7319 17.0179 40.884 16.6667 40 16.6667Z\"\r\n        fill=\"#C82D3B\"\r\n      />\r\n      <path\r\n        d=\"M43.3333 60C43.3333 58.159 41.8409 56.6666 40 56.6666C38.159 56.6666 36.6666 58.159 36.6666 60C36.6666 61.8409 38.159 63.3333 40 63.3333C41.8409 63.3333 43.3333 61.8409 43.3333 60Z\"\r\n        fill=\"#C82D3B\"\r\n      />\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_139_508\">\r\n        <rect width=\"80\" height=\"80\" fill=\"white\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n  <div *ngIf=\"data.isLogin === 'pass'\" class=\"flex flex-col card\">\r\n    <h1 mat-dialog-title class=\"titulo\">Notificar administrador</h1>\r\n    <div mat-dialog-content>\r\n      <p>Solicitar nueva contraseña de acceso al administrador</p>\r\n    </div>\r\n    <button mat-button class=\"boton\" (click)=\"cerrar()\">Aceptar</button>\r\n  </div>\r\n  <div *ngIf=\"data.isLogin === 'login'\" class=\"flex flex-col card\">\r\n    <h1 mat-dialog-title class=\"titulo\">Credenciales inválidas</h1>\r\n    <div mat-dialog-content>\r\n      <p>Usuario o contraseña incorrecta</p>\r\n    </div>\r\n    <button mat-button class=\"boton\" (click)=\"cerrar()\">\r\n      Intentar nuevamente\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Subscription, catchError, delay, BehaviorSubject, of } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogOverviewExampleDialog } from '../dialog.component';\r\nimport { LoginModalComponent } from '../login-modal/login-modal.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ListarDatosModal } from '../components/listar-datos/listar-daatos-modal/listar-datos-modal.component';\r\nimport {\r\n  DOCUMENT,\r\n  Location,\r\n  LocationStrategy,\r\n  PlatformLocation,\r\n} from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private jwtHelper: JwtHelperService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService,\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private location: Location,\r\n    private locationStrategy: LocationStrategy,\r\n    private plaformLocation: PlatformLocation\r\n  ) {}\r\n  apiUsers = environment.API_URL_USERS;\r\n  apiRole = environment.API_URL_ROLES;\r\n  authToken: any;\r\n  user: any;\r\n  tokenSubscription = new Subscription();\r\n  tokenSubscription2 = new Subscription();\r\n  timeout?: any;\r\n\r\n  private messageSource = new BehaviorSubject('default message');\r\n  //observables que recogen la respuesta de la llamada a la api\r\n  private provinciasSource = new BehaviorSubject('');\r\n  private departamentosSource = new BehaviorSubject('');\r\n  private localidadesSource = new BehaviorSubject('');\r\n  private empresasSource = new BehaviorSubject('');\r\n  private plantasSource = new BehaviorSubject('');\r\n  private lineaSource = new BehaviorSubject('');\r\n  private maquinaSource = new BehaviorSubject('');\r\n  private tipoMaquinaSource = new BehaviorSubject('');\r\n  private procesoSource = new BehaviorSubject('');\r\n  private userSource = new BehaviorSubject('');\r\n  private fullnameSource = new BehaviorSubject('');\r\n\r\n  //observables que recogen la opcion seleccionada\r\n  paisSelectedSource = new BehaviorSubject('');\r\n  provinciaSelectedSource = new BehaviorSubject('');\r\n  departamentoSelectedSource = new BehaviorSubject('');\r\n  localidadSelectedSource = new BehaviorSubject('');\r\n  empresaSelectedSource = new BehaviorSubject('');\r\n  plantaSelectedSource = new BehaviorSubject('');\r\n  lineaSelectedSource = new BehaviorSubject('');\r\n  tipoMaquinaSelectedSource = new BehaviorSubject('');\r\n  maquinaSelectedSource = new BehaviorSubject('');\r\n  procesoSelectedSource = new BehaviorSubject('');\r\n  triggerSelectedSource = new BehaviorSubject('');\r\n\r\n  currentMessage = this.messageSource.asObservable();\r\n\r\n  // guardamos la respuesta en listas que son accesibles desde los componentes\r\n  listProvincias = this.provinciasSource.asObservable();\r\n  listDepartamentos = this.departamentosSource.asObservable();\r\n  listLocalidades = this.localidadesSource.asObservable();\r\n  listEmpresas = this.empresasSource.asObservable();\r\n  listPlantas = this.plantasSource.asObservable();\r\n  listLineas = this.lineaSource.asObservable();\r\n  listMaquinas = this.maquinaSource.asObservable();\r\n  listTipoMaquina = this.tipoMaquinaSource.asObservable();\r\n  listProceso = this.procesoSource.asObservable();\r\n  listUser = this.userSource.asObservable();\r\n\r\n  // guardamos la opcion seleccionada para que sea accesible a los componentes\r\n  paisSelected = this.paisSelectedSource.asObservable();\r\n  provinciaSelected = this.provinciaSelectedSource.asObservable();\r\n  departamentoSelected = this.departamentoSelectedSource.asObservable();\r\n  localidadSelected = this.localidadSelectedSource.asObservable();\r\n  empresaSelected = this.empresaSelectedSource.asObservable();\r\n  plantaSelected = this.plantaSelectedSource.asObservable();\r\n  lineaSelected = this.lineaSelectedSource.asObservable();\r\n  tipoMaquinaSelected = this.tipoMaquinaSelectedSource.asObservable();\r\n  maquinaSelected = this.maquinaSelectedSource.asObservable();\r\n  procesoSelected = this.procesoSelectedSource.asObservable();\r\n  triggerSelected = this.triggerSelectedSource.asObservable();\r\n  fullname = this.fullnameSource.asObservable();\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '50%',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  openDialogLogin(value: string): void {\r\n    const dialogRef = this.dialog.open(LoginModalComponent, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '571px',\r\n      height: '292px',\r\n      data: { isLogin: value },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  openDialogListarDatos(): void {\r\n    const dialogRef = this.dialog.open(ListarDatosModal, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '571px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  // get\r\n\r\n  GetAll() {\r\n    return this.http.get(this.apiUsers);\r\n  }\r\n\r\n  //\r\n\r\n  GetAllRoles() {\r\n    return this.http.get(this.apiRole);\r\n  }\r\n\r\n  GetById(id: any) {\r\n    return this.http.get(this.apiUsers + '/' + id);\r\n  }\r\n\r\n  LogIn(body: any) {\r\n    console.log(`base url: ${environment.API_BASE_URL}`);\r\n    return this.http.post(this.apiUsers + 'login', body).pipe(\r\n      catchError(async (error) => {\r\n        console.log(error.message);\r\n        return error;\r\n      })\r\n    );\r\n  }\r\n  storeUserData(token: any, user: any, rtoken: any) {\r\n    console.log('storeUserData, user: ', user, 'token: ', token);\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(token)!.valueOf() -\r\n      new Date().valueOf();\r\n    sessionStorage.setItem('token', token);\r\n    sessionStorage.setItem('rtoken', rtoken);\r\n    sessionStorage.setItem('username', user.username);\r\n    sessionStorage.setItem('fullname', user.name);\r\n    sessionStorage.setItem('userrole', user.role.name);\r\n    this.authToken = token;\r\n    this.user = user;\r\n    // this.expirationCounter(this.timeout);\r\n    if (sessionStorage.getItem('userrole') == 'admin') {\r\n      this.router.navigate(['admin']);\r\n    } else {\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n\r\n  expirationCounter(timeout: any) {\r\n    console.log('timeout: ', timeout);\r\n    this.tokenSubscription.unsubscribe();\r\n    this.tokenSubscription = of(null)\r\n      .pipe(delay(timeout))\r\n      .subscribe((expired) => {\r\n        console.log('EXPIRED!!');\r\n        this.dialog.closeAll();\r\n        this.logout();\r\n        this.toastr.error('sesion expirada', 'vuelva a iniciar sesion');\r\n      });\r\n    this.pre_expirationCounter(timeout);\r\n  }\r\n\r\n  pre_expirationCounter(timeout: any) {\r\n    let timeNow = new Date();\r\n    console.log('time now: ', timeNow);\r\n    this.tokenSubscription2.unsubscribe();\r\n    this.tokenSubscription2 = of(null)\r\n      .pipe(delay(timeout - 120000))\r\n      .subscribe(() => {\r\n        this.openDialog();\r\n        console.log('about to expire !!');\r\n      });\r\n  }\r\n  logout() {\r\n    this.tokenSubscription.unsubscribe();\r\n    this.authToken = null;\r\n    this.user = null;\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/login']);\r\n    sessionStorage.setItem('token', '');\r\n    console.log(sessionStorage.getItem('token')?.toString());\r\n  }\r\n\r\n  IsLoggedIn() {\r\n    return sessionStorage.getItem('username') != null;\r\n  }\r\n  getUserRole() {\r\n    return sessionStorage.getItem('userrole') != null\r\n      ? sessionStorage.getItem('userrole')?.toString()\r\n      : '';\r\n  }\r\n\r\n  getUser() {\r\n    try {\r\n      var fullname = sessionStorage.getItem('fullname')!.toString();\r\n      this.fullnameSource.next(fullname);\r\n    } catch (error) {\r\n      console.log('getUser error: ', error);\r\n    }\r\n  }\r\n\r\n  // post\r\n  Proceedregister(inputdata: any) {\r\n    return this.http\r\n      .post(this.apiUsers, inputdata, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  UpdateUser(id: any, inputdata: any) {\r\n    return this.http.post(this.apiUsers + '/' + id, inputdata);\r\n  }\r\n\r\n  // get formularios\r\n  getForm(url: string) {\r\n    return this.http\r\n      .get(url, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          if (error.status == 403) {\r\n            this.router.navigate(['/login']);\r\n          }\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  postForm(url: string, formData: any) {\r\n    return this.http\r\n      .post(url, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  deleteForm(url: string, id: string) {\r\n    return this.http\r\n      .delete(url + 'delete/' + id, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  changeMessage(message: string) {\r\n    console.log('change message: ', message);\r\n    this.messageSource.next(message);\r\n  }\r\n  streamProvincias_PaisSelected(provincias: string) {\r\n    console.log('change message: ', provincias);\r\n    this.provinciasSource.next(provincias);\r\n  }\r\n\r\n  streamDepartamentos_ProvinciaSelected(departamentos: string) {\r\n    console.log('change message: ', departamentos);\r\n    this.departamentosSource.next(departamentos);\r\n  }\r\n  streamLocalidades_DepartamentoSelected(localidades: string) {\r\n    console.log('change message: ', localidades);\r\n    this.localidadesSource.next(localidades);\r\n  }\r\n\r\n  streamEmpresas_LocalidadSelected(empresas: string) {\r\n    console.log('change message: ', empresas);\r\n    this.empresasSource.next(empresas);\r\n  }\r\n  streamPlantas_EmpresaSelected(plantas: string) {\r\n    console.log('change message: ', plantas);\r\n    this.plantasSource.next(plantas);\r\n  }\r\n\r\n  streamLinea_PlantaSelected(linea: string) {\r\n    console.log('change message: ', linea);\r\n    this.lineaSource.next(linea);\r\n  }\r\n  streamMaquinas_LineaSelected(Maquinas: string) {\r\n    console.log('change message: ', Maquinas);\r\n    this.maquinaSource.next(Maquinas);\r\n  }\r\n  streamProcesos(Procesos: string) {\r\n    console.log('change message: ', Procesos);\r\n    this.procesoSource.next(Procesos);\r\n  }\r\n  streamTipoMaquinas(tipoMaquina: string) {\r\n    console.log('change message: ', tipoMaquina);\r\n    this.tipoMaquinaSource.next(tipoMaquina);\r\n  }\r\n  streamTipoSelected(TipoMaquina: string) {\r\n    console.log('tipo maquina selected: ', TipoMaquina);\r\n    this.tipoMaquinaSelectedSource.next(TipoMaquina);\r\n  }\r\n  streamMaquinaSelected(Maquina: string) {\r\n    console.log('maquina selected: ', Maquina);\r\n    this.maquinaSelectedSource.next(Maquina);\r\n  }\r\n  streamProcesoSelected(proceso: string) {\r\n    console.log('Proceso selected: ', proceso);\r\n    this.procesoSelectedSource.next(proceso);\r\n  }\r\n  streamTriggerSelected(trigger: string) {\r\n    console.log('Trigger selected: ', trigger);\r\n    this.triggerSelectedSource.next(trigger);\r\n  }\r\n  streamUsers(user: any) {\r\n    console.log('change message: ', user);\r\n    this.userSource.next(user);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport 'date-fns/locale';\r\nimport { Subject } from 'rxjs';\r\nChart.register(...registerables);\r\nChart.defaults.font.family = 'DIN-PRO';\r\nChart.defaults.font.size = 14;\r\nChart.defaults.font.weight = '400';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ChartGeneratorService {\r\n  chartList: any = [];\r\n  private chartListSource = new Subject();\r\n  private chartRangeSource = new Subject();\r\n  private chartIntervalInfoSource = new Subject();\r\n\r\n  listaDeCharts = this.chartListSource.asObservable();\r\n  rangeInfo = this.chartRangeSource.asObservable();\r\n  chartInfo = this.chartIntervalInfoSource.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  generate(idList: any[], decimation: any, canvasBackgroundColor?: any) {\r\n    this.chartList = [];\r\n    for (let i = 0; i < idList.length; i++) {\r\n      var generatedChart = {\r\n        chart: new Chart(idList[i].titulo, {\r\n          type: 'line',\r\n          data: {\r\n            labels: [],\r\n            datasets: [\r\n              {\r\n                data: [],\r\n                borderColor: '#062984',\r\n                backgroundColor: 'rgba(6, 41, 132, 0.35)',\r\n                label: idList[i].titulo,\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            // hay que arreglar esto para que funcione la data decimation\r\n            // Turn off animations and data parsing for performance\r\n            aspectRatio: 1,\r\n            maintainAspectRatio: false,\r\n            animation: false,\r\n            parsing: false,\r\n            plugins: {\r\n              decimation: decimation,\r\n            },\r\n            elements: {\r\n              line: {\r\n                tension: 0.5,\r\n              },\r\n            },\r\n            scales: {\r\n              y: {\r\n                type: 'linear',\r\n                beginAtZero: true,\r\n                ticks: {},\r\n                grid: {\r\n                  display: false,\r\n                },\r\n              },\r\n              x: {\r\n                type: 'time',\r\n\r\n                ticks: {\r\n                  source: 'auto',\r\n                  // Disabled rotation for performance\r\n                  maxRotation: 0,\r\n                  autoSkip: true,\r\n                },\r\n                grid: {\r\n                  display: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n          plugins: [canvasBackgroundColor],\r\n        }),\r\n        titulo: idList[i].titulo,\r\n        variable: idList[i].id,\r\n        id: i,\r\n      };\r\n      this.chartList.push(generatedChart);\r\n    }\r\n    console.log('generated charts: ', this.chartList);\r\n  }\r\n\r\n  getCharts() {\r\n    return this.chartList;\r\n  }\r\n  streamCharts(chartList: any) {\r\n    this.chartListSource.next(chartList);\r\n  }\r\n  set_Inicio_Final(inicio: string, final: string) {\r\n    this.chartRangeSource.next([inicio, final]);\r\n  }\r\n  streamChartIntervalInfo(chartInfo: any) {\r\n    this.chartIntervalInfoSource.next(chartInfo);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject, catchError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RegistroFiltrado } from '../models/datos.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpService {\r\n  registroGeneral = environment.API_URL_RGENERAL;\r\n  registroGeneralts = environment.API_URL_RGENERALTS;\r\n  variables = environment.API_URL_VARIABLES;\r\n  // chartUrl = environment.API_URL_CHARTS;\r\n  private listaVariablesSource = new Subject();\r\n  private listaRegistroFiltradoSource = new BehaviorSubject(\r\n    <RegistroFiltrado[]>[]\r\n  );\r\n  private listaRegistroFiltrado2Source = new Subject();\r\n  private listaDatosSource3 = new BehaviorSubject(<[]>[]);\r\n  private listaDatosInRangeSource = new BehaviorSubject(<[]>[]);\r\n  private listChartInfoSource = new Subject();\r\n  private listCharDatatInfoSource = new Subject();\r\n  private listIntervalSource = new Subject();\r\n  private rangeSource = new Subject();\r\n\r\n  listaVariables = this.listaVariablesSource.asObservable();\r\n  listaRegistroFiltrado = this.listaRegistroFiltradoSource.asObservable();\r\n  listaRegistroFiltrado2 = this.listaRegistroFiltrado2Source.asObservable();\r\n  listaDatos3 = this.listaDatosSource3.asObservable();\r\n  listaDatosInRange = this.listaDatosInRangeSource.asObservable();\r\n  listChartInfo = this.listChartInfoSource.asObservable();\r\n  listInterval = this.listIntervalSource.asObservable();\r\n  listChartDataInfo = this.listCharDatatInfoSource.asObservable();\r\n  rangeInfo = this.rangeSource.asObservable();\r\n  inicio_str: string = '';\r\n  final_str: string = '';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getValores(variable: string): Observable<any> {\r\n    return this.http.get(this.registroGeneralts + 'all/' + variable, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  getValoresFiltrados(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String,\r\n    operacion: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneral + `filter/${variable}/${inicio}/${fin}/${operacion}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getValoresFiltrados2(\r\n    inicio: String,\r\n    fin: String,\r\n    granularidad: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneralts + `granularidad/${inicio}/${fin}/${granularidad}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getAllInRange(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneralts + `all/${variable}/${inicio}/${fin}/`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getVariables(): Observable<any> {\r\n    return this.http.get(this.variables, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  getInterval(\r\n    inicio: string,\r\n    final: string,\r\n    unit: string,\r\n    binsize: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      `${this.registroGeneralts}intervals/${inicio}/${final}/${unit}/${binsize}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  httpGet(url: string) {\r\n    return this.http.get(url);\r\n  }\r\n  httpPost(url: string, body: any) {\r\n    return this.http\r\n      .post(url, body, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  stream_Variables(variables: any) {\r\n    this.listaVariablesSource.next(variables);\r\n  }\r\n  stream_RegistroFiltrado(datos: RegistroFiltrado[]) {\r\n    console.log('stream registro filtrado: ', datos);\r\n    this.listaRegistroFiltradoSource.next(datos);\r\n  }\r\n  stream_RegistroFiltrado2(datoGeneral: any) {\r\n    this.listaRegistroFiltrado2Source.next(datoGeneral);\r\n  }\r\n  stream_Datos3(datoGeneral: any) {\r\n    this.listaDatosSource3.next(datoGeneral);\r\n  }\r\n  stream_DatosInRange(datoGeneral: any) {\r\n    this.listaDatosInRangeSource.next(datoGeneral);\r\n  }\r\n  stream_Chart_Info(chartInfo: any) {\r\n    this.listChartInfoSource.next(chartInfo);\r\n  }\r\n  stream_ChartData_Info(chartDataInfo: any) {\r\n    this.listCharDatatInfoSource.next(chartDataInfo);\r\n  }\r\n  stream_Interval(interval: any) {\r\n    this.listIntervalSource.next(interval);\r\n  }\r\n  set_Inicio_Final(inicio: string, final: string) {\r\n    this.rangeSource.next([inicio, final]);\r\n  }\r\n  get_Inicio_Final() {\r\n    return [this.inicio_str, this.final_str];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SpinnerService {\r\n  constructor(private _spinnerService: NgxSpinnerService) {}\r\n\r\n  public llamarSpinner(spinner: string) {\r\n    this._spinnerService.show(spinner);\r\n  }\r\n  public detenerSpinner(spinner: string) {\r\n    this._spinnerService.hide(spinner);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport colorLib from '@kurkle/color';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UtilsService {\r\n  constructor() {}\r\n  private CHART_COLORS = {\r\n    strong_blue: '#062984',\r\n    medium_blue: '#1758FF',\r\n    light_blue: '#6F97FF',\r\n    red: 'rgb(255, 99, 132)',\r\n    orange: 'rgb(255, 159, 64)',\r\n    yellow: 'rgb(255, 205, 86)',\r\n    green: 'rgb(75, 192, 192)',\r\n    blue: 'rgb(54, 162, 235)',\r\n    purple: 'rgb(153, 102, 255)',\r\n    grey: 'rgb(201, 203, 207)',\r\n  };\r\n\r\n  NAMED_COLORS = [\r\n    this.CHART_COLORS.strong_blue,\r\n    this.CHART_COLORS.medium_blue,\r\n    this.CHART_COLORS.light_blue,\r\n    this.CHART_COLORS.red,\r\n    this.CHART_COLORS.orange,\r\n    this.CHART_COLORS.yellow,\r\n    this.CHART_COLORS.green,\r\n    this.CHART_COLORS.blue,\r\n    this.CHART_COLORS.purple,\r\n    this.CHART_COLORS.grey,\r\n  ];\r\n\r\n  namedColor(index: number) {\r\n    return this.NAMED_COLORS[index % this.NAMED_COLORS.length];\r\n  }\r\n  transparentize(value: string, opacity: number) {\r\n    var alpha = opacity === undefined ? 0.5 : 1 - opacity;\r\n    return colorLib(value).alpha(alpha).rgbString();\r\n  }\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function checkUpperCase(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasUpperCase = /[A-Z]+/.test(value);\r\n\r\n    const passwordValid = hasUpperCase;\r\n\r\n    return !passwordValid ? { hasUpper: true } : null;\r\n  };\r\n}\r\nexport function checkLowerCase(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasLowerCase = /[a-z]+/.test(value);\r\n\r\n    const passwordValid = hasLowerCase;\r\n\r\n    return !passwordValid ? { hasLower: true } : null;\r\n  };\r\n}\r\nexport function checkNumber(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasNumeric = /[0-9]+/.test(value);\r\n\r\n    const passwordValid = hasNumeric;\r\n\r\n    return !passwordValid ? { hasNumber: true } : null;\r\n  };\r\n}\r\nexport function checkSpecial(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasSpecial = /[$@$!%*?&]+/.test(value);\r\n\r\n    const passwordValid = hasSpecial;\r\n\r\n    return !passwordValid ? { hasSp: true } : null;\r\n  };\r\n}\r\n","var loc = location.toString().split(`/`);\r\nvar BASE_URL = `http://${loc[2]}`;\r\nexport const environment = {\r\n  production: true,\r\n  // OLD VARIABLES:\r\n  // API_URL_PAISES_OLD: `http://${BASE_URL}:3001/api/paises/`,\r\n  // API_URL_PROVINCIAS_OLD: `http://${BASE_URL}:3001/api/provincias/`,\r\n  // API_URL_LOCALIDADES_OLD: `http://${BASE_URL}:3001/api/localidad/`,\r\n  API_BASE_URL: BASE_URL,\r\n  API_URL_USERS: `${BASE_URL}:3001/api/users/`,\r\n  API_URL_ROLES: `${BASE_URL}:3001/api/role/`,\r\n  API_URL_RGENERAL: `${BASE_URL}:3001/api/registro-general/`,\r\n  API_URL_RGENERALTS: `${BASE_URL}:3001/api/registro-general-ts/`,\r\n  API_URL_VARIABLES: `${BASE_URL}:3001/api/variables/`,\r\n  API_URL_PAISES: `https://countriesnow.space/api/v0.1/countries/`,\r\n  API_URL_PROVINCIAS: `https://countriesnow.space/api/v0.1/countries/states`,\r\n  API_URL_LOCALIDADES: `https://countriesnow.space/api/v0.1/countries/state/cities`,\r\n  API_URL_EMPRESAS: `${BASE_URL}:3001/api/empresas/`,\r\n  API_URL_PLANTA: `${BASE_URL}:3001/api/empresa-planta/`,\r\n  API_URL_TIPO_MAQUINA: `${BASE_URL}:3001/api/tipo-maquina/`,\r\n  API_URL_MAQUINA: `${BASE_URL}:3001/api/maquinas/`,\r\n  API_URL_LINEA_PRODUCCION: `${BASE_URL}:3001/api/linea-produccion/`,\r\n  API_URL_PROCESO: `${BASE_URL}:3001/api/proceso/`,\r\n  API_URL_TRIGGER: `${BASE_URL}:3001/api/trigger/`,\r\n  API_URL_RTOKEN: `${BASE_URL}:3001/api/refresh`,\r\n  API_URL_ARGENTINA_PROVINCIAS: `https://apis.datos.gob.ar/georef/api/provincias?orden=nombre&campos=basico&max=30`,\r\n  API_URL_ARGENTINA_DEPARTAMENTOS: `https://apis.datos.gob.ar/georef/api/departamentos?provincia=`,\r\n  API_URL_ARGENTINA_LOCALIDADES: `https://apis.datos.gob.ar/georef/api/localidades?provincia=`,\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatStepperModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n    MatProgressSpinnerModule,\r\n    MatMenuModule,\r\n    MatProgressBarModule,\r\n    MatTabsModule,\r\n    MatButtonToggleModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","var map = {\n\t\"./af\": 5528,\n\t\"./af.js\": 5528,\n\t\"./ar\": 1036,\n\t\"./ar-dz\": 7579,\n\t\"./ar-dz.js\": 7579,\n\t\"./ar-kw\": 9588,\n\t\"./ar-kw.js\": 9588,\n\t\"./ar-ly\": 6519,\n\t\"./ar-ly.js\": 6519,\n\t\"./ar-ma\": 3258,\n\t\"./ar-ma.js\": 3258,\n\t\"./ar-ps\": 5467,\n\t\"./ar-ps.js\": 5467,\n\t\"./ar-sa\": 4085,\n\t\"./ar-sa.js\": 4085,\n\t\"./ar-tn\": 287,\n\t\"./ar-tn.js\": 287,\n\t\"./ar.js\": 1036,\n\t\"./az\": 9757,\n\t\"./az.js\": 9757,\n\t\"./be\": 9620,\n\t\"./be.js\": 9620,\n\t\"./bg\": 1139,\n\t\"./bg.js\": 1139,\n\t\"./bm\": 4042,\n\t\"./bm.js\": 4042,\n\t\"./bn\": 9641,\n\t\"./bn-bd\": 9126,\n\t\"./bn-bd.js\": 9126,\n\t\"./bn.js\": 9641,\n\t\"./bo\": 494,\n\t\"./bo.js\": 494,\n\t\"./br\": 934,\n\t\"./br.js\": 934,\n\t\"./bs\": 6274,\n\t\"./bs.js\": 6274,\n\t\"./ca\": 6077,\n\t\"./ca.js\": 6077,\n\t\"./cs\": 2354,\n\t\"./cs.js\": 2354,\n\t\"./cv\": 1258,\n\t\"./cv.js\": 1258,\n\t\"./cy\": 8774,\n\t\"./cy.js\": 8774,\n\t\"./da\": 584,\n\t\"./da.js\": 584,\n\t\"./de\": 1557,\n\t\"./de-at\": 4954,\n\t\"./de-at.js\": 4954,\n\t\"./de-ch\": 1881,\n\t\"./de-ch.js\": 1881,\n\t\"./de.js\": 1557,\n\t\"./dv\": 6475,\n\t\"./dv.js\": 6475,\n\t\"./el\": 8877,\n\t\"./el.js\": 8877,\n\t\"./en-au\": 454,\n\t\"./en-au.js\": 454,\n\t\"./en-ca\": 7356,\n\t\"./en-ca.js\": 7356,\n\t\"./en-gb\": 456,\n\t\"./en-gb.js\": 456,\n\t\"./en-ie\": 8789,\n\t\"./en-ie.js\": 8789,\n\t\"./en-il\": 5471,\n\t\"./en-il.js\": 5471,\n\t\"./en-in\": 9664,\n\t\"./en-in.js\": 9664,\n\t\"./en-nz\": 7672,\n\t\"./en-nz.js\": 7672,\n\t\"./en-sg\": 805,\n\t\"./en-sg.js\": 805,\n\t\"./eo\": 7390,\n\t\"./eo.js\": 7390,\n\t\"./es\": 1564,\n\t\"./es-do\": 1473,\n\t\"./es-do.js\": 1473,\n\t\"./es-mx\": 2089,\n\t\"./es-mx.js\": 2089,\n\t\"./es-us\": 4156,\n\t\"./es-us.js\": 4156,\n\t\"./es.js\": 1564,\n\t\"./et\": 6513,\n\t\"./et.js\": 6513,\n\t\"./eu\": 7856,\n\t\"./eu.js\": 7856,\n\t\"./fa\": 2378,\n\t\"./fa.js\": 2378,\n\t\"./fi\": 1538,\n\t\"./fi.js\": 1538,\n\t\"./fil\": 32,\n\t\"./fil.js\": 32,\n\t\"./fo\": 6845,\n\t\"./fo.js\": 6845,\n\t\"./fr\": 8875,\n\t\"./fr-ca\": 6425,\n\t\"./fr-ca.js\": 6425,\n\t\"./fr-ch\": 1746,\n\t\"./fr-ch.js\": 1746,\n\t\"./fr.js\": 8875,\n\t\"./fy\": 7037,\n\t\"./fy.js\": 7037,\n\t\"./ga\": 1217,\n\t\"./ga.js\": 1217,\n\t\"./gd\": 7010,\n\t\"./gd.js\": 7010,\n\t\"./gl\": 1931,\n\t\"./gl.js\": 1931,\n\t\"./gom-deva\": 4488,\n\t\"./gom-deva.js\": 4488,\n\t\"./gom-latn\": 8032,\n\t\"./gom-latn.js\": 8032,\n\t\"./gu\": 4984,\n\t\"./gu.js\": 4984,\n\t\"./he\": 9090,\n\t\"./he.js\": 9090,\n\t\"./hi\": 2085,\n\t\"./hi.js\": 2085,\n\t\"./hr\": 8787,\n\t\"./hr.js\": 8787,\n\t\"./hu\": 2901,\n\t\"./hu.js\": 2901,\n\t\"./hy-am\": 9819,\n\t\"./hy-am.js\": 9819,\n\t\"./id\": 4074,\n\t\"./id.js\": 4074,\n\t\"./is\": 715,\n\t\"./is.js\": 715,\n\t\"./it\": 3838,\n\t\"./it-ch\": 7040,\n\t\"./it-ch.js\": 7040,\n\t\"./it.js\": 3838,\n\t\"./ja\": 3180,\n\t\"./ja.js\": 3180,\n\t\"./jv\": 4346,\n\t\"./jv.js\": 4346,\n\t\"./ka\": 5538,\n\t\"./ka.js\": 5538,\n\t\"./kk\": 9772,\n\t\"./kk.js\": 9772,\n\t\"./km\": 7905,\n\t\"./km.js\": 7905,\n\t\"./kn\": 9125,\n\t\"./kn.js\": 9125,\n\t\"./ko\": 9140,\n\t\"./ko.js\": 9140,\n\t\"./ku\": 6780,\n\t\"./ku-kmr\": 4662,\n\t\"./ku-kmr.js\": 4662,\n\t\"./ku.js\": 6780,\n\t\"./ky\": 3768,\n\t\"./ky.js\": 3768,\n\t\"./lb\": 4016,\n\t\"./lb.js\": 4016,\n\t\"./lo\": 3169,\n\t\"./lo.js\": 3169,\n\t\"./lt\": 2353,\n\t\"./lt.js\": 2353,\n\t\"./lv\": 3243,\n\t\"./lv.js\": 3243,\n\t\"./me\": 2338,\n\t\"./me.js\": 2338,\n\t\"./mi\": 5555,\n\t\"./mi.js\": 5555,\n\t\"./mk\": 5794,\n\t\"./mk.js\": 5794,\n\t\"./ml\": 3151,\n\t\"./ml.js\": 3151,\n\t\"./mn\": 6458,\n\t\"./mn.js\": 6458,\n\t\"./mr\": 9165,\n\t\"./mr.js\": 9165,\n\t\"./ms\": 8680,\n\t\"./ms-my\": 7477,\n\t\"./ms-my.js\": 7477,\n\t\"./ms.js\": 8680,\n\t\"./mt\": 9684,\n\t\"./mt.js\": 9684,\n\t\"./my\": 285,\n\t\"./my.js\": 285,\n\t\"./nb\": 5922,\n\t\"./nb.js\": 5922,\n\t\"./ne\": 9040,\n\t\"./ne.js\": 9040,\n\t\"./nl\": 5066,\n\t\"./nl-be\": 4460,\n\t\"./nl-be.js\": 4460,\n\t\"./nl.js\": 5066,\n\t\"./nn\": 3693,\n\t\"./nn.js\": 3693,\n\t\"./oc-lnc\": 8676,\n\t\"./oc-lnc.js\": 8676,\n\t\"./pa-in\": 2341,\n\t\"./pa-in.js\": 2341,\n\t\"./pl\": 7416,\n\t\"./pl.js\": 7416,\n\t\"./pt\": 4344,\n\t\"./pt-br\": 113,\n\t\"./pt-br.js\": 113,\n\t\"./pt.js\": 4344,\n\t\"./ro\": 2643,\n\t\"./ro.js\": 2643,\n\t\"./ru\": 1305,\n\t\"./ru.js\": 1305,\n\t\"./sd\": 6095,\n\t\"./sd.js\": 6095,\n\t\"./se\": 4486,\n\t\"./se.js\": 4486,\n\t\"./si\": 8742,\n\t\"./si.js\": 8742,\n\t\"./sk\": 6722,\n\t\"./sk.js\": 6722,\n\t\"./sl\": 3345,\n\t\"./sl.js\": 3345,\n\t\"./sq\": 2416,\n\t\"./sq.js\": 2416,\n\t\"./sr\": 9450,\n\t\"./sr-cyrl\": 501,\n\t\"./sr-cyrl.js\": 501,\n\t\"./sr.js\": 9450,\n\t\"./ss\": 2222,\n\t\"./ss.js\": 2222,\n\t\"./sv\": 9454,\n\t\"./sv.js\": 9454,\n\t\"./sw\": 9638,\n\t\"./sw.js\": 9638,\n\t\"./ta\": 6494,\n\t\"./ta.js\": 6494,\n\t\"./te\": 4435,\n\t\"./te.js\": 4435,\n\t\"./tet\": 5003,\n\t\"./tet.js\": 5003,\n\t\"./tg\": 3706,\n\t\"./tg.js\": 3706,\n\t\"./th\": 6025,\n\t\"./th.js\": 6025,\n\t\"./tk\": 9780,\n\t\"./tk.js\": 9780,\n\t\"./tl-ph\": 2068,\n\t\"./tl-ph.js\": 2068,\n\t\"./tlh\": 9167,\n\t\"./tlh.js\": 9167,\n\t\"./tr\": 2494,\n\t\"./tr.js\": 2494,\n\t\"./tzl\": 8707,\n\t\"./tzl.js\": 8707,\n\t\"./tzm\": 1296,\n\t\"./tzm-latn\": 4532,\n\t\"./tzm-latn.js\": 4532,\n\t\"./tzm.js\": 1296,\n\t\"./ug-cn\": 2086,\n\t\"./ug-cn.js\": 2086,\n\t\"./uk\": 5069,\n\t\"./uk.js\": 5069,\n\t\"./ur\": 9304,\n\t\"./ur.js\": 9304,\n\t\"./uz\": 5115,\n\t\"./uz-latn\": 7609,\n\t\"./uz-latn.js\": 7609,\n\t\"./uz.js\": 5115,\n\t\"./vi\": 4802,\n\t\"./vi.js\": 4802,\n\t\"./x-pseudo\": 5605,\n\t\"./x-pseudo.js\": 5605,\n\t\"./yo\": 8456,\n\t\"./yo.js\": 8456,\n\t\"./zh-cn\": 3272,\n\t\"./zh-cn.js\": 3272,\n\t\"./zh-hk\": 9402,\n\t\"./zh-hk.js\": 9402,\n\t\"./zh-mo\": 8101,\n\t\"./zh-mo.js\": 8101,\n\t\"./zh-tw\": 262,\n\t\"./zh-tw.js\": 262\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;"],"names":["RouterModule","ListarDatosComponent","RegisterComponent","LoginComponent","UserlistingComponent","authGuard","Home5Component","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","FormControl","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r3","fullName","ɵɵelement","ɵɵtemplate","AppComponent_mat_toolbar_0_a_6_Template","AppComponent_mat_toolbar_0_a_8_Template","AppComponent_mat_toolbar_0_p_12_Template","ɵɵnamespaceSVG","ɵɵlistener","AppComponent_mat_toolbar_0_Template__svg_svg_click_13_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","logOut","ɵɵproperty","ctx_r0","isAdminUser","ɵɵattribute","iniciales","mobile","AppComponent","constructor","builder","router","service","_httpService","matIconRegistry","domSanitizer","opened","title","isMenuRequired","listVariables","listDatos","exceedList","notExceedList2","addSvgIcon","bypassSecurityTrustResourceUrl","ngOnInit","valor","group","threshold","range","start","end","granularidad","subscription3","fullname","subscribe","message","setTimeout","console","log","splitFullName","subscription","listaVariables","subscription2","listaDatosInRange","window","screen","width","ngDoCheck","currentUrl","url","getUserRole","logout","output","split","length","charAt","toUpperCase","ɵɵdirectiveInject","FormBuilder","i2","Router","i3","AuthService","i4","HttpService","i5","MatIconRegistry","i6","DomSanitizer","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_mat_toolbar_0_Template","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","BrowserAnimationsModule","MaterialModule","ToastrModule","UpdatepopupComponent","PaisFormComponent","ProvinciaFormComponent","LocalidadFormComponent","EmpresaFormComponent","EmpresaPlantaFormComponent","MaquinaFormComponent","TipoMaquinaFormComponent","LineaProduccionFormComponent","ProcesoFormComponent","VariableFormComponent","JwtModule","TriggerFormComponent","TablaComponent","NgxSpinnerModule","MatTooltipModule","LoginModalComponent","DateAdapter","MatNativeDateModule","MAT_DATE_FORMATS","MAT_DATE_LOCALE","MomentDateAdapter","DepartamentosComponent","ToolbarComponent","tokenGetter","localStorage","getItem","MY_DATE_FORMAT","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","AppModule","bootstrap","provide","useClass","deps","useValue","config","allowedDomains","declarations","MatTabGroup","jwtHelper","breakpointObserver","isTrue","isPaisCompleted","isProvinciaCompleted","isLocalidadCompleted","isEmpresaCompleted","isPlantaCompleted","isTipoMaquinaCompleted","isLineaProduccionCompleted","isMaquinaCompleted","isProcesoCompleted","isTriggerCompleted","completed","tituloTabs","selected","expirationCheck","getUser","paisSelected","provinciaSelected","localidadSelected","empresaSelected","plantaSelected","lineaSelected","tipoMaquinaSelected","maquinaSelected","procesoSelected","triggerSelected","token","sessionStorage","toString","timeout","getTokenExpirationDate","valueOf","Date","expirationCounter","nextButton","setValue","value","backButton","JwtHelperService","BreakpointObserver","viewQuery","Home5Component_Query","Home5Component_Template_mat_tab_group_selectedIndexChange_13_listener","$event","Home5Component_Template_button_click_36_listener","Home5Component_Template_button_click_38_listener","ɵɵtextInterpolate1","CommonModule","MatButtonModule","MatDialogModule","MatFormFieldModule","MatInputModule","variable_r1","nombre","ListarDatosModal","dialogRef","getVariables","data","filter","x","id_trigger","MatDialogRef","standalone","features","ɵɵStandaloneFeature","ListarDatosModal_Template","ListarDatosModal_span_5_Template","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","MatButton","NgForOf","styles","Chart","registerables","catchError","MatMenuTrigger","environment","ɵɵpropertyInterpolate","valor_r11","option","ListarDatosComponent_mat_button_toggle_35_Template_mat_button_toggle_click_0_listener","restoredCtx","_r14","time_r12","$implicit","ctx_r13","setInterval","getValuesByInterval","timeOut_r15","chart_r16","ctx_r10","selectValue","selectTime","i_r17","titulo","ɵɵpropertyInterpolate1","register","defaults","font","family","size","weight","utils","authService","spinnerService","chartService","todayDate","sensor_1","sensor_2","pulsador","id","open","chartList","chartList2","i","tabla","isOpen","selectedValue","selectedInterval","binSize","unit","selectedTime","selectTimeOut","canvasBackgroundColor","beforeDatasetsDraw","chart","args","pluginOptions","chartArea","top","bottom","left","right","height","scales","y","bgColors","bracketLow","bracketHigh","color","fillStyle","fillRect","getPixelForValue","restore","min","max","decimation","enabled","algorithm","samples","getDataColors","opacity","colors","map","API_BASE_URL","interval","intervalo","medida","tiempo","type","labels","datasets","options","elements","line","tension","aspectRatio","maintainAspectRatio","animation","beginAtZero","ticks","grid","source","maxRotation","autoSkip","plugins","getRegistros","listaRegistroFiltrado2","detenerSpinner","sortedList","item","item2","find","_id","info","sort","objA","objB","Number","date","dato","parseFloat","valor_lectura","toFixed","fecha_lectura","getTime","update","rangeInfo","rangeSub","chartInfo","changeCurrentValues","index","datos","ngOnDestroy","clearInterval","inicio","final","llamarSpinner","getValoresFiltrados2","e","j","dsColor","namedColor","dataSet","label","borderColor","backgroundColor","transparentize","push","stream_Variables","generate","getCharts","streamCharts","getFiltrados","_d","stream_RegistroFiltrado2","setInicio_final","difference","parseInt","toggleIsOpen","val","undefined","hasSinFiltro","some","openDialogListarDatos","avg","currentDateObj","millis","getInterval","pipe","_ref","_asyncToGenerator","error","_x","apply","arguments","setTime","time","UtilsService","SpinnerService","i7","ChartGeneratorService","ListarDatosComponent_Query","ListarDatosComponent_Template_div_click_5_listener","stopPropagation","ListarDatosComponent_Template_input_dateChange_19_listener","ListarDatosComponent_Template_select_change_30_listener","_r18","_r3","ɵɵreference","ListarDatosComponent_option_32_Template","ListarDatosComponent_mat_button_toggle_35_Template","ListarDatosComponent_button_40_Template","ListarDatosComponent_mat_card_content_41_Template","ListarDatosComponent_div_48_Template","_r1","_r2","_r0","Validators","checkNumber","checkSpecial","checkUpperCase","LoginComponent_div_3_Template_form_ngSubmit_5_listener","_r4","proceedLogin","LoginComponent_div_3_Template_a_click_11_listener","ctx_r5","showPass","LoginComponent_div_3_Template_a_click_17_listener","ctx_r6","openForgotPass","LoginComponent_div_3_Template_a_click_19_listener","ctx_r7","mostrarRegistro","ctx_r1","loginForm","pass","show","username","password","LoginComponent_div_4_Template_form_ngSubmit_5_listener","_r9","ctx_r8","proceedRegistration","registerForm","reset","LoginComponent_div_4_Template_a_click_15_listener","ɵɵnamespaceHTML","LoginComponent_div_4_Template_a_click_44_listener","ctx_r11","mostrarLogin","ctx_r2","errors","hasUpper","hasSp","hasNumber","name","email","toastr","showDiv","Login","Register","control","required","clear","minLength","role","isActive","LogIn","res","userData","status","success","toastClass","positionClass","storeUserData","rtoken","openDialogLogin","valid","Proceedregister","next","warning","get","ToastrService","LoginComponent_Template","LoginComponent_div_1_Template","LoginComponent_div_3_Template","LoginComponent_div_4_Template","registerform","compose","pattern","navigate","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_5_listener","MatPaginator","MatSort","MatTableDataSource","element_r10","element_r11","time_stamp","element_r12","cTime_stamp","element_r13","table","id_variable","notExceedList","csv","displayedColumns","dataSource","paginator","getInRangeTabla","removeDuplicates","ids","filtered","includes","downloadCSV","csvList","tiempo_inicio","tiempo_fin","diferencia","row","keysAmount","Object","keys","keysCounter","key","link","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","getAllInRange","n","notDuplicatedExceedList","notDuplicatedNotExceedList","stream_DatosInRange","result","notExceedListPusher","enviarDatos","formatTime","notExceed","exceed","seconds","hours","Math","floor","minutes","remainingSeconds","formattedHours","String","padStart","formattedMinutes","formattedSeconds","formatDate","getFullYear","padTo2Digits","getMonth","getDate","join","getHours","getMinutes","getSeconds","num","variableSelected","target","ExceedList","resultado","TablaComponent_Query","ɵɵelementContainerStart","TablaComponent_mat_header_cell_6_Template","TablaComponent_mat_cell_7_Template","ɵɵelementContainerEnd","TablaComponent_mat_header_cell_9_Template","TablaComponent_mat_cell_10_Template","TablaComponent_mat_header_cell_12_Template","TablaComponent_mat_cell_13_Template","TablaComponent_mat_header_cell_15_Template","TablaComponent_mat_cell_16_Template","TablaComponent_mat_header_row_17_Template","TablaComponent_mat_row_18_Template","ɵɵpureFunction0","_c0","ɵɵpropertyInterpolate3","id_proceso","descripcion","id_maquina","valor_r10","ToolbarComponent_div_27_Template_select_change_1_listener","_r12","_r8","setSelectValue","indice","ToolbarComponent_div_27_option_3_Template","ToolbarComponent_div_28_Template_input_change_1_listener","setThreshold","variable_r17","ToolbarComponent_div_29_Template_select_change_1_listener","_r19","_r15","ctx_r18","ToolbarComponent_div_29_option_5_Template","ToolbarComponent_mat_button_toggle_32_Template_mat_button_toggle_click_0_listener","_r22","time_r20","ctx_r21","setSelectTimeInterval","selectTime2","listaDeCharts","sValue","streamChartIntervalInfo","sTime","sInterval","setInicioFinal","set_Inicio_Final","JSON","stringify","datosFilter","variable","inputs","ToolbarComponent_Template","ToolbarComponent_Template_div_click_2_listener","ToolbarComponent_Template_input_dateChange_18_listener","ToolbarComponent_mat_icon_25_Template","ToolbarComponent_div_27_Template","ToolbarComponent_div_28_Template","ToolbarComponent_div_29_Template","ToolbarComponent_mat_button_toggle_32_Template","MAT_DIALOG_DATA","item_r1","dialog","GetAllRoles","rolelist","GetById","editData","updateUser","UpdateUser","close","UpdatepopupComponent_Template","UpdatepopupComponent_Template_form_ngSubmit_5_listener","UpdatepopupComponent_mat_option_13_Template","VariableModalComponent","FormGroup","element_r16","element_r17","element_r18","UserlistingComponent_mat_cell_19_Template_mat_select_valueChange_1_listener","_r21","element_r19","editable","ctx_r24","userForm","element_r22","tmp_0_0","UserlistingComponent_mat_cell_22_Template_a_click_4_listener","_r27","ctx_r26","UserlistingComponent_mat_cell_22__svg_svg_7_Template","ctx_r9","UserlistingComponent_mat_cell_25_Template_mat_select_valueChange_1_listener","_r30","element_r28","ɵɵclassMap","UserlistingComponent_mat_cell_28_Template_button_click_1_listener","_r33","element_r31","ctx_r32","openDialog","userList","userUrl","API_URL_USERS","fields","LoadUser","GetAll","streamUsers","listUser","Array","from","forEach","element","buildForm","editableToggle","guardarCambios","ulist","controls","variable_id","enable","disable","getFormControlsFields","formGroupFields","user","MatDialog","UserlistingComponent_Query","UserlistingComponent_mat_header_cell_9_Template","UserlistingComponent_mat_cell_10_Template","UserlistingComponent_mat_header_cell_12_Template","UserlistingComponent_mat_cell_13_Template","UserlistingComponent_mat_header_cell_15_Template","UserlistingComponent_mat_cell_16_Template","UserlistingComponent_mat_header_cell_18_Template","UserlistingComponent_mat_cell_19_Template","UserlistingComponent_mat_header_cell_21_Template","UserlistingComponent_mat_cell_22_Template","UserlistingComponent_mat_header_cell_24_Template","UserlistingComponent_mat_cell_25_Template","UserlistingComponent_mat_header_cell_27_Template","UserlistingComponent_mat_cell_28_Template","UserlistingComponent_mat_header_row_29_Template","UserlistingComponent_mat_row_30_Template","UserlistingComponent_Template_a_click_32_listener","UserlistingComponent_Template_a_click_36_listener","_data","_value","DialogOverviewExampleDialog","rtoken_url","API_URL_RTOKEN","rBody","onNoClick","refreshToken","postForm","resData","accessToken","setItem","DialogOverviewExampleDialog_Template","DialogOverviewExampleDialog_Template_button_click_6_listener","DialogOverviewExampleDialog_Template_button_click_8_listener","encapsulation","DepartamentosComponent_mat_option_5_Template_mat_option_click_0_listener","departamento_r1","setDepartamento","apiDepartamentos","API_URL_ARGENTINA_DEPARTAMENTOS","apiLocalidades","API_URL_ARGENTINA_LOCALIDADES","apiProvincias","API_URL_PROVINCIAS","apiEmpresas","API_URL_EMPRESAS","isOptional","departamentoForm","departamentoSelected","id_departamento","id_provincia","listDepartamentos","changeMessage","departamentoSelectedSource","GetLocalidadesByDepartamento","getForm","localidades","localidadesUnicas","streamLocalidades_DepartamentoSelected","seen","Set","filteredArr","el","duplicate","has","add","DepartamentosComponent_Template","DepartamentosComponent_mat_option_5_Template","EmpresaFormComponent_div_10_Template_mat_option_click_1_listener","empresa_r1","setEmpresa","EmpresaFormComponent_div_10_Template_button_click_5_listener","nombre_fantasia","apiLocalidad","API_URL_LOCALIDADES","apiPlantas","API_URL_PLANTA","empresaForm","razon_social","calle","altura","rubro","piso","deptartamento","id_localidad","listEmpresas","GetAllEmpresas","createEmpresa","borrarEmpresa","deleteForm","id_empresa","empresaSelectedSource","GetPlantasByEmpresas","streamPlantas_EmpresaSelected","EmpresaFormComponent_Template","EmpresaFormComponent_div_10_Template","EmpresaFormComponent_Template_form_ngSubmit_17_listener","EmpresaFormComponent_Template_form_submit_17_listener","EmpresaPlantaFormComponent_div_10_Template_mat_option_click_1_listener","planta_r1","setPlanta","EmpresaPlantaFormComponent_div_10_Template_button_click_5_listener","apiPlanta","apiLinea","API_URL_LINEA_PRODUCCION","plantaForm","listPlantas","GetAllPlantas","createPlanta","borrarPlanta","id_planta","plantaSelectedSource","GetLineaByPlanta","streamLinea_PlantaSelected","EmpresaPlantaFormComponent_Template","EmpresaPlantaFormComponent_div_10_Template","EmpresaPlantaFormComponent_Template_form_ngSubmit_17_listener","EmpresaPlantaFormComponent_Template_form_submit_17_listener","LineaProduccionFormComponent_div_10_Template_mat_option_click_1_listener","linea_r1","setLinea","LineaProduccionFormComponent_div_10_Template_button_click_7_listener","apiMaquina","API_URL_MAQUINA","lineaForm","identificador","listLineas","id_empresa_planta","GetAllLineas","createLinea","borrarLineaProduccion","id_linea","lineaSelectedSource","GetMaquinaByLinea","streamMaquinas_LineaSelected","LineaProduccionFormComponent_Template","LineaProduccionFormComponent_div_10_Template","LineaProduccionFormComponent_Template_form_ngSubmit_17_listener","LocalidadFormComponent_mat_option_5_Template_mat_option_click_0_listener","localidad_r1","setLocalidad","localidadForm","listLocalidades","GetAllLocalidades","createLocalidad","borrarLocalidad","localidadSelectedSource","GetEmpresasByLocalidad","streamEmpresas_LocalidadSelected","LocalidadFormComponent_Template","LocalidadFormComponent_mat_option_5_Template","MaquinaFormComponent_div_10_Template_mat_option_click_1_listener","maquina_r1","setMaquina","StreamMaquinaSelected","MaquinaFormComponent_div_10_Template_button_click_7_listener","detalle","apiTipoMaquina","API_URL_TIPO_MAQUINA","GetAllTipos","maquinaForm","marca","modelo","currentMessage","listMaquinas","id_linea_produccion","id_tipo_maquina","listTipoMaquina","GetAllMaquinas","createMaquina","borrarMaquina","maquina_id","streamMaquinaSelected","MaquinaFormComponent_Template","MaquinaFormComponent_div_10_Template","MaquinaFormComponent_Template_form_ngSubmit_17_listener","MaquinaFormComponent_Template_form_submit_17_listener","PaisFormComponent_mat_option_5_Template_mat_option_click_0_listener","pais_r1","setPais","country","_formBuilder","_httpservice","apiPaises","API_URL_PAISES","apiArgentinaPronvincias","API_URL_ARGENTINA_PROVINCIAS","apiProvincia","GetAllPaises","paisForm","nombre_pais","httpGet","listPaises","paisSelectedSource","GetProvinciasByPais","provincias","streamProvincias_PaisSelected","httpPost","states","PaisFormComponent_Template","PaisFormComponent_Template_mat_select_selectionChange_4_listener","PaisFormComponent_mat_option_5_Template","ProcesoFormComponent_div_10_Template_mat_option_click_1_listener","proceso_r1","setProceso","StreamProcesoSelected","ProcesoFormComponent_div_10_Template_button_click_7_listener","apiProceso","API_URL_PROCESO","GetAllProcesos","listProceso","procesoForm","crearProceso","borrarProcesos","proceso_id","streamProcesoSelected","ProcesoFormComponent_Template","ProcesoFormComponent_div_10_Template","ProcesoFormComponent_Template_form_ngSubmit_17_listener","ProcesoFormComponent_Template_form_submit_17_listener","ProvinciaFormComponent_mat_option_5_Template_mat_option_click_0_listener","provincia_r1","setProvincia","apiArgentinaDepartamentos","provinciaForm","listProvincias","listProvinciasPais","provinciaSelectedSource","GetDepartamentosByProvincia","departamentos","streamDepartamentos_ProvinciaSelected","state","ProvinciaFormComponent_Template","ProvinciaFormComponent_mat_option_5_Template","TipoMaquinaFormComponent_div_10_Template_mat_option_click_1_listener","tipo_r1","setTipo","StreamTipoSelected","TipoMaquinaFormComponent_div_10_Template_button_click_7_listener","GetAllTiposMaquina","tipoMaquinaForm","createTipoMaquina","borrarTipoMaquina","tipo_id","streamTipoSelected","TipoMaquinaFormComponent_Template","TipoMaquinaFormComponent_div_10_Template","TipoMaquinaFormComponent_Template_form_ngSubmit_17_listener","TipoMaquinaFormComponent_Template_form_submit_17_listener","TriggerFormComponent_div_10_Template_mat_option_click_1_listener","trigger_r1","setTrigger","StreamTriggerSelected","apiTrigger","API_URL_TRIGGER","GetAllTriggers","triggerForm","listTriggers","crearTrigger","borrarTrigger","trigger_descripcion","trigger_id","streamTriggerSelected","TriggerFormComponent_Template","TriggerFormComponent_div_10_Template","VariableFormComponent_mat_list_11_Template_button_click_6_listener","httpService","apiVariables","API_URL_VARIABLES","apiMaquinas","GetAllVariables","variableForm","trigger_valor","listProcesos","listMaquina","listTrigger","crearVariable","VariableFormComponent_Template","VariableFormComponent_Template_mat_expansion_panel_click_7_listener","VariableFormComponent_mat_list_11_Template","VariableFormComponent_Template_form_ngSubmit_18_listener","id_tipoMaquina","id_preoceso","switchDelete","borrarVariable","borrarUsuario","streamProcesos","GetAllTipoMaquinas","streamTipoMaquinas","VariableModalComponent_Template","VariableModalComponent_Template_button_click_4_listener","VariableModalComponent_Template_button_click_6_listener","inject","route","IsLoggedIn","menu","LoginModalComponent_div_9_Template_button_click_6_listener","cerrar","LoginModalComponent_div_10_Template_button_click_6_listener","LoginModalComponent_Template","LoginModalComponent_div_9_Template","LoginModalComponent_div_10_Template","isLogin","Subscription","delay","BehaviorSubject","of","DOCUMENT","http","location","locationStrategy","plaformLocation","apiUsers","apiRole","API_URL_ROLES","tokenSubscription","tokenSubscription2","messageSource","provinciasSource","departamentosSource","localidadesSource","empresasSource","plantasSource","lineaSource","maquinaSource","tipoMaquinaSource","procesoSource","userSource","fullnameSource","tipoMaquinaSelectedSource","maquinaSelectedSource","procesoSelectedSource","triggerSelectedSource","asObservable","enterAnimationDuration","exitAnimationDuration","afterClosed","post","authToken","unsubscribe","expired","closeAll","pre_expirationCounter","timeNow","inputdata","headers","observe","_ref2","_x2","_this","Authorization","_ref3","_x3","formData","_ref4","_x4","delete","_ref5","_x5","empresas","plantas","linea","Maquinas","Procesos","tipoMaquina","TipoMaquina","Maquina","proceso","trigger","ɵɵinject","HttpClient","Location","LocationStrategy","PlatformLocation","factory","ɵfac","providedIn","Subject","chartListSource","chartRangeSource","chartIntervalInfoSource","idList","generatedChart","parsing","registroGeneral","API_URL_RGENERAL","registroGeneralts","API_URL_RGENERALTS","variables","listaVariablesSource","listaRegistroFiltradoSource","listaRegistroFiltrado2Source","listaDatosSource3","listaDatosInRangeSource","listChartInfoSource","listCharDatatInfoSource","listIntervalSource","rangeSource","listaRegistroFiltrado","listaDatos3","listChartInfo","listInterval","listChartDataInfo","inicio_str","final_str","getValores","getValoresFiltrados","fin","operacion","binsize","stream_RegistroFiltrado","datoGeneral","stream_Datos3","stream_Chart_Info","stream_ChartData_Info","chartDataInfo","stream_Interval","get_Inicio_Final","_spinnerService","spinner","hide","NgxSpinnerService","colorLib","CHART_COLORS","strong_blue","medium_blue","light_blue","red","orange","yellow","green","blue","purple","grey","NAMED_COLORS","alpha","rgbString","hasUpperCase","test","passwordValid","checkLowerCase","hasLowerCase","hasLower","hasNumeric","hasSpecial","loc","BASE_URL","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","MatSelectModule","MatCardModule","MatRadioModule","MatCheckboxModule","MatTableModule","MatPaginatorModule","MatSortModule","MatExpansionModule","MatStepperModule","MatIconModule","MatListModule","MatChipsModule","MatDatepickerModule","MatSidenavModule","MatProgressSpinnerModule","MatMenuModule","MatProgressBarModule","MatTabsModule","MatButtonToggleModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[62]}