{"version":3,"file":"main.js","mappings":"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":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home5/home5.component.ts","./src/app/components/home5/home5.component.html","./src/app/components/listar-datos/listar-daatos-modal/listar-datos-modal.component.ts","./src/app/components/listar-datos/listar-daatos-modal/listar-datos-modal.component.html","./src/app/components/listar-datos/listar-datos-old.component.ts","./src/app/components/listar-datos/listar-datos-old.component.html","./src/app/components/listar-datos/listar-datos.component.ts","./src/app/components/listar-datos/listar-datos.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/tabla/tabla.component.ts","./src/app/components/tabla/tabla.component.html","./src/app/components/toolbar/toolbar.component.ts","./src/app/components/toolbar/toolbar.component.html","./src/app/components/updatepopup/updatepopup.component.ts","./src/app/components/updatepopup/updatepopup.component.html","./src/app/components/userlisting/userlisting.component.ts","./src/app/components/userlisting/userlisting.component.html","./src/app/dialog.component.ts","./src/app/dialog.component.html","./src/app/forms/departamentos/departamentos.component.ts","./src/app/forms/departamentos/departamentos.component.html","./src/app/forms/empresa-form/empresa-form.component.ts","./src/app/forms/empresa-form/empresa-form.component.html","./src/app/forms/empresa-planta-form/empresa-planta-form.component.ts","./src/app/forms/empresa-planta-form/empresa-planta-form.component.html","./src/app/forms/linea-produccion-form/linea-produccion-form.component.ts","./src/app/forms/linea-produccion-form/linea-produccion-form.component.html","./src/app/forms/localidad-form/localidad-form.component.ts","./src/app/forms/localidad-form/localidad-form.component.html","./src/app/forms/maquina-form/maquina-form.component.ts","./src/app/forms/maquina-form/maquina-form.component.html","./src/app/forms/pais-form/pais-form.component.ts","./src/app/forms/pais-form/pais-form.component.html","./src/app/forms/proceso-form/proceso-form.component.ts","./src/app/forms/proceso-form/proceso-form.component.html","./src/app/forms/provincia-form/provincia-form.component.ts","./src/app/forms/provincia-form/provincia-form.component.html","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.ts","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.html","./src/app/forms/trigger-form/trigger-form.component.ts","./src/app/forms/trigger-form/trigger-form.component.html","./src/app/forms/variable-form/variable-form.component.ts","./src/app/forms/variable-form/variable-form.component.html","./src/app/forms/variable-form/variable.modal.component.ts","./src/app/forms/variable-form/variable-modal.html","./src/app/guard/auth.guard.ts","./src/app/login-modal/login-modal.component.ts","./src/app/login-modal/login-modal.component.html","./src/app/service/auth.service.ts","./src/app/service/chart-generator.service.ts","./src/app/service/http.service.ts","./src/app/service/spinner.service.ts","./src/app/service/utils.service.ts","./src/app/service/validator.ts","./src/environments/environment.staging.ts","./src/main.ts","./src/material.module.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { authGuard } from './guard/auth.guard';\r\n\r\nimport { Home5Component } from './components/home5/home5.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ListarDatosComponent, canActivate: [authGuard] },\r\n  { path: 'admin', component: Home5Component, canActivate: [authGuard] },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'user', component: UserlistingComponent, canActivate: [authGuard] },\r\n  { path: '**', redirectTo: 'login', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, DoCheck, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './service/auth.service';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { HttpService } from './service/http.service';\r\nimport { Subscription, catchError } from 'rxjs';\r\nimport { Dato, RegistroFiltrado, Variable } from './models/datos.model';\r\nimport { SpinnerService } from './service/spinner.service';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UtilsService } from './service/utils.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements DoCheck, OnInit {\r\n  opened: boolean = false;\r\n  range!: FormGroup;\r\n  valor!: FormGroup;\r\n  title = 'angular-charts';\r\n  isMenuRequired = false;\r\n  isAdminUser = false;\r\n  listVariables: any = [];\r\n  chartList: any = [];\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  subscription3!: Subscription;\r\n  tipoChart!: FormGroup;\r\n  created_chart_List: any = [];\r\n  fullName!: string;\r\n  iniciales!: string;\r\n  dato!: Dato;\r\n  chartForm!: FormGroup;\r\n  fields: any = [];\r\n\r\n  chartUrl: string = environment.API_URL_CHARTS;\r\n\r\n  charts: any[] = [\r\n    { value: 'bar', viewValue: 'Barra' },\r\n    { value: 'line', viewValue: 'Linea' },\r\n  ];\r\n  mobile = false;\r\n\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private router: Router,\r\n    private service: AuthService,\r\n    private _httpService: HttpService,\r\n    private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer,\r\n    private utils: UtilsService\r\n  ) {\r\n    this.matIconRegistry.addSvgIcon(\r\n      'ajustes-deslizadores',\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n        '../assets/ajustes-deslizadores.svg'\r\n      )\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      'calendario',\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n        '../assets/calendario 2.svg'\r\n      )\r\n    );\r\n  }\r\n  ngOnInit(): void {\r\n    this.getCharts();\r\n    // this.valor = this.builder.group({\r\n    //   threshold: new FormControl<number>(25),\r\n    // });\r\n    // this.range = this.builder.group({\r\n    //   start: new FormControl<Date | null>(null),\r\n    //   end: new FormControl<Date | null>(null),\r\n    //   granularidad: new FormControl<string>('day'),\r\n    // });\r\n    this.tipoChart = this.builder.group({\r\n      tipo: new FormControl<string>(''),\r\n      titulo: new FormControl<string>(''),\r\n      variable: new FormControl<Number>(0),\r\n    });\r\n    this.subscription3 = this.service.fullname.subscribe((message) => {\r\n      setTimeout(() => {\r\n        console.log('fullname: ', message);\r\n        this.fullName = message;\r\n        this.iniciales = this.splitFullName();\r\n      }, 0);\r\n    });\r\n    this.subscription = this._httpService.listaVariables.subscribe(\r\n      (message: any) => (this.listVariables = message)\r\n    );\r\n    // this.subscription2 = this._httpService.listChartDataInfo.subscribe(\r\n    //   (data) => {\r\n    //     this.created_chart_List.push(data);\r\n    //   }\r\n    // );\r\n    this.subscription2 = this._httpService.listaDatosInRange.subscribe(\r\n      (message) => {\r\n        // console.log('app component datos in range: ', message);\r\n      }\r\n    );\r\n\r\n    if (window.screen.width < 500) {\r\n      this.mobile = true;\r\n    }\r\n  }\r\n  decimation: any = {\r\n    id: 'decimation',\r\n    enabled: true,\r\n    algorithm: 'lttb',\r\n    samples: 5000,\r\n    threshold: 1000,\r\n  };\r\n  ngDoCheck(): void {\r\n    let currentUrl = this.router.url;\r\n    if (currentUrl == '/login' || currentUrl == '/register') {\r\n      this.isMenuRequired = false;\r\n      this.opened = false;\r\n    } else {\r\n      this.isMenuRequired = true;\r\n    }\r\n    if (this.service.getUserRole() === 'admin') {\r\n      this.isAdminUser = true;\r\n    } else {\r\n      this.isAdminUser = false;\r\n    }\r\n  }\r\n  logOut() {\r\n    this.service.logout();\r\n  }\r\n\r\n  splitFullName() {\r\n    var output = this.fullName.split(' ');\r\n    var iniciales = '';\r\n    if (output.length > 1) {\r\n      iniciales = output[0].charAt(0) + output[1].charAt(0);\r\n    } else {\r\n      iniciales = output[0].charAt(0) + output[0].charAt(1);\r\n    }\r\n    console.log('iniciales: ', iniciales);\r\n    return iniciales.toUpperCase();\r\n  }\r\n\r\n  poblarChartArray() {\r\n    const createdChartItem = {\r\n      nombre: this.tipoChart.value.titulo,\r\n      variables: this.tipoChart.value.variable,\r\n      tipo: this.tipoChart.value.tipo,\r\n    };\r\n    this._httpService.stream_Chart_Info(createdChartItem);\r\n  }\r\n  getCharts() {\r\n    this._httpService\r\n      .httpGet(environment.API_URL_CHARTS)\r\n      .subscribe((data: any) => {\r\n        console.log('app component chartlist: ', data['datos']);\r\n        this.chartList = data['datos'];\r\n        this.buildForm();\r\n      });\r\n  }\r\n  logOptions(value: any) {\r\n    console.log('log options', value);\r\n  }\r\n\r\n  getFormControlsFields() {\r\n    const formGroupFields: any = {};\r\n    for (const chart of this.chartList) {\r\n      formGroupFields[chart.nombre] = new FormControl(null);\r\n\r\n      this.fields.push(chart);\r\n    }\r\n    return formGroupFields;\r\n  }\r\n  buildForm() {\r\n    const formGroupFields = this.getFormControlsFields();\r\n    this.chartForm = new FormGroup(formGroupFields);\r\n    console.log('form group fields', formGroupFields);\r\n    console.log('chartForm controls', this.chartForm);\r\n  }\r\n  comparer(o1: any, o2: any): boolean {\r\n    // if possible compare by object's name, and not by reference.\r\n    return o1 && o2 ? o1.nombre === o2.nombre : o2 === o2;\r\n  }\r\n  updateVariables(chart: any) {\r\n    console.log('update variables chart: ', chart);\r\n    console.log('chartlist: ', this.chartList);\r\n    this._httpService.stream_Chart_Info(chart);\r\n  }\r\n}\r\n","<style>\r\n  :host {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\r\n      \"Segoe UI Symbol\";\r\n    font-size: 14px;\r\n    color: #333;\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n\r\n  .toolbar {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    height: 75px;\r\n    font-weight: 600;\r\n    background: #fff;\r\n\r\n    /* shadow */\r\n    box-shadow: 0px 4px 16px 0px rgba(0, 0, 0, 0.08);\r\n  }\r\n\r\n  .navbar-menu {\r\n    cursor: pointer;\r\n  }\r\n  .navbar-menu:hover {\r\n    color: #cb3f45;\r\n  }\r\n</style>\r\n\r\n<mat-sidenav-container class=\"example-container\">\r\n  <mat-sidenav #sidenav mode=\"side\" [(opened)]=\"opened\">\r\n    <div class=\"p-3\" *ngIf=\"isAdminUser\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <h2>Crear Chart</h2>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <form\r\n            [formGroup]=\"tipoChart\"\r\n            (submit)=\"tipoChart.reset()\"\r\n            (ngSubmit)=\"poblarChartArray()\"\r\n          >\r\n            <div class=\"p-3\">\r\n              <mat-form-field>\r\n                <mat-label>tipo de chart</mat-label>\r\n                <mat-select formControlName=\"tipo\">\r\n                  <mat-option\r\n                    *ngFor=\"let chart of charts\"\r\n                    [value]=\"chart.value\"\r\n                    >{{ chart.viewValue }}</mat-option\r\n                  >\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"p-3\">\r\n              <mat-form-field>\r\n                <mat-label>Nombre del chart</mat-label>\r\n                <input matInput formControlName=\"titulo\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"p-3\">\r\n              <mat-form-field>\r\n                <mat-label>Variables</mat-label>\r\n                <mat-select formControlName=\"variable\" multiple>\r\n                  <mat-option\r\n                    *ngFor=\"let variable of listVariables\"\r\n                    [value]=\"variable\"\r\n                    >{{ variable.nombre }}</mat-option\r\n                  >\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <button\r\n              mat-raised-button\r\n              color=\"primary\"\r\n              [disabled]=\"\r\n                !tipoChart.value.tipo ||\r\n                !tipoChart.value.titulo ||\r\n                !tipoChart.value.variable\r\n              \"\r\n            >\r\n              crear chart\r\n            </button>\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div *ngFor=\"let chart of chartList\" [formGroup]=\"chartForm\">\r\n      <mat-expansion-panel hideToggle>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            {{ chart.nombre }}\r\n          </mat-panel-title>\r\n          <mat-panel-description>\r\n            Tocar para modificar las variables del chart\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Variables</mat-label>\r\n\r\n          <mat-select\r\n            multiple\r\n            formControlName=\"{{ chart.nombre }}\"\r\n            [(ngModel)]=\"chart.variables\"\r\n            [compareWith]=\"comparer\"\r\n          >\r\n            <mat-option\r\n              *ngFor=\"let variable of listVariables\"\r\n              [value]=\"variable\"\r\n              >{{ variable.nombre }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <p *ngFor=\"let variable of chart.variables\">\r\n          {{ variable.nombre }}\r\n        </p>\r\n        <button\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          (click)=\"updateVariables(chart)\"\r\n        >\r\n          Actualizar Variables\r\n        </button>\r\n      </mat-expansion-panel>\r\n    </div>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content class=\"fondo\">\r\n    <div class=\"content\" role=\"main\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    <mat-toolbar class=\"toolbar flex items-center\" *ngIf=\"isMenuRequired\">\r\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n      <div class=\"grid grid-cols-3 grid-rows-1 gap-4 content-center\">\r\n        <div class=\"col-span-1 pl-5\">\r\n          <a routerLink=\"/\" class=\"navbar-menu\">\r\n            <img\r\n              src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n              alt=\"\"\r\n              class=\"lintec_logo\"\r\n          /></a>\r\n        </div>\r\n        <div class=\"col-span-1 pt-5\">\r\n          <a *ngIf=\"isAdminUser\" routerLink=\"/admin\" class=\"navbar-menu\"\r\n            >Formularios</a\r\n          >\r\n        </div>\r\n        <div class=\"col-span-1 pt-5\">\r\n          <a *ngIf=\"isAdminUser\" routerLink=\"/user\" class=\"navbar-menu\"\r\n            >Usuarios</a\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <span class=\"spacer\"></span>\r\n      <div class=\"perfil\">\r\n        <p [attr.data-letters]=\"iniciales\" class=\"profile\"></p>\r\n        <p *ngIf=\"!mobile\" class=\"fullName\">{{ fullName }}</p>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          class=\"navbar-menu m-5\"\r\n          (click)=\"logOut()\"\r\n        >\r\n          <g clip-path=\"url(#clip0_137_246)\">\r\n            <path\r\n              d=\"M22.829 9.17192L18.95 5.29292C18.7614 5.11076 18.5088 5.00997 18.2466 5.01224C17.9844 5.01452 17.7336 5.11969 17.5482 5.3051C17.3628 5.49051 17.2576 5.74132 17.2553 6.00352C17.2531 6.26571 17.3539 6.51832 17.536 6.70692L21.415 10.5859C21.5303 10.7034 21.631 10.8344 21.715 10.9759C21.7 10.9759 21.688 10.9679 21.673 10.9679L5.98901 10.9999C5.7238 10.9999 5.46944 11.1053 5.28191 11.2928C5.09437 11.4803 4.98901 11.7347 4.98901 11.9999C4.98901 12.2651 5.09437 12.5195 5.28191 12.707C5.46944 12.8946 5.7238 12.9999 5.98901 12.9999L21.667 12.9679C21.695 12.9679 21.718 12.9539 21.745 12.9519C21.6563 13.1211 21.5438 13.2767 21.411 13.4139L17.532 17.2929C17.4365 17.3852 17.3603 17.4955 17.3079 17.6175C17.2555 17.7395 17.2279 17.8707 17.2268 18.0035C17.2256 18.1363 17.2509 18.268 17.3012 18.3909C17.3515 18.5138 17.4257 18.6254 17.5196 18.7193C17.6135 18.8132 17.7252 18.8875 17.8481 18.9377C17.971 18.988 18.1026 19.0133 18.2354 19.0122C18.3682 19.011 18.4994 18.9834 18.6214 18.931C18.7434 18.8786 18.8538 18.8024 18.946 18.7069L22.825 14.8279C23.5749 14.0778 23.9962 13.0606 23.9962 11.9999C23.9962 10.9393 23.5749 9.92203 22.825 9.17192H22.829Z\"\r\n              fill=\"#c82d3b\"\r\n            />\r\n            <path\r\n              d=\"M7 22H5C4.20435 22 3.44129 21.6839 2.87868 21.1213C2.31607 20.5587 2 19.7956 2 19V5C2 4.20435 2.31607 3.44129 2.87868 2.87868C3.44129 2.31607 4.20435 2 5 2H7C7.26522 2 7.51957 1.89464 7.70711 1.70711C7.89464 1.51957 8 1.26522 8 1C8 0.734784 7.89464 0.48043 7.70711 0.292893C7.51957 0.105357 7.26522 0 7 0L5 0C3.67441 0.00158786 2.40356 0.528882 1.46622 1.46622C0.528882 2.40356 0.00158786 3.67441 0 5L0 19C0.00158786 20.3256 0.528882 21.5964 1.46622 22.5338C2.40356 23.4711 3.67441 23.9984 5 24H7C7.26522 24 7.51957 23.8946 7.70711 23.7071C7.89464 23.5196 8 23.2652 8 23C8 22.7348 7.89464 22.4804 7.70711 22.2929C7.51957 22.1054 7.26522 22 7 22Z\"\r\n              fill=\"#c82d3b\"\r\n            />\r\n          </g>\r\n          <defs>\r\n            <clipPath id=\"clip0_137_246\">\r\n              <rect width=\"24\" height=\"24\" fill=\"white\" />\r\n            </clipPath>\r\n          </defs>\r\n        </svg>\r\n      </div>\r\n    </mat-toolbar>\r\n  </mat-sidenav-content>\r\n  <!-- Toolbar -->\r\n</mat-sidenav-container>\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// Import FusionCharts library and chart modules\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from 'src/material.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UpdatepopupComponent } from './components/updatepopup/updatepopup.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { PaisFormComponent } from './forms/pais-form/pais-form.component';\r\nimport { ProvinciaFormComponent } from './forms/provincia-form/provincia-form.component';\r\nimport { LocalidadFormComponent } from './forms/localidad-form/localidad-form.component';\r\nimport { EmpresaFormComponent } from './forms/empresa-form/empresa-form.component';\r\nimport { EmpresaPlantaFormComponent } from './forms/empresa-planta-form/empresa-planta-form.component';\r\nimport { MaquinaFormComponent } from './forms/maquina-form/maquina-form.component';\r\nimport { TipoMaquinaFormComponent } from './forms/tipo-maquina-form/tipo-maquina-form.component';\r\nimport { LineaProduccionFormComponent } from './forms/linea-produccion-form/linea-produccion-form.component';\r\nimport { ProcesoFormComponent } from './forms/proceso-form/proceso-form.component';\r\nimport { VariableFormComponent } from './forms/variable-form/variable-form.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { TriggerFormComponent } from './forms/trigger-form/trigger-form.component';\r\nimport { Home5Component } from './components/home5/home5.component';\r\nimport { TablaComponent } from './components/tabla/tabla.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { LoginModalComponent } from './login-modal/login-modal.component';\r\n\r\nimport {\r\n  DateAdapter,\r\n  MatNativeDateModule,\r\n  MAT_DATE_FORMATS,\r\n  MAT_DATE_LOCALE,\r\n} from '@angular/material/core';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DepartamentosComponent } from './forms/departamentos/departamentos.component';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\r\nimport { ListarDatosComponentOld } from './components/listar-datos/listar-datos-old.component';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\nconst MY_DATE_FORMAT = {\r\n  parse: {\r\n    dateInput: 'yyyy-MM-dd', // this is how your date will be parsed from Input\r\n  },\r\n  display: {\r\n    dateInput: 'yyyy-MM-DD', // this is how your date will get displayed on the Input\r\n    monthYearLabel: 'MMMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListarDatosComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    UpdatepopupComponent,\r\n    UserlistingComponent,\r\n    PaisFormComponent,\r\n    ProvinciaFormComponent,\r\n    LocalidadFormComponent,\r\n    EmpresaFormComponent,\r\n    EmpresaPlantaFormComponent,\r\n    MaquinaFormComponent,\r\n    TipoMaquinaFormComponent,\r\n    LineaProduccionFormComponent,\r\n    ProcesoFormComponent,\r\n    VariableFormComponent,\r\n    TriggerFormComponent,\r\n    Home5Component,\r\n    TablaComponent,\r\n    LoginModalComponent,\r\n    DepartamentosComponent,\r\n    ToolbarComponent,\r\n    ListarDatosComponentOld,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgxSpinnerModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: ['localhost'],\r\n      },\r\n    }),\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    ToastrModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE],\r\n    },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMAT },\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatStepper, StepperOrientation } from '@angular/material/stepper';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { MatTabGroup } from '@angular/material/tabs';\r\n\r\n@Component({\r\n  selector: 'app-home5',\r\n  templateUrl: './home5.component.html',\r\n  styleUrls: ['./home5.component.css'],\r\n})\r\nexport class Home5Component implements OnInit {\r\n  @ViewChild('stepper') stepper!: MatStepper;\r\n  @ViewChild(MatTabGroup) tabgroup!: MatTabGroup;\r\n  paisForm!: FormGroup;\r\n  provinciaForm!: FormGroup;\r\n  localidadForm!: FormGroup;\r\n  empresaForm!: FormGroup;\r\n  plantaForm!: FormGroup;\r\n  tipoMaquinaForm!: FormGroup;\r\n  lineaProduccionForm!: FormGroup;\r\n  maquinaForm!: FormGroup;\r\n  procesoForm!: FormGroup;\r\n  triggerForm!: FormGroup;\r\n  timeout: any;\r\n  token: any;\r\n  isTrue: boolean = false;\r\n\r\n  isPaisCompleted: boolean = false;\r\n  isProvinciaCompleted: boolean = false;\r\n  isLocalidadCompleted: boolean = false;\r\n  isEmpresaCompleted: boolean = false;\r\n  isPlantaCompleted: boolean = false;\r\n  isTipoMaquinaCompleted: boolean = false;\r\n  isLineaProduccionCompleted: boolean = false;\r\n  isMaquinaCompleted: boolean = false;\r\n  isProcesoCompleted: boolean = false;\r\n  isTriggerCompleted: boolean = false;\r\n  subscription!: Subscription;\r\n  completed: boolean = false;\r\n  tituloTabs = [\r\n    'Direccion',\r\n    'Empresa',\r\n    'Empresa/Planta',\r\n    'Línea de producción',\r\n    'Tipo de Máquina',\r\n    'Máquina',\r\n    'Proceso',\r\n    'Trigger',\r\n    'Variables',\r\n  ];\r\n  public selected = new FormControl(0);\r\n\r\n  constructor(\r\n    private service: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    breakpointObserver: BreakpointObserver\r\n  ) {}\r\n  ngOnInit() {\r\n    this.expirationCheck();\r\n    this.service.getUser();\r\n    this.subscription = this.service.paisSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPaisCompleted = true;\r\n      } else {\r\n        this.isPaisCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.provinciaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProvinciaCompleted = true;\r\n      } else {\r\n        this.isProvinciaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLocalidadCompleted = true;\r\n        this.completed = this.isLocalidadCompleted;\r\n      } else {\r\n        this.isLocalidadCompleted = false;\r\n        this.completed = this.isLocalidadCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.empresaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isEmpresaCompleted = true;\r\n        this.completed = this.isEmpresaCompleted;\r\n      } else {\r\n        this.isEmpresaCompleted = false;\r\n        this.completed = this.isEmpresaCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.plantaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPlantaCompleted = true;\r\n        this.completed = this.isPlantaCompleted;\r\n      } else {\r\n        this.isPlantaCompleted = false;\r\n        this.completed = this.isPlantaCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.lineaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLineaProduccionCompleted = true;\r\n        this.completed = this.isPlantaCompleted;\r\n      } else {\r\n        this.isLineaProduccionCompleted = false;\r\n        this.completed = this.isLocalidadCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => {\r\n        if (message != '') {\r\n          this.isTipoMaquinaCompleted = true;\r\n          this.completed = this.isTipoMaquinaCompleted;\r\n        } else {\r\n          this.isTipoMaquinaCompleted = false;\r\n          this.completed = this.isTipoMaquinaCompleted;\r\n        }\r\n      }\r\n    );\r\n    this.subscription = this.service.maquinaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isMaquinaCompleted = true;\r\n        this.completed = this.isMaquinaCompleted;\r\n      } else {\r\n        this.isMaquinaCompleted = false;\r\n        this.completed = this.isMaquinaCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.procesoSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProcesoCompleted = true;\r\n        this.completed = this.isProcesoCompleted;\r\n      } else {\r\n        this.isProcesoCompleted = false;\r\n        this.completed = this.isProcesoCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.triggerSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isTriggerCompleted = true;\r\n        this.completed = this.isTriggerCompleted;\r\n      } else {\r\n        this.isTriggerCompleted = false;\r\n        this.completed = this.isTriggerCompleted;\r\n      }\r\n    });\r\n  }\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.service.expirationCounter(this.timeout);\r\n  }\r\n  nextButton() {\r\n    this.selected.setValue(this.selected.value! + 1);\r\n    console.log(this.selected.value);\r\n    this.completed = false;\r\n  }\r\n  backButton() {\r\n    this.selected.setValue(this.selected.value! - 1);\r\n    console.log(this.selected.value);\r\n  }\r\n}\r\n","<div class=\"p-3 fondo\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div class=\"grid grid-cols-6 grid-rows-2 gap-1 m-6\">\r\n        <div class=\"col-span-5\">\r\n          <mat-progress-bar\r\n            mode=\"determinate\"\r\n            [value]=\"(selected.value ? selected.value : 0) * 12.5\"\r\n          ></mat-progress-bar>\r\n        </div>\r\n        <div class=\"col-start-6 justify-self-end\">\r\n          <p>{{ selected.value ? selected.value + 1 : 1 }} / 9</p>\r\n        </div>\r\n        <div class=\"row-start-2\">\r\n          <h2>{{ tituloTabs[selected.value || 0] }}</h2>\r\n        </div>\r\n      </div>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <mat-tab-group\r\n        class=\"invisible-tabs\"\r\n        [selectedIndex]=\"selected.value\"\r\n        (selectedIndexChange)=\"selected.setValue($event)\"\r\n      >\r\n        <mat-tab>\r\n          <app-pais-form></app-pais-form>\r\n          <app-provincia-form></app-provincia-form>\r\n          <app-departamentos></app-departamentos>\r\n          <app-localidad-form></app-localidad-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-empresa-form></app-empresa-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-empresa-planta-form></app-empresa-planta-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-linea-produccion-form></app-linea-produccion-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-tipo-maquina-form></app-tipo-maquina-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-maquina-form></app-maquina-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-proceso-form></app-proceso-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-trigger-form></app-trigger-form>\r\n        </mat-tab>\r\n        <mat-tab><app-variable-form></app-variable-form></mat-tab>\r\n      </mat-tab-group>\r\n\r\n      <div class=\"flex justify-between\">\r\n        <button\r\n          class=\"boton\"\r\n          mat-raised-button\r\n          [disabled]=\"!selected.value\"\r\n          (click)=\"backButton()\"\r\n        >\r\n          Atrás\r\n        </button>\r\n        <button\r\n          class=\"boton\"\r\n          mat-raised-button\r\n          [disabled]=\"!completed || selected.value == 8\"\r\n          (click)=\"nextButton()\"\r\n        >\r\n          Siguiente\r\n        </button>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { CommonModule, NgFor } from '@angular/common';\r\nimport { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { Subscription } from 'rxjs';\r\nimport { HttpService } from 'src/app/service/http.service';\r\n\r\n@Component({\r\n  selector: 'app-listar-datos-modal',\r\n  templateUrl: './listar-datos-modal.component.html',\r\n  styleUrls: ['./listar-datos-modal.component.css'],\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    CommonModule,\r\n    NgFor,\r\n  ],\r\n})\r\nexport class ListarDatosModal implements OnInit {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ListarDatosModal>,\r\n    private service: HttpService\r\n  ) {}\r\n  subscription!: Subscription;\r\n  listVariables: any;\r\n\r\n  ngOnInit(): void {\r\n    this.service.getVariables().subscribe((data) => {\r\n      this.listVariables = data.filter(\r\n        (x: any) =>\r\n          x.id_trigger.nombre !== 'sin-filtro' &&\r\n          x.id_trigger.nombre !== 'cambio-tiempo'\r\n      );\r\n    });\r\n  }\r\n}\r\n","<h2 mat-dialog-title class=\"titulo\">\r\n  Aviso sobre la visualización de los datos\r\n</h2>\r\n<div mat-dialog-content>\r\n  <p class=\"subtitulo\">\r\n    Es posible que los cálculos de los valores medios de las variables\r\n    <span *ngFor=\"let variable of listVariables\"> {{ variable.nombre }}, </span>\r\n    difieran de la realidad\r\n  </p>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-button [mat-dialog-close] class=\"btn-aceptar\">Aceptar</button>\r\n</div>\r\n","import { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { Chart, TooltipItem, registerables } from 'node_modules/chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { UtilsService } from 'src/app/service/utils.service';\r\nimport { Dato, RegistroFiltrado } from 'src/app/models/datos.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ToastrService } from 'ngx-toastr';\r\n// import zoomPlugin from 'chartjs-plugin-zoom';\r\nChart.register(...registerables);\r\n\r\n@Component({\r\n  selector: 'app-listar-datos-old',\r\n  templateUrl: './listar-datos-old.component.html',\r\n  styleUrls: ['./listar-datos.component.css'],\r\n})\r\nexport class ListarDatosComponentOld implements OnInit {\r\n  listDatos: any[] = [];\r\n  listDatos2: RegistroFiltrado[] = [];\r\n  listVariables: any[] = [];\r\n  listCheckbox: any[] = [];\r\n  chartList: any[] = [];\r\n  todayDate: Date = new Date();\r\n  sixMonthAgoDate!: Date;\r\n  dato!: Dato;\r\n  chart: any;\r\n  chart3: any;\r\n  title: string = 'Prueba angular';\r\n  timeout: any;\r\n  token: any;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  isAdminUser: boolean = false;\r\n  chartUrl: string = environment.API_URL_CHARTS;\r\n\r\n  canvasBackgroundColor = {\r\n    id: 'canvasBackgroundColor',\r\n    beforeDraw(chart: any, args: any, pluginOptions: any) {\r\n      const {\r\n        ctx,\r\n        chartArea: { top, bottom, left, right, width },\r\n        scales: { x, y },\r\n      } = chart;\r\n      function bgColors(\r\n        bracketLow: number,\r\n        bracketHigh: number,\r\n        color: string\r\n      ) {\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(\r\n          left,\r\n          y.getPixelForValue(bracketHigh),\r\n          width,\r\n          y.getPixelForValue(bracketLow) - y.getPixelForValue(bracketHigh)\r\n        );\r\n      }\r\n      bgColors(26.5, 35, 'rgba(255, 26, 104, 0.2)');\r\n      bgColors(24, 26.5, 'rgba(75, 192, 192, 0.2)');\r\n      bgColors(0, 24, 'rgba(255, 206, 86, 0.2)');\r\n    },\r\n  };\r\n  decimation: any = {\r\n    id: 'decimation',\r\n    enabled: true,\r\n    algorithm: 'lttb',\r\n    samples: 100,\r\n    threshold: 90,\r\n  };\r\n\r\n  opciones: any = {\r\n    aspectRatio: 1,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    parsing: false,\r\n    plugins: {\r\n      decimation: this.decimation,\r\n    },\r\n    scales: {\r\n      y: {\r\n        type: 'linear',\r\n        beginAtZero: true,\r\n        ticks: {},\r\n        grid: {},\r\n      },\r\n      'second-y-axis': {\r\n        type: 'linear',\r\n        position: 'right',\r\n      },\r\n      x: {\r\n        type: 'time',\r\n        time: {\r\n          displayFormats: {\r\n            day: 'dd/MM/yyyy',\r\n          },\r\n        },\r\n        ticks: {\r\n          maxRotation: 0,\r\n          autoSkip: true,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private utils: UtilsService,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private spinnerService: SpinnerService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.addMonths(this.todayDate, -6);\r\n    this.getVariables();\r\n    this.getChartsOnStartUp();\r\n    this.getUserRole();\r\n    this.chart = new Chart('myChart', {\r\n      type: 'line',\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            yAxisID: 'y',\r\n            data: [],\r\n          },\r\n          {\r\n            data: [],\r\n          },\r\n          {\r\n            yAxisID: 'second-y-axis',\r\n            data: [],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        // hay que arreglar esto para que funcione la data decimation\r\n        // Turn off animations and data parsing for performance\r\n        aspectRatio: 1,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        parsing: false,\r\n        plugins: {\r\n          decimation: this.decimation,\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function (tooltipItem: TooltipItem<'line'>) {\r\n                let label = tooltipItem.formattedValue;\r\n                //   this.chart.data.datasets[\r\n                //     tooltipItem.dataIndex\r\n                //   ].data[0]?.toString() || '';\r\n                return label;\r\n              },\r\n              title: function (context) {\r\n                let title = '';\r\n                // = context.forEach((e) => {\r\n                //   e.label = e.formattedValue;\r\n                // });\r\n                return title;\r\n              },\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          y: {\r\n            type: 'linear',\r\n            beginAtZero: true,\r\n            ticks: {},\r\n            grid: {},\r\n          },\r\n          'second-y-axis': {\r\n            type: 'linear',\r\n            position: 'right',\r\n          },\r\n          x: {\r\n            type: 'time',\r\n            time: {\r\n              displayFormats: {\r\n                day: 'dd/MM/yyyy',\r\n              },\r\n            },\r\n            ticks: {\r\n              maxRotation: 0,\r\n              autoSkip: true,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      plugins: [this.canvasBackgroundColor],\r\n    });\r\n\r\n    this.chart3 = new Chart('myChart3', {\r\n      type: 'doughnut',\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n            borderColor: this.getDataColors(),\r\n            backgroundColor: this.getDataColors('20'),\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        plugins: {\r\n          legend: { position: 'left' },\r\n        },\r\n        maintainAspectRatio: false,\r\n      },\r\n    });\r\n    this.subscription = this._httpService.listaRegistroFiltrado.subscribe(\r\n      (message) => {\r\n        this.listDatos2 = message;\r\n        this.chart3.data.labels = this.listDatos2.map((x) => x._id);\r\n        this.chart3.data.datasets[0].data = this.listDatos2.map((x) => x.avg);\r\n        this.chart3.update();\r\n      }\r\n    );\r\n    this.expirationCheck();\r\n\r\n    this.subscription = this._httpService.listaRegistroFiltrado2.subscribe(\r\n      (message: any) => {\r\n        console.log('mensaje registro filtrado 2: ', message);\r\n        this.listDatos = message;\r\n        if (this.listDatos.length != 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n        this.chart.data.datasets[0].data = this.listDatos.map(\r\n          (x) =>\r\n            (this.dato = {\r\n              y: parseFloat(x.max.toFixed(2)),\r\n              x: new Date(x._id).getTime() + 10800000,\r\n            })\r\n        );\r\n        this.chart.data.datasets[1].data = this.listDatos.map(\r\n          (x) =>\r\n            (this.dato = {\r\n              y: parseFloat(x.min.toFixed(2)),\r\n              x: new Date(x._id).getTime() + 10800000,\r\n            })\r\n        );\r\n\r\n        this.chart.update();\r\n\r\n        console.log(\r\n          'data set 0: ',\r\n          this.chart.data.datasets[0].data.length,\r\n          'data set 1: ',\r\n          this.chart.data.datasets[1].data.length\r\n        );\r\n      }\r\n    );\r\n    this.subscription2 = this._httpService.listChartInfo.subscribe(\r\n      (message) => {\r\n        this.poblarChartArray(message);\r\n      }\r\n    );\r\n  }\r\n\r\n  // getRegistros() {\r\n  //   this._httpService\r\n  //     .getValores(this.listVariables[1]._id)\r\n  //     .subscribe((data) => {\r\n  //       this.listDatos = data['datos'];\r\n  //       this.chart.data.datasets[0].data = this.listDatos\r\n  //         .map(\r\n  //           (x) =>\r\n  //             (this.dato = {\r\n  //               y: parseFloat(x.max.toFixed(2)),\r\n  //               x: new Date(x._id).getTime() + 10800000,\r\n  //             })\r\n  //         )\r\n  //         .filter((x) => {\r\n  //           return x.x > new Date('2023-04-30').getTime();\r\n  //         });\r\n  //       this.chart.data.datasets[1].data = this.listDatos\r\n  //         .map(\r\n  //           (x) =>\r\n  //             (this.dato = {\r\n  //               y: parseFloat(x.min.toFixed(2)),\r\n  //               x: new Date(x._id).getTime() + 10800000,\r\n  //             })\r\n  //         )\r\n  //         .filter((x) => {\r\n  //           return x.x > new Date('2023-04-30').getTime();\r\n  //         });\r\n  //       this.chart.update();\r\n  //       console.log('datos: ', this.chart.data.datasets[0].data);\r\n  //     });\r\n  // }\r\n\r\n  makeCheckboxArray(value: any) {\r\n    let newValue = JSON.parse(value.source._value);\r\n    console.log('chip presionado', newValue);\r\n    if (value.selected == true) {\r\n      this.listCheckbox.push(newValue);\r\n    } else {\r\n      function desmarcar(valor: any) {\r\n        return value.source._value != valor;\r\n      }\r\n      this.listCheckbox = this.listCheckbox.filter((x) => desmarcar(x));\r\n    }\r\n    console.log(this.listCheckbox);\r\n  }\r\n  getVariables() {\r\n    this._httpService.getVariables().subscribe((data) => {\r\n      this._httpService.stream_Variables(data);\r\n      this.listVariables = data;\r\n      console.log(this.listVariables);\r\n      // this.getRegistros();\r\n      this.chart.data.datasets[0].label = 'Pressione estrusione max';\r\n      this.chart.data.datasets[1].label = 'Pressione estrusione min';\r\n      this.chart.data.datasets[2].label = 'Corrente motore estrusore max';\r\n      this.getFiltrados();\r\n    });\r\n  }\r\n  getFiltrados() {\r\n    var inicio: any = this.sixMonthAgoDate.getTime().toString();\r\n    var final: any = this.todayDate.getTime().toString();\r\n    this._httpService\r\n      .getAllInRange(this.listVariables[1]._id, inicio, final)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this._httpService.stream_RegistroFiltrado(data['datos']);\r\n      });\r\n  }\r\n  getDaysInMonth = (year: number, month: number) =>\r\n    new Date(year, month, 0).getDate();\r\n\r\n  addMonths = (input: Date, months: number) => {\r\n    const date = new Date(input);\r\n    date.setDate(1);\r\n    date.setMonth(date.getMonth() + months);\r\n    date.setDate(\r\n      Math.min(\r\n        input.getDate(),\r\n        this.getDaysInMonth(date.getFullYear(), date.getMonth() + 1)\r\n      )\r\n    );\r\n    this.sixMonthAgoDate = date;\r\n  };\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.authService.expirationCounter(this.timeout);\r\n  }\r\n\r\n  poblarChartArray(createdChartItem: any) {\r\n    this.authService.postForm(this.chartUrl, createdChartItem).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Chart registrado correctamente');\r\n          this._httpService.httpGet(this.chartUrl).subscribe((data: any) => {\r\n            this.chartList = data['datos'];\r\n            if (this.chartList.length > 0) {\r\n              console.log('si hay datos: ', data);\r\n              for (let i = 0; i < this.chartList.length; i++) {\r\n                setTimeout(() => {\r\n                  this.renderChartOnStartUp(this.chartList[i]);\r\n                }, 500);\r\n              }\r\n            } else {\r\n              console.log('no hay datos: ', data);\r\n              setTimeout(() => {\r\n                this.renderChart(createdChartItem);\r\n              }, 500);\r\n            }\r\n          });\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  renderChart(createdChartItem: any) {\r\n    var inicio = new Date('2023-05-01').getTime().toString();\r\n    var final = new Date('2024-12-31').getTime().toString();\r\n    let datosRenderChart: any[] = [];\r\n\r\n    const createdChart = new Chart(createdChartItem.nombre, {\r\n      type: createdChartItem.tipo,\r\n      data: {\r\n        labels: [],\r\n        datasets: [],\r\n      },\r\n      options: {\r\n        aspectRatio: 1,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        parsing: false,\r\n        plugins: {\r\n          decimation: this.decimation,\r\n        },\r\n        scales: {\r\n          y: {\r\n            type: 'linear',\r\n          },\r\n          x: {\r\n            type: 'time',\r\n            ticks: {\r\n              source: 'auto',\r\n              maxRotation: 0,\r\n              autoSkip: true,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n    // console.log('variable values: ', createdChartItem.variable);\r\n    // return;\r\n\r\n    for (let i = 0; i < createdChartItem.variable.length; i++) {\r\n      const dsColor = this.utils.namedColor(i);\r\n\r\n      this._httpService\r\n        .getAllInRange(createdChartItem.variable[i]._id, inicio, final)\r\n        .subscribe((message) => {\r\n          datosRenderChart = message['datos'];\r\n          const newDataset = {\r\n            label: createdChartItem.variable[i].nombre,\r\n            data: datosRenderChart\r\n              .map(\r\n                (x) =>\r\n                  (this.dato = {\r\n                    y: parseFloat(x.max.toFixed(2)),\r\n                    x: new Date(x._id).getTime() + 10800000,\r\n                  })\r\n              )\r\n              .filter((x) => {\r\n                return x.x > new Date('2023-04-30').getTime();\r\n              }),\r\n            backgroundColor: this.utils.transparentize(dsColor, 0.5),\r\n            borderColor: dsColor,\r\n          };\r\n          createdChart.data.datasets.push(newDataset);\r\n\r\n          createdChart.update();\r\n        });\r\n    }\r\n    // console.log('created Chart: ', createdChart);\r\n  }\r\n\r\n  removerCharts(nombre: string, id: string) {\r\n    this.chartList = this.chartList.filter((chart) => {\r\n      return chart.nombre != nombre;\r\n    });\r\n    this.authService.deleteForm(this.chartUrl, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Chart borrado correctamente');\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  renderChartOnStartUp(chart: any) {\r\n    var inicio = new Date('2023-05-01').getTime().toString();\r\n    var final = new Date('2024-12-31').getTime().toString();\r\n    let datosRenderChart: any[] = [];\r\n    const createdChart = new Chart(chart.nombre, {\r\n      type: chart.tipo,\r\n      data: {\r\n        labels: [],\r\n        datasets: [],\r\n      },\r\n      options: {\r\n        aspectRatio: 1,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        parsing: false,\r\n        plugins: {\r\n          decimation: this.decimation,\r\n        },\r\n        scales: {\r\n          y: {\r\n            type: 'linear',\r\n          },\r\n          x: {\r\n            type: 'time',\r\n            ticks: {\r\n              source: 'auto',\r\n              maxRotation: 0,\r\n              autoSkip: true,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    this._httpService.stream_ChartData_Info(createdChart);\r\n    for (let i = 0; i < chart.variables.length; i++) {\r\n      const dsColor = this.utils.namedColor(i);\r\n      this._httpService\r\n        .getAllInRange(chart.variables[i]._id, inicio, final)\r\n        .subscribe((message) => {\r\n          // console.log(\r\n          //   'render chart datos',\r\n          //   message,\r\n          //   'variable:',\r\n          //   chart.variables[i].nombre\r\n          // );\r\n          datosRenderChart = message['datos'];\r\n          const newDataset = {\r\n            label: chart.variables[i].nombre,\r\n            data: datosRenderChart\r\n              .map(\r\n                (x) =>\r\n                  (this.dato = {\r\n                    y: parseFloat(x.max.toFixed(2)),\r\n                    x: new Date(x._id).getTime() + 10800000,\r\n                  })\r\n              )\r\n              .filter((x) => {\r\n                return x.x > new Date('2023-04-30').getTime();\r\n              }),\r\n            backgroundColor: this.utils.transparentize(dsColor, 0.5),\r\n            borderColor: dsColor,\r\n          };\r\n          createdChart.data.datasets.push(newDataset);\r\n\r\n          createdChart.update();\r\n        });\r\n    }\r\n    // console.log('created Chart: ', createdChart);\r\n  }\r\n\r\n  getChartsOnStartUp() {\r\n    this._httpService.httpGet(this.chartUrl).subscribe((data: any) => {\r\n      this.chartList = data['datos'];\r\n      if (this.chartList.length > 0) {\r\n        console.log('si hay datos: ', data);\r\n        for (let i = 0; i < this.chartList.length; i++) {\r\n          setTimeout(() => {\r\n            this.renderChartOnStartUp(this.chartList[i]);\r\n          }, 500);\r\n        }\r\n      } else {\r\n        console.log('no hay datos: ', data);\r\n      }\r\n    });\r\n  }\r\n\r\n  getUserRole() {\r\n    const userRole = this.authService.getUserRole();\r\n    if (userRole === 'admin') {\r\n      this.isAdminUser = true;\r\n    } else {\r\n      this.isAdminUser = false;\r\n    }\r\n  }\r\n  getDataColors = (opacity?: String) => {\r\n    const colors = [\r\n      '#7448c2',\r\n      '#21c0d7',\r\n      '#d99e2b',\r\n      '#cd3a81',\r\n      '#9c99cc',\r\n      '#e14eca',\r\n      '#ffffff',\r\n      '#ff0000',\r\n      '#d6ff00',\r\n      '#0038ff',\r\n    ];\r\n    return colors.map((color) => (opacity ? `${color + opacity}` : color));\r\n  };\r\n}\r\n","<div class=\"grid grid-flow-row grid-cols-1 sm:grid-cols-1 p-3 fondo\">\r\n  <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2>Estrusione</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart\"></canvas>\r\n        <ngx-spinner\r\n          bdColor=\"rgba(51,51,51,0.8)\"\r\n          size=\"medium\"\r\n          color=\"#fff\"\r\n          type=\"ball-spin-clockwise\"\r\n          [fullScreen]=\"false\"\r\n          name=\"grafico\"\r\n        >\r\n        </ngx-spinner>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"grid grid-flow-row grid-cols-1 sm:grid-cols-2 p-3 fondo\">\r\n  <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <h2>Presión promedio por mes</h2>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart3\"></canvas>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"p-3\">\r\n    <app-tabla></app-tabla>\r\n  </div>\r\n\r\n  <div class=\"p-3\" *ngFor=\"let chart of chartList; index as i\">\r\n    <mat-card>\r\n      <mat-card-header class=\"flex justify-between\">\r\n        <h2>{{ chart.nombre }}</h2>\r\n        <button\r\n          *ngIf=\"isAdminUser\"\r\n          mat-icon-button\r\n          (click)=\"removerCharts(chart.nombre, chart._id)\"\r\n          matTooltip=\"Eliminar un gráfico\"\r\n        >\r\n          <mat-icon color=\"warn\">cancel</mat-icon>\r\n        </button>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"{{ chart.nombre }}\"></canvas>\r\n        <ngx-spinner\r\n          bdColor=\"rgba(51,51,51,0.8)\"\r\n          size=\"medium\"\r\n          color=\"#fff\"\r\n          type=\"ball-spin-clockwise\"\r\n          [fullScreen]=\"false\"\r\n          name=\"grafico{{ i }}\"\r\n        >\r\n        </ngx-spinner>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { Chart, registerables } from 'node_modules/chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport 'date-fns/locale';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { UtilsService } from 'src/app/service/utils.service';\r\nimport { Dato, RegistroFiltrado } from 'src/app/models/datos.model';\r\nimport { Subscription, catchError } from 'rxjs';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\r\nimport { ChartGeneratorService } from 'src/app/service/chart-generator.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ToastrService } from 'ngx-toastr';\r\n// import zoomPlugin from 'chartjs-plugin-zoom';\r\nChart.register(...registerables);\r\nChart.defaults.font.family = 'DIN-PRO';\r\nChart.defaults.font.size = 14;\r\nChart.defaults.font.weight = '400';\r\n\r\n@Component({\r\n  selector: 'app-listar-datos',\r\n  templateUrl: './listar-datos.component.html',\r\n  styleUrls: ['./listar-datos.component.css'],\r\n})\r\nexport class ListarDatosComponent implements OnInit, OnDestroy {\r\n  listDatos: any;\r\n  listVariables: any[] = [];\r\n  todayDate: Date = new Date();\r\n  sixMonthAgoDate!: Date;\r\n  dato!: Dato;\r\n  id: any = 0;\r\n  chart: any;\r\n  chart3: any;\r\n  title: string = 'Prueba angular';\r\n  timeout: any;\r\n  token: any;\r\n  subscription!: Subscription;\r\n  open: boolean = false;\r\n  range!: any;\r\n  rangeSub!: any;\r\n  interval!: any;\r\n  chartList: any = [];\r\n  chartList2: any = [];\r\n  i: any = null;\r\n  tabla: any = 'tabla';\r\n  isOpen = false;\r\n  chartUrl: string = environment.API_URL_CHARTS;\r\n  selectValue: any = [\r\n    {\r\n      option: 'Media',\r\n      value: 'avg',\r\n    },\r\n    {\r\n      option: 'Mínimo',\r\n      value: 'min',\r\n    },\r\n    {\r\n      option: 'Máximo',\r\n      value: 'max',\r\n    },\r\n  ];\r\n  selectedValue = this.selectValue[2].value;\r\n  selectedInterval = this.selectValue[0];\r\n\r\n  selectTime: any = [\r\n    {\r\n      option: '1h',\r\n      value: 3600000,\r\n      binSize: 1,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '3h',\r\n      value: 10800000,\r\n      binSize: 10,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '12h',\r\n      value: 43200000,\r\n      binSize: 5,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '1d',\r\n      value: 86400000,\r\n      binSize: 15,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '3d',\r\n      value: 259200000,\r\n      binSize: 1,\r\n      unit: 'hour',\r\n    },\r\n    {\r\n      option: '1w',\r\n      value: 604800000,\r\n      binSize: 6,\r\n      unit: 'hour',\r\n    },\r\n  ];\r\n  selectedTime = this.selectTime[0];\r\n\r\n  selectTimeOut: any = [\r\n    {\r\n      option: 'Desactivado',\r\n      value: 'null',\r\n    },\r\n    {\r\n      option: '30Seg',\r\n      value: '30s',\r\n    },\r\n    {\r\n      option: '1 Minuto',\r\n      value: '1m',\r\n    },\r\n    {\r\n      option: '2 Minutos',\r\n      value: '2m',\r\n    },\r\n    {\r\n      option: '5 Minutos',\r\n      value: '5m',\r\n    },\r\n    {\r\n      option: '15 Minutos',\r\n      value: '15m',\r\n    },\r\n  ];\r\n\r\n  canvasBackgroundColor = {\r\n    id: 'canvasBackgroundColor',\r\n    beforeDatasetsDraw(chart: any, args: any, pluginOptions: any) {\r\n      const {\r\n        ctx,\r\n        chartArea: { top, bottom, left, right, width, height },\r\n        scales: { x, y },\r\n      } = chart;\r\n\r\n      function bgColors(\r\n        bracketLow: number,\r\n        bracketHigh: number,\r\n        color: string\r\n      ) {\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(\r\n          left,\r\n          y.getPixelForValue(bracketHigh),\r\n          width,\r\n          y.getPixelForValue(bracketLow) - y.getPixelForValue(bracketHigh)\r\n        );\r\n        ctx.restore();\r\n      }\r\n      bgColors(y.min, y.max, 'rgba(111, 151, 255, 0.30)');\r\n    },\r\n  };\r\n  decimation: any = {\r\n    id: 'decimation',\r\n    enabled: true,\r\n    algorithm: 'lttb',\r\n    samples: 5000,\r\n    threshold: 1000,\r\n  };\r\n  @ViewChild(MatMenuTrigger) trigger!: MatMenuTrigger;\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private utils: UtilsService,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private spinnerService: SpinnerService,\r\n    private builder: FormBuilder,\r\n    private chartService: ChartGeneratorService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    console.log(`base url listar datos: ${environment.API_BASE_URL}`);\r\n    this.getVariables();\r\n    this.authService.getUser();\r\n\r\n    this.range = this.builder.group({\r\n      start: new FormControl<Date | null>(null),\r\n      end: new FormControl<Date | null>(null),\r\n      granularidad: new FormControl<string>('day'),\r\n    });\r\n\r\n    this.interval = this.builder.group({\r\n      intervalo: new FormControl<Number | null>(1),\r\n      medida: new FormControl<String | null>('max'),\r\n      tiempo: new FormControl<Number | null>(60 * 60 * 1000),\r\n    });\r\n\r\n    this.chart = new Chart('myChart', {\r\n      type: 'line',\r\n      data: {\r\n        labels: [],\r\n        datasets: [],\r\n      },\r\n      options: {\r\n        // hay que arreglar esto para que funcione la data decimation\r\n        // Turn off animations and data parsing for performance\r\n        elements: {\r\n          line: {\r\n            tension: 0.5,\r\n          },\r\n        },\r\n        aspectRatio: 1,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            ticks: {},\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n          x: {\r\n            type: 'time',\r\n\r\n            ticks: {\r\n              source: 'auto',\r\n              // Disabled rotation for performance\r\n              maxRotation: 0,\r\n              autoSkip: true,\r\n            },\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      plugins: [this.canvasBackgroundColor], //canvasBackgroundColor,\r\n    });\r\n\r\n    this.subscription = this._httpService.listaVariables.subscribe(\r\n      (message: any) => {\r\n        this.listVariables = message;\r\n        this.getRegistros();\r\n      }\r\n    );\r\n\r\n    this.expirationCheck();\r\n\r\n    this.subscription = this._httpService.listaRegistroFiltrado2.subscribe(\r\n      (message) => {\r\n        console.log('registro filtrado 2:', message);\r\n        this.listDatos = message;\r\n        if (this.listDatos.length != 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n        var sortedList = this.listVariables;\r\n        sortedList = sortedList.map((item: { _id: any }) => {\r\n          const item2 = this.listDatos.find(\r\n            (i2: { _id: any }) => i2._id === item._id\r\n          );\r\n          return item2 ? { ...item, ...item2 } : item;\r\n        });\r\n        console.log('sortedList: ', sortedList);\r\n        for (let i = 0; i < this.listVariables.length; i++) {\r\n          this.chart.data.datasets[i].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.max.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chart.update();\r\n\r\n          if (i == this.listVariables.length - 1) {\r\n            this.spinnerService.detenerSpinner('grafico');\r\n            this.chart.update();\r\n          }\r\n        }\r\n        for (let i = 0; i < this.chartList.length; i++) {\r\n          this.chartList2[i].chart.data.datasets[0].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.min.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.min.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chartList2[i].chart.update();\r\n        }\r\n      }\r\n    );\r\n    this.subscription = this._httpService.rangeInfo.subscribe(\r\n      (message: any) => {\r\n        this.rangeSub = message;\r\n      }\r\n    );\r\n    this.subscription = this.chartService.chartInfo.subscribe(\r\n      (message: any) => {\r\n        console.log('chart info datos: ', message);\r\n        this.changeCurrentValues(\r\n          message.chart,\r\n          message.value,\r\n          this.listDatos,\r\n          message.variables,\r\n          message.index\r\n        );\r\n      }\r\n    );\r\n    this.subscription = this._httpService.listChartInfo.subscribe(\r\n      (message: any) => {\r\n        console.log('new chart: ', message);\r\n        this.chartList = message;\r\n        this.poblarChartArray(this.chartList);\r\n\r\n        console.log('chartlist: ', this.chartList);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.id) {\r\n      clearInterval(this.id);\r\n    }\r\n  }\r\n\r\n  getRegistros() {\r\n    var inicio = new Date('2023-05-01').getTime().toString();\r\n    var final = new Date('2024-12-31').getTime().toString();\r\n    var sortedList = this.listVariables;\r\n    this.spinnerService.llamarSpinner('grafico');\r\n    this._httpService\r\n      .getValoresFiltrados2(inicio, final, this.range.value.granularidad)\r\n      .subscribe((data) => {\r\n        this.listDatos = data['datos'];\r\n\r\n        sortedList = sortedList.map((item: { _id: any }) => {\r\n          const item2 = this.listDatos.find(\r\n            (i2: { _id: any }) => i2._id === item._id\r\n          );\r\n          return item2 ? { ...item, ...item2 } : item;\r\n        });\r\n        sortedList = sortedList.filter((e) => 'info' in e);\r\n        if (this.chart.data.datasets.length < sortedList.length) {\r\n          for (let j = 0; j < sortedList.length; j++) {\r\n            const dsColor = this.utils.namedColor(\r\n              this.chart.data.datasets.length\r\n            );\r\n            const dataSet = {\r\n              data: [],\r\n              label: sortedList[j].nombre,\r\n              borderColor: dsColor,\r\n              backgroundColor: this.utils.transparentize(dsColor, 0.5),\r\n            };\r\n            this.chart.data.datasets.push(dataSet);\r\n          }\r\n        }\r\n\r\n        console.log('sortedList: ', sortedList);\r\n        for (let i = 0; i < sortedList.length; i++) {\r\n          this.chart.data.datasets[i].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.max.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chart.update();\r\n\r\n          if (i == sortedList.length - 1) {\r\n            this.spinnerService.detenerSpinner('grafico');\r\n            this.chart.update();\r\n            this.getCharts();\r\n          }\r\n        }\r\n        // for (let i = 0; i < this.chartList.length; i++) {\r\n        //   this.chartList2[i].chart.data.datasets[0].data = sortedList[i]?.info\r\n        //     .sort(\r\n        //       (objA: any, objB: any) =>\r\n        //         Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n        //     )\r\n        //     .map(\r\n        //       (x: any) =>\r\n        //         (this.dato = {\r\n        //           y: parseFloat(x.min.valor_lectura.toFixed(2)),\r\n        //           x: new Date(x.min.fecha_lectura).getTime(),\r\n        //         })\r\n        //     );\r\n        //   this.chartList2[i].datos = [sortedList[i]];\r\n        //   this.chartList2[i].chart.update();\r\n        // }\r\n      });\r\n  }\r\n\r\n  getCharts() {\r\n    this._httpService\r\n      .httpGet(environment.API_URL_CHARTS)\r\n      .subscribe((data: any) => {\r\n        console.log(data['datos']);\r\n        this.chartList = data['datos'];\r\n      });\r\n\r\n    setTimeout(() => {\r\n      this.chartService.renderChart(\r\n        this.chartList,\r\n        this.canvasBackgroundColor,\r\n        this.listDatos\r\n      );\r\n      this.chartList2 = this.chartService.getCharts();\r\n      this.chartService.streamCharts(this.chartList2);\r\n    }, 1000);\r\n  }\r\n\r\n  getVariables() {\r\n    this._httpService.getVariables().subscribe((data) => {\r\n      this._httpService.stream_Variables(data);\r\n      console.log(data);\r\n\r\n      // this.chartList = [\r\n      //   {\r\n      //     titulo: data[0] ? data[0].nombre : 'myChart1',\r\n      //     id: data[0],\r\n      //   },\r\n      //   {\r\n      //     titulo: data[1] ? data[1].nombre : 'myChart2',\r\n      //     id: data[1],\r\n      //   },\r\n      //   {\r\n      //     titulo: data[2] ? data[2].nombre : 'myChart3',\r\n      //     id: data[2],\r\n      //   },\r\n      // ];\r\n    });\r\n  }\r\n\r\n  getFiltrados() {\r\n    var inicio: any = this.range.value.start._d?.getTime().toString();\r\n    var final: any = this.range.value.end._d?.getTime().toString();\r\n    this.spinnerService.llamarSpinner('grafico');\r\n    this._httpService\r\n      .getValoresFiltrados2(inicio, final, this.range.value.granularidad)\r\n      .subscribe((data) => {\r\n        // console.log(data);\r\n        this._httpService.stream_RegistroFiltrado2(data['datos']);\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n      });\r\n  }\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.authService.expirationCounter(this.timeout);\r\n  }\r\n  getDataColors = (opacity?: String) => {\r\n    const colors = [\r\n      '#7448c2',\r\n      '#21c0d7',\r\n      '#d99e2b',\r\n      '#cd3a81',\r\n      '#9c99cc',\r\n      '#e14eca',\r\n      '#ffffff',\r\n      '#ff0000',\r\n      '#d6ff00',\r\n      '#0038ff',\r\n    ];\r\n    return colors.map((color) => (opacity ? `${color + opacity}` : color));\r\n  };\r\n\r\n  setInicio_final() {\r\n    var inicio: any = this.range.value.start._d?.getTime().toString();\r\n    var final: any = this.range.value.end._d?.getTime().toString();\r\n    var difference = parseInt(final) - parseInt(inicio);\r\n    if (difference < this.selectTime[4].value) {\r\n      this.setInterval({\r\n        option: '1d',\r\n        value: 86400000,\r\n        binSize: 15,\r\n        unit: 'minute',\r\n      });\r\n    } else if (difference < this.selectTime[5].value) {\r\n      this.setInterval({\r\n        option: '3d',\r\n        value: 259200000,\r\n        binSize: 1,\r\n        unit: 'hour',\r\n      });\r\n    } else if (difference < this.selectTime[5].value * 5) {\r\n      this.setInterval({\r\n        option: '1w',\r\n        value: 604800000,\r\n        binSize: 6,\r\n        unit: 'hour',\r\n      });\r\n    } else {\r\n      //cambiar intervalo para mostrar mas puntos en el grafico, usar la version de cada 6 horas para sumar x4 los puntos a graficar\r\n      this.setInterval({\r\n        option: '1m',\r\n        value: 2419200000,\r\n        binSize: 1,\r\n        unit: 'day',\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleIsOpen() {\r\n    this.isOpen = !this.isOpen;\r\n    console.log('is open value', this.isOpen);\r\n  }\r\n  changeCurrentValues(\r\n    chart: any,\r\n    val: string,\r\n    datos: any,\r\n    listaDeVariables: any,\r\n    index?: number\r\n  ) {\r\n    console.log('change current values: ', val);\r\n    console.log('chart: ', chart);\r\n    console.log('datos: ', datos);\r\n    console.log('lista de variables', listaDeVariables);\r\n\r\n    var sortedList = listaDeVariables;\r\n    sortedList = sortedList\r\n      .map((item: { _id: any }) => {\r\n        const item2 = datos.find((i2: { _id: any }) => i2._id === item._id);\r\n        return item2;\r\n      })\r\n      .filter((e: any) => {\r\n        return e !== undefined;\r\n      });\r\n    console.log('change current values sorted list: ', sortedList);\r\n    if (datos.length > 0) {\r\n      switch (val) {\r\n        case 'max':\r\n          for (let i = 0; i < sortedList.length; i++) {\r\n            chart.data.datasets[i].data = sortedList[i]?.info\r\n              .sort(\r\n                (objA: any, objB: any) =>\r\n                  Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n              )\r\n              .map(\r\n                (x: any) =>\r\n                  (this.dato = {\r\n                    y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                    x: new Date(x.max.fecha_lectura).getTime(),\r\n                  })\r\n              );\r\n            chart.update();\r\n\r\n            if (i == sortedList.length - 1) {\r\n              this.spinnerService.detenerSpinner('grafico');\r\n              console.log('sorted list: ', sortedList);\r\n\r\n              chart.update();\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'min':\r\n          for (let i = 0; i < sortedList.length; i++) {\r\n            chart.data.datasets[i].data = sortedList[i]?.info\r\n              .sort(\r\n                (objA: any, objB: any) =>\r\n                  Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n              )\r\n              .map(\r\n                (x: any) =>\r\n                  (this.dato = {\r\n                    y: parseFloat(x.min.valor_lectura.toFixed(2)),\r\n                    x: new Date(x.min.fecha_lectura).getTime(),\r\n                  })\r\n              );\r\n            chart.update();\r\n\r\n            if (i == sortedList.length - 1) {\r\n              this.spinnerService.detenerSpinner('grafico');\r\n              console.log('sorted list: ', sortedList);\r\n\r\n              chart.update();\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'avg':\r\n          const hasSinFiltro = this.listVariables.some(\r\n            (x) => x.id_trigger.nombre === 'sin-filtro'\r\n          );\r\n          if (hasSinFiltro) {\r\n            this.authService.openDialogListarDatos();\r\n          }\r\n          for (let i = 0; i < sortedList.length; i++) {\r\n            chart.data.datasets[i].data = sortedList[i]?.info\r\n              .sort(\r\n                (objA: any, objB: any) =>\r\n                  Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n              )\r\n              .map(\r\n                (x: any) =>\r\n                  (this.dato = {\r\n                    y: parseFloat(x.avg.toFixed(2)),\r\n                    x: new Date(x.date).getTime(),\r\n                  })\r\n              );\r\n            chart.update();\r\n\r\n            if (i == sortedList.length - 1) {\r\n              this.spinnerService.detenerSpinner(`grafico${index}`);\r\n              console.log('sorted list: ', sortedList);\r\n\r\n              chart.update();\r\n            }\r\n          }\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      chart.data.datasets[0].data = [];\r\n      chart.update();\r\n      console.log('no hay datos');\r\n    }\r\n  }\r\n\r\n  getValuesByInterval() {\r\n    const currentDateObj = new Date();\r\n    const final = this.range.value.end._d\r\n      ? this.range.value.end._d?.getTime()\r\n      : currentDateObj.getTime();\r\n    const millis = this.selectedTime.value;\r\n    const inicio = this.range.value.end._d\r\n      ? this.range.value.start._d?.getTime()\r\n      : final - millis;\r\n    console.log(`get values interval inicio: ${inicio}, final: ${final}`);\r\n    this.spinnerService.llamarSpinner('grafico');\r\n    this._httpService\r\n      .getInterval(\r\n        inicio,\r\n        final,\r\n        this.selectedInterval.unit,\r\n        this.selectedInterval.binSize\r\n      )\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      )\r\n      .subscribe((data) => {\r\n        this.listDatos = data['datos'];\r\n        console.log('getInterval: ', data);\r\n\r\n        this.spinnerService.detenerSpinner('grafico');\r\n\r\n        this.changeCurrentValues(\r\n          this.chart,\r\n          this.selectedValue,\r\n          this.listDatos,\r\n          this.listVariables\r\n        );\r\n      });\r\n  }\r\n  setTime(time: any) {\r\n    this.rangeSub = [];\r\n    this.selectedTime = time;\r\n  }\r\n  setInterval(interval: any) {\r\n    this.setTime(interval.value);\r\n    this.selectedInterval = interval;\r\n  }\r\n  setValue(value: any) {\r\n    this.selectedValue = value;\r\n    this.changeCurrentValues(\r\n      this.chart,\r\n      this.selectedValue,\r\n      this.listDatos,\r\n      this.listVariables\r\n    );\r\n  }\r\n\r\n  getChartsOnStartUp() {\r\n    this._httpService.httpGet(this.chartUrl).subscribe((data: any) => {\r\n      this.chartList = data['datos'];\r\n      if (this.chartList.length > 0) {\r\n        console.log('si hay datos: ', data);\r\n        for (let i = 0; i < this.chartList.length; i++) {\r\n          setTimeout(() => {\r\n            this.renderChartOnStartUp(this.chartList[i]);\r\n          }, 500);\r\n        }\r\n      } else {\r\n        console.log('no hay datos: ', data);\r\n      }\r\n    });\r\n  }\r\n  renderChartOnStartUp(chart: any) {\r\n    console.log('render chart startup', chart);\r\n    // var inicio = new Date('2023-05-01').getTime().toString();\r\n    // var final = new Date('2024-12-31').getTime().toString();\r\n    let datosRenderChart: any[] = [];\r\n    var decimation_on_start_up: any = {\r\n      id: 'decimation',\r\n      enabled: true,\r\n      algorithm: 'lttb',\r\n      samples: 100,\r\n      threshold: 1000,\r\n    };\r\n    const createdChart = new Chart(chart.nombre, {\r\n      type: chart.tipo,\r\n      data: {\r\n        labels: [],\r\n        datasets: [],\r\n      },\r\n      options: {\r\n        // hay que arreglar esto para que funcione la data decimation\r\n        // Turn off animations and data parsing for performance\r\n        aspectRatio: 1,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        parsing: false,\r\n        plugins: {\r\n          decimation: decimation_on_start_up,\r\n        },\r\n        elements: {\r\n          line: {\r\n            tension: 0.5,\r\n          },\r\n        },\r\n        scales: {\r\n          y: {\r\n            type: 'linear',\r\n            beginAtZero: true,\r\n            ticks: {},\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n          x: {\r\n            type: 'time',\r\n\r\n            ticks: {\r\n              source: 'auto',\r\n              // Disabled rotation for performance\r\n              maxRotation: 0,\r\n              autoSkip: true,\r\n            },\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      plugins: [this.canvasBackgroundColor],\r\n    });\r\n\r\n    this._httpService.stream_ChartData_Info(createdChart);\r\n\r\n    for (let i = 0; i < chart.variables.length; i++) {\r\n      var sortedList = chart.variables;\r\n      sortedList = sortedList.map((item: { _id: any }) => {\r\n        const item2 = this.listDatos.find(\r\n          (i2: { _id: any }) => i2._id === item._id\r\n        );\r\n        return item2 ? { ...item, ...item2 } : item;\r\n      });\r\n      sortedList = sortedList.filter((e: any) => 'info' in e);\r\n      if (createdChart.data.datasets.length < sortedList.length) {\r\n        for (let j = 0; j < sortedList.length; j++) {\r\n          const dsColor = this.utils.namedColor(\r\n            createdChart.data.datasets.length\r\n          );\r\n          const dataSet = {\r\n            data: [],\r\n            label: sortedList[j].nombre,\r\n            borderColor: dsColor,\r\n            backgroundColor: this.utils.transparentize(dsColor, 0.5),\r\n          };\r\n          createdChart.data.datasets.push(dataSet);\r\n        }\r\n      }\r\n\r\n      console.log('sortedList: ', sortedList);\r\n      for (let i = 0; i < sortedList.length; i++) {\r\n        createdChart.data.datasets[i].data = sortedList[i]?.info\r\n          .sort(\r\n            (objA: any, objB: any) =>\r\n              Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n          )\r\n          .map(\r\n            (x: any) =>\r\n              (this.dato = {\r\n                y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                x: new Date(x.max.fecha_lectura).getTime(),\r\n              })\r\n          );\r\n        createdChart.update();\r\n\r\n        if (i == sortedList.length - 1) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n          createdChart.update();\r\n        }\r\n      }\r\n    }\r\n    // console.log('created Chart: ', createdChart);\r\n  }\r\n\r\n  updateChart(chart: any, createdChart: any) {\r\n    console.log('chart: ', chart, 'created chart: ', createdChart);\r\n    let datosRenderChart = [];\r\n    var inicio = new Date('2023-05-01').getTime().toString();\r\n    var final = new Date('2024-12-31').getTime().toString();\r\n    for (let i = 0; i < chart.variables.length; i++) {\r\n      const dsColor = this.utils.namedColor(i);\r\n\r\n      switch (chart.tipo) {\r\n        case 'bar':\r\n          console.log('chart tipo: ', chart.tipo);\r\n          // this._httpService\r\n          //   .getAllInRange(chart.variables[i]._id, inicio, final)\r\n          //   .subscribe((message) => {\r\n          //     datosRenderChart = message;\r\n          //     const newDataset = {\r\n          //       label: chart.variables[i].nombre,\r\n          //       data: datosRenderChart.map(\r\n          //         (x: any) =>\r\n          //           (this.dato = {\r\n          //             y: parseFloat(x.valor_lectura.toFixed(2)),\r\n          //             x: new Date(x.time_stamp).getTime(),\r\n          //           })\r\n          //       ),\r\n          //       backgroundColor: this.utils.transparentize(dsColor, 0.5),\r\n          //       borderColor: dsColor,\r\n          //     };\r\n          //     createdChart.config.data.datasets[i] = newDataset;\r\n\r\n          //     createdChart.update();\r\n          //   });\r\n          break;\r\n        case 'line':\r\n          var sortedList = chart.variables;\r\n          sortedList = sortedList.map((item: { _id: any }) => {\r\n            const item2 = this.listDatos.find(\r\n              (i2: { _id: any }) => i2._id === item._id\r\n            );\r\n            return item2 ? { ...item, ...item2 } : item;\r\n          });\r\n          sortedList = sortedList.filter((e: any) => 'info' in e);\r\n          if (createdChart.data.datasets.length < sortedList.length) {\r\n            for (let j = 0; j < sortedList.length; j++) {\r\n              const dataSet = {\r\n                data: [],\r\n                label: sortedList[j].nombre,\r\n                borderColor: dsColor,\r\n                backgroundColor: this.utils.transparentize(dsColor, 0.5),\r\n              };\r\n              createdChart.config.data.datasets[i] = dataSet;\r\n            }\r\n          }\r\n\r\n          console.log('sortedList: ', sortedList);\r\n          for (let i = 0; i < sortedList.length; i++) {\r\n            createdChart.data.datasets[i].data = sortedList[i]?.info\r\n              .sort(\r\n                (objA: any, objB: any) =>\r\n                  Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n              )\r\n              .map(\r\n                (x: any) =>\r\n                  (this.dato = {\r\n                    y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                    x: new Date(x.max.fecha_lectura).getTime(),\r\n                  })\r\n              );\r\n            createdChart.update();\r\n\r\n            if (i == sortedList.length - 1) {\r\n              createdChart.config.options.plugins.decimation = this.decimation;\r\n\r\n              createdChart.update();\r\n            }\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  poblarChartArray(createdChartItem: any) {\r\n    this.authService.postForm(this.chartUrl, createdChartItem).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Chart registrado correctamente');\r\n          this._httpService.httpGet(this.chartUrl).subscribe((data: any) => {\r\n            this.chartList = data['datos'];\r\n            if (this.chartList.length > 0) {\r\n              console.log('si hay datos: ', data['datos']);\r\n              for (let i = 0; i < this.chartList.length; i++) {\r\n                setTimeout(() => {\r\n                  this.renderChartOnStartUp(this.chartList[i]);\r\n                }, 500);\r\n              }\r\n            } else {\r\n              console.log('no hay datos: ', data['datos']);\r\n              setTimeout(() => {\r\n                this.chartService.renderChart(\r\n                  createdChartItem,\r\n                  this.canvasBackgroundColor,\r\n                  this.listDatos\r\n                );\r\n              }, 1000);\r\n            }\r\n          });\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n}\r\n","<div class=\"grid grid-flow-row grid-cols-1 sm:grid-cols-1 p-3 fondo\">\r\n  <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-menu [hasBackdrop]=\"true\" #menu=\"matMenu\" class=\"menu\">\r\n        <div\r\n          class=\"grid grid-cols-2 grid-flow-row sm:grid-cols-2 grid-row-2 gap-4 m-3\"\r\n          [formGroup]=\"range\"\r\n          (click)=\"$event.stopPropagation()\"\r\n        >\r\n          <div>\r\n            <h2 class=\"subtitulo\">Desde</h2>\r\n            <div class=\"c-input px-2\">\r\n              <input\r\n                [matDatepicker]=\"startpicker\"\r\n                formControlName=\"start\"\r\n                class=\"input-field\"\r\n                type=\"date\"\r\n              />\r\n              <mat-datepicker-toggle [for]=\"startpicker\">\r\n                <mat-icon\r\n                  svgIcon=\"calendario\"\r\n                  class=\"calendario\"\r\n                  matDatepickerToggleIcon\r\n                  iconPositionEnd\r\n                ></mat-icon>\r\n              </mat-datepicker-toggle>\r\n              <mat-datepicker #startpicker></mat-datepicker>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h2 class=\"subtitulo\">Hasta</h2>\r\n            <div class=\"c-input px-3\">\r\n              <input\r\n                formControlName=\"end\"\r\n                [matDatepicker]=\"endpicker\"\r\n                class=\"input-field\"\r\n                type=\"date\"\r\n                (dateChange)=\"[setInicio_final(), getValuesByInterval()]\"\r\n              />\r\n              <mat-datepicker-toggle [for]=\"endpicker\">\r\n                <mat-icon\r\n                  svgIcon=\"calendario\"\r\n                  class=\"calendario\"\r\n                  matDatepickerToggleIcon\r\n                  iconPositionEnd\r\n                ></mat-icon>\r\n              </mat-datepicker-toggle>\r\n              <mat-datepicker #endpicker></mat-datepicker>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-menu>\r\n      <mat-card-header\r\n        [formGroup]=\"interval\"\r\n        class=\"grid grid-cols-1 sm:grid-cols-2\"\r\n      >\r\n        <mat-card-title>\r\n          <h2 class=\"titulo\">Todas Las variables</h2>\r\n        </mat-card-title>\r\n        <div class=\"flex flex-row justify-end\">\r\n          <div class=\"d-input px-3\">\r\n            <select\r\n              class=\"input-field\"\r\n              #selectMedida\r\n              formControlName=\"medida\"\r\n              (change)=\"[setValue(selectMedida.value)]\"\r\n            >\r\n              <option\r\n                *ngFor=\"let valor of selectValue\"\r\n                value=\"{{ valor.value }}\"\r\n              >\r\n                {{ valor.option }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"pl-5\">\r\n            <mat-button-toggle-group>\r\n              <mat-button-toggle\r\n                *ngFor=\"let time of selectTime\"\r\n                [value]=\"time\"\r\n                (click)=\"[setInterval(time), getValuesByInterval()]\"\r\n              >\r\n                {{ time.option }}\r\n              </mat-button-toggle>\r\n              <mat-button-toggle [matMenuTriggerFor]=\"menu\">\r\n                <mat-icon\r\n                  svgIcon=\"calendario\"\r\n                  class=\"calendario\"\r\n                  iconPositionEnd\r\n                ></mat-icon>\r\n              </mat-button-toggle>\r\n            </mat-button-toggle-group>\r\n          </div>\r\n        </div>\r\n\r\n        <mat-menu #menuTimeout=\"matMenu\">\r\n          <button mat-menu-item *ngFor=\"let timeOut of selectTimeOut\">\r\n            {{ timeOut.option }}\r\n          </button>\r\n        </mat-menu>\r\n      </mat-card-header>\r\n      <mat-card-content\r\n        [ngStyle]=\"{ display: chart.data.datasets.length != 0 ? '' : 'none' }\"\r\n      >\r\n        <canvas id=\"myChart\"></canvas>\r\n        <ngx-spinner\r\n          bdColor=\"rgba(51,51,51,0.8)\"\r\n          size=\"medium\"\r\n          color=\"#fff\"\r\n          type=\"ball-spin-clockwise\"\r\n          [fullScreen]=\"false\"\r\n          name=\"grafico\"\r\n        >\r\n        </ngx-spinner>\r\n      </mat-card-content>\r\n      <mat-card-content #elseBlock>\r\n        <div\r\n          [ngStyle]=\"{ display: chart.data.datasets.length != 0 ? 'none' : '' }\"\r\n        >\r\n          <h1>No hay datos</h1>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  class=\"grid grid-flow-row grid-cols-1 justify-end sm:grid-cols-2 p-3 fondo\"\r\n>\r\n  <div class=\"p-3\" *ngFor=\"let chart of chartList; index as i\">\r\n    <mat-card>\r\n      <app-toolbar\r\n        [value]=\"chart\"\r\n        [selectValue]=\"selectValue\"\r\n        [selectTime]=\"selectTime\"\r\n        [indice]=\"i\"\r\n      >\r\n      </app-toolbar>\r\n\r\n      <mat-card-content>\r\n        <canvas id=\"{{ chart.nombre }}\"></canvas>\r\n        <ngx-spinner\r\n          bdColor=\"rgba(51,51,51,0.8)\"\r\n          size=\"medium\"\r\n          color=\"#fff\"\r\n          type=\"ball-spin-clockwise\"\r\n          [fullScreen]=\"false\"\r\n          name=\"grafico{{ i }}\"\r\n        >\r\n        </ngx-spinner>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"p-3\">\r\n    <app-tabla></app-tabla>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport {\r\n  checkNumber,\r\n  checkSpecial,\r\n  checkUpperCase,\r\n} from 'src/app/service/validator';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  registerForm: any;\r\n  pass: string = '';\r\n  show = false;\r\n  mobile = false;\r\n\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.pass = 'password';\r\n    if (window.screen.width < 500) {\r\n      this.mobile = true;\r\n    }\r\n    this.registerForm = this.builder.group({\r\n      username: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n      ]),\r\n      name: new FormControl('', [Validators.required, Validators.minLength(5)]),\r\n      password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n          checkUpperCase(),\r\n          checkNumber(),\r\n          checkSpecial(),\r\n        ],\r\n      ],\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      role: this.builder.control('64f1f60e918724a5f931d909'),\r\n      isActive: this.builder.control('inactive'),\r\n    });\r\n  }\r\n\r\n  showDiv = {\r\n    Login: true,\r\n    Register: false,\r\n  };\r\n\r\n  loginForm = this.builder.group({\r\n    username: this.builder.control('', Validators.required),\r\n    password: this.builder.control('', Validators.required),\r\n  });\r\n\r\n  userData: any;\r\n\r\n  proceedLogin() {\r\n    this.service.LogIn(this.loginForm.value).subscribe((res) => {\r\n      this.userData = res;\r\n      console.log(this.userData.status);\r\n      console.log(this.userData);\r\n      switch (this.userData.status) {\r\n        case 200:\r\n          if (this.userData['datos'].isActive === 'active') {\r\n            this.toastr.success('acceso concedido', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service.storeUserData(\r\n              this.userData.token,\r\n              this.userData['datos'],\r\n              this.userData.rtoken\r\n            );\r\n          } else {\r\n            this.toastr.error(\r\n              'Contactar con administrador',\r\n              'usuario inactivo'\r\n            );\r\n          }\r\n          break;\r\n        case 403:\r\n          this.service.openDialogLogin('login');\r\n          break;\r\n\r\n        default:\r\n          this.service.openDialogLogin('login');\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  proceedRegistration() {\r\n    if (this.registerForm.valid) {\r\n      console.log(this.registerForm.value);\r\n      this.service.Proceedregister(this.registerForm.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else if (res.status == 200) {\r\n            this.toastr.success(\r\n              'Solicitar acceso con el administrador ',\r\n              'Registro exitoso'\r\n            );\r\n            this.mostrarLogin();\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.toastr.warning('error', error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  mostrarLogin() {\r\n    this.showDiv.Login = true;\r\n    this.showDiv.Register = false;\r\n    this.show = false;\r\n    this.pass = 'password';\r\n  }\r\n  mostrarRegistro() {\r\n    this.showDiv.Register = true;\r\n    this.showDiv.Login = false;\r\n    this.show = false;\r\n    this.pass = 'password';\r\n  }\r\n\r\n  get password() {\r\n    return this.registerForm.get('password')!;\r\n  }\r\n\r\n  showPass() {\r\n    if (this.pass === 'password') {\r\n      this.pass = 'text';\r\n      this.show = true;\r\n    } else {\r\n      this.pass = 'password';\r\n      this.show = false;\r\n    }\r\n  }\r\n  openForgotPass() {\r\n    this.service.openDialogLogin('pass');\r\n  }\r\n}\r\n","<div class=\"grid grid-flow-row-dense grid-cols-1 sm:grid-cols-2\">\r\n  <div *ngIf=\"!mobile\" class=\"row-span-1 col-span-1\">\r\n    <img src=\"assets/g850.png\" alt=\"\" class=\"login\" />\r\n  </div>\r\n\r\n  <div class=\"row-span-1 col-span-1\">\r\n    <div class=\"carta flex flex-col col-span-1\" *ngIf=\"showDiv.Login\">\r\n      <div class=\"logo\">\r\n        <img\r\n          src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n          alt=\"\"\r\n          class=\"linetec_logo m-5\"\r\n        />\r\n        <h2 class=\"titulo\">Iniciar sesión</h2>\r\n      </div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"loginForm\"\r\n        (ngSubmit)=\"proceedLogin()\"\r\n      >\r\n        <div class=\"flex flex-col\">\r\n          <mat-form-field class=\"m-input\">\r\n            <input matInput placeholder=\"Usuario\" formControlName=\"username\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              [type]=\"pass\"\r\n              matInput\r\n              placeholder=\"Contraseña\"\r\n              formControlName=\"password\"\r\n            />\r\n            <a\r\n              matSuffix\r\n              style=\"cursor: pointer\"\r\n              (click)=\"showPass()\"\r\n              class=\"p-2\"\r\n            >\r\n              <mat-icon>{{ show ? \"visibility\" : \"visibility_off\" }}</mat-icon>\r\n            </a>\r\n          </mat-form-field>\r\n          <div class=\"space-y-[10vh] 2xl:space-y-[40vh]\">\r\n            <button\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !loginForm.value.username || !loginForm.value.password\r\n              \"\r\n              id=\"boton2\"\r\n              class=\"mb-5\"\r\n            >\r\n              Ingresar\r\n            </button>\r\n            <a class=\"link p-3\" (click)=\"openForgotPass()\">\r\n              Olvidé mi contraseña\r\n            </a>\r\n            <a mat-raised-button (click)=\"mostrarRegistro()\" id=\"boton\">\r\n              Registrar Usuario\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"carta col-span-1\" *ngIf=\"showDiv.Register\">\r\n      <div class=\"logo\">\r\n        <img\r\n          src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n          alt=\"\"\r\n          class=\"linetec_logo m-5 p-3\"\r\n        />\r\n        <h2 class=\"titulo\">Registro de usuario</h2>\r\n      </div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"registerForm\"\r\n        (ngSubmit)=\"[proceedRegistration(), registerForm.reset()]\"\r\n      >\r\n        <div class=\"flex flex-col p-5\">\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Nombre de usuario\"\r\n              formControlName=\"username\"\r\n            />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Nombre y apellido\"\r\n              formControlName=\"name\"\r\n            />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input matInput placeholder=\"Email\" formControlName=\"email\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              [type]=\"pass\"\r\n              matInput\r\n              placeholder=\"Contraseña\"\r\n              formControlName=\"password\"\r\n            />\r\n            <a\r\n              matSuffix\r\n              style=\"cursor: pointer\"\r\n              (click)=\"showPass()\"\r\n              class=\"p-2\"\r\n            >\r\n              <mat-icon>{{ show ? \"visibility\" : \"visibility_off\" }}</mat-icon>\r\n            </a>\r\n          </mat-form-field>\r\n          <div class=\"m-input\">\r\n            <h2>REQUISITOS</h2>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                    !password.value || password.errors?.hasUpper\r\n                      ? ''\r\n                      : 'iconFill'\r\n                  \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n\r\n              <p\r\n                [ngClass]=\"\r\n                  !password.value || password.errors?.hasUpper\r\n                    ? ''\r\n                    : 'requisitos'\r\n                \"\r\n              >\r\n                Al menos una mayúscula\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"!password.value || password.errors?.['minlength'] ?  '' : 'iconFill'\"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n\r\n              <p\r\n                [ngClass]=\"!password.value || password.errors?.['minlength'] ?  '' : 'requisitos'\"\r\n              >\r\n                8 caracteres mínimo\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                    !password.value || password.errors?.hasSp ? '' : 'iconFill'\r\n                  \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n              <p\r\n                [ngClass]=\"\r\n                  !password.value || password.errors?.hasSp ? '' : 'requisitos'\r\n                \"\r\n              >\r\n                Al menos un caracter especial\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                    !password.value || password.errors?.hasNumber\r\n                      ? ''\r\n                      : 'iconFill'\r\n                  \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n              <p\r\n                [ngClass]=\"\r\n                  !password.value || password.errors?.hasNumber\r\n                    ? ''\r\n                    : 'requisitos'\r\n                \"\r\n              >\r\n                Al menos un número\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"flex flex-col justify-between space-y-6\">\r\n            <button\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                password.errors ||\r\n                !registerForm.value.username ||\r\n                !registerForm.value.password ||\r\n                !registerForm.value.name ||\r\n                !registerForm.value.email\r\n              \"\r\n              id=\"boton2\"\r\n            >\r\n              Enviar\r\n            </button>\r\n\r\n            <a (click)=\"mostrarLogin()\" id=\"volver\"> Volver </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.minLength(5)])\r\n    ),\r\n    name: this.builder.control('', Validators.required),\r\n    password: this.builder.control(\r\n      '',\r\n      Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(\r\n          '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{8,}'\r\n        ),\r\n      ])\r\n    ),\r\n    email: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.email])\r\n    ),\r\n    role: this.builder.control('64f1f60e918724a5f931d909'),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  proceedRegistration() {\r\n    if (this.registerform.valid) {\r\n      console.log(this.registerform.value);\r\n      this.service.Proceedregister(this.registerform.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else if (res.status == 200) {\r\n            this.toastr.success(\r\n              'Solicitar acceso con el administrador ',\r\n              'Registro exitoso'\r\n            );\r\n            this.router.navigate(['login']);\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.toastr.warning('error', error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Registro</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"proceedRegistration()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre de usuario</mat-label>\r\n          <input matInput formControlName=\"username\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input matInput formControlName=\"name\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Contraseña</mat-label>\r\n          <input type=\"password\" matInput formControlName=\"password\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput formControlName=\"email\" />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Enviar</button>\r\n        <a routerLink=\"/login\" mat-raised-button color=\"accent\"\r\n          >Volver a pantalla de ingreso</a\r\n        >\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Subscription } from 'rxjs';\r\nimport { CSVDato } from 'src/app/models/datos.model';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-tabla',\r\n  templateUrl: './tabla.component.html',\r\n  styleUrls: ['./tabla.component.css'],\r\n})\r\nexport class TablaComponent implements OnInit {\r\n  constructor(\r\n    private service: HttpService,\r\n    private spinnerService: SpinnerService,\r\n    private builder: FormBuilder\r\n  ) {}\r\n  tabla: any = {\r\n    titulo: 'Alerta de valores excedidos',\r\n  };\r\n  table: any = {\r\n    inicio: '',\r\n    final: '',\r\n    id_variable: '',\r\n  };\r\n  selectValue: any = null;\r\n  i: any = null;\r\n  exceedList: any = [];\r\n  dataSource: any;\r\n  listVariables: any = [];\r\n  notExceedList: any = [];\r\n  subscription!: Subscription;\r\n  csv: any = '';\r\n  valor: any;\r\n  range: any = [];\r\n  selectTime: any = [\r\n    {\r\n      option: '1h',\r\n      value: 3600000,\r\n      binSize: 1,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '3h',\r\n      value: 10800000,\r\n      binSize: 10,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '12h',\r\n      value: 43200000,\r\n      binSize: 5,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '1d',\r\n      value: 86400000,\r\n      binSize: 15,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '3d',\r\n      value: 259200000,\r\n      binSize: 1,\r\n      unit: 'hour',\r\n    },\r\n    {\r\n      option: '1w',\r\n      value: 604800000,\r\n      binSize: 6,\r\n      unit: 'hour',\r\n    },\r\n  ];\r\n  id_variable!: string;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  ngOnInit(): void {\r\n    this.getVariables();\r\n    this.valor = this.builder.group({\r\n      threshold: new FormControl<number>(25),\r\n    });\r\n\r\n    this.subscription = this.service.listaDatosInRange.subscribe((message) => {\r\n      this.exceedList = message;\r\n      console.log('lista excedida stream', this.exceedList);\r\n      // console.log('prueba filter: ', this.removeDuplicates(this.exceedList));\r\n      this.dataSource = new MatTableDataSource(this.exceedList);\r\n      if (this.exceedList.length != 0) {\r\n        this.spinnerService.detenerSpinner('tabla');\r\n      }\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n    this.subscription = this.service.rangeInfo.subscribe((message: any) => {\r\n      console.log('inicio', message[0], 'final', message[1]);\r\n      this.range = message;\r\n      this.getInRangeTabla(this.table);\r\n    });\r\n  }\r\n\r\n  removeDuplicates(data: any) {\r\n    const ids = data.map(\r\n      ({ cTime_stamp }: { cTime_stamp: any }) => cTime_stamp\r\n    );\r\n    const filtered = data.filter(\r\n      ({ cTime_stamp }: { cTime_stamp: any }, index: number) =>\r\n        ids.includes(cTime_stamp, index + 1)\r\n    );\r\n\r\n    return filtered;\r\n  }\r\n  downloadCSV() {\r\n    let csvList: CSVDato[];\r\n    csvList = this.exceedList.map((e: any) => ({\r\n      valor_lectura: e.valor_lectura,\r\n      tiempo_inicio: e.time_stamp,\r\n      tiempo_fin: e.cTime_stamp,\r\n      diferencia: e.time,\r\n    }));\r\n\r\n    for (let row = 0; row < csvList.length; row++) {\r\n      let keysAmount = Object.keys(csvList[row]).length;\r\n      let keysCounter = 0;\r\n\r\n      // If this is the first row, generate the headings\r\n      if (row === 0) {\r\n        // Loop each property of the object\r\n        for (let key in csvList[row]) {\r\n          // This is to not add a comma at the last cell\r\n          // The '\\n' adds a new line\r\n          this.csv += key + (keysCounter + 1 < keysAmount ? ',' : '\\r\\n');\r\n          keysCounter++;\r\n        }\r\n      } else {\r\n        for (let key in csvList[row]) {\r\n          this.csv +=\r\n            csvList[row][key] + (keysCounter + 1 < keysAmount ? ',' : '\\r\\n');\r\n          keysCounter++;\r\n        }\r\n      }\r\n\r\n      keysCounter = 0;\r\n    }\r\n    let link = document.createElement('a');\r\n    link.id = 'download-csv';\r\n    link.setAttribute(\r\n      'href',\r\n      'data:text/plain;charset=utf-8,' + encodeURIComponent(this.csv)\r\n    );\r\n    link.setAttribute('download', 'alertas_data.csv');\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  }\r\n\r\n  displayedColumns: string[] = [\r\n    'exceed_value',\r\n    'tiempo_inicio',\r\n    'tiempo_fin',\r\n    'diferencia',\r\n  ];\r\n\r\n  getInRangeTabla(tabla: any) {\r\n    this.spinnerService.llamarSpinner('tabla');\r\n    var inicio: any = this.range[0];\r\n    var final: any = this.range[1];\r\n    this.service\r\n      .getAllInRange(tabla.id_variable, inicio, final)\r\n      .subscribe((data) => {\r\n        this.exceedList = data['datos'].filter((x: any) => {\r\n          return x.valor_lectura > tabla.threshold;\r\n        });\r\n        this.notExceedList = data['datos'].filter((n: any) => {\r\n          return n.valor_lectura < tabla.threshold;\r\n        });\r\n        var notDuplicatedExceedList = this.removeDuplicates(this.exceedList);\r\n        var notDuplicatedNotExceedList = this.removeDuplicates(\r\n          this.notExceedList\r\n        );\r\n        console.log(\r\n          'exceed: ',\r\n          notDuplicatedExceedList,\r\n          'not exceed: ',\r\n          notDuplicatedNotExceedList\r\n        );\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('tabla');\r\n          this.service.stream_DatosInRange([]);\r\n        }\r\n        this.spinnerService.detenerSpinner('tabla');\r\n        var result = this.notExceedListPusher(\r\n          notDuplicatedNotExceedList,\r\n          notDuplicatedExceedList\r\n        );\r\n        this.enviarDatos(result[0], result[1]);\r\n      });\r\n  }\r\n  formatTime(notExceed: number, exceed: number) {\r\n    var seconds = (notExceed - exceed) / 1000;\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const remainingSeconds = seconds % 60;\r\n\r\n    const formattedHours = String(hours).padStart(2, '0');\r\n    const formattedMinutes = String(minutes).padStart(2, '0');\r\n    const formattedSeconds = String(remainingSeconds).padStart(2, '0');\r\n\r\n    return `${formattedHours}H ${formattedMinutes}M ${formattedSeconds}S`;\r\n  }\r\n  formatDate(data: string) {\r\n    const date = new Date(data);\r\n    return (\r\n      [\r\n        date.getFullYear(),\r\n        this.padTo2Digits(date.getMonth() + 1),\r\n        this.padTo2Digits(date.getDate()),\r\n      ].join('-') +\r\n      ' ' +\r\n      [\r\n        this.padTo2Digits(date.getHours()),\r\n        this.padTo2Digits(date.getMinutes()),\r\n        this.padTo2Digits(date.getSeconds()),\r\n      ].join(':')\r\n    );\r\n  }\r\n  padTo2Digits(num: number) {\r\n    return num.toString().padStart(2, '0');\r\n  }\r\n  getVariables() {\r\n    this.service.getVariables().subscribe((data) => {\r\n      this.listVariables = data;\r\n      this.id_variable = this.listVariables[0]._id;\r\n    });\r\n  }\r\n  variableSelected(value: Event) {\r\n    this.id_variable = (value.target as HTMLSelectElement).value;\r\n    console.log('valor variable:', this.id_variable);\r\n  }\r\n  enviarDatos(notExceedList: any, ExceedList: any) {\r\n    console.log(\r\n      'exceed: ',\r\n      ExceedList.length,\r\n      'not exceed: ',\r\n      notExceedList.length\r\n    );\r\n    ExceedList.map((e: any, index: number) => {\r\n      e.time = this.formatTime(\r\n        new Date(\r\n          notExceedList[\r\n            index < notExceedList.length ? index : notExceedList.length - 1\r\n          ].time_stamp\r\n        ).getTime(),\r\n        new Date(e.time_stamp).getTime()\r\n      );\r\n      e.cTime_stamp = this.formatDate(\r\n        notExceedList[\r\n          index < notExceedList.length ? index : notExceedList.length - 1\r\n        ].time_stamp\r\n      );\r\n      e.time_stamp = this.formatDate(e.time_stamp);\r\n    });\r\n    this.service.stream_DatosInRange(ExceedList);\r\n  }\r\n\r\n  notExceedListPusher(notDuplicatedNotExceedList: any, exceedList: any) {\r\n    const notExceedList = [];\r\n    const ExceedList = [];\r\n    const resultado: any = [];\r\n    let j = 0;\r\n\r\n    //no funciona bien si el not exceeded list es mas grande hay que arreglarlo\r\n\r\n    for (let i = 0; i < exceedList.length; ) {\r\n      // console.log('i es: ', i);\r\n      if (\r\n        new Date(notDuplicatedNotExceedList[j].time_stamp).getTime() >\r\n        new Date(exceedList[i].time_stamp).getTime()\r\n      ) {\r\n        // console.log(\r\n        //   'exceed: ',\r\n        //   exceedList[i],\r\n        //   'not exceed: ',\r\n        //   notDuplicatedNotExceedList[j]\r\n        // );\r\n        notExceedList.push(notDuplicatedNotExceedList[j]);\r\n        ExceedList.push(exceedList[i]);\r\n        i++;\r\n      }\r\n      if (\r\n        j == notDuplicatedNotExceedList.length - 1 ||\r\n        i == exceedList.length - 1\r\n      ) {\r\n        resultado.push(notExceedList);\r\n        resultado.push(ExceedList);\r\n        return resultado;\r\n      } else if (\r\n        new Date(notDuplicatedNotExceedList[j].time_stamp).getTime() <\r\n        new Date(exceedList[i].time_stamp).getTime()\r\n      ) {\r\n        // console.log(\r\n        //   'exceed time stamp: ',\r\n        //   exceedList[i].time_stamp,\r\n        //   'not exceed time stamp: ',\r\n        //   notDuplicatedNotExceedList[j].time_stamp\r\n        // );\r\n        j++;\r\n        // console.log('j es: ', j);\r\n      }\r\n    }\r\n\r\n    return resultado;\r\n  }\r\n}\r\n","<mat-card class=\"carta_tabla\">\r\n  <div>\r\n    <app-toolbar\r\n      [value]=\"tabla\"\r\n      [selectTime]=\"selectTime\"\r\n      [indice]=\"i\"\r\n      [tabla]=\"table\"\r\n    ></app-toolbar>\r\n  </div>\r\n\r\n  <mat-card-content>\r\n    <mat-table matSort [dataSource]=\"dataSource\">\r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"exceed_value\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef>\r\n          Valor Excedido\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.valor_lectura.toFixed(2) }}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"tiempo_inicio\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef>\r\n          Tiempo de inicio\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.time_stamp }}\r\n        </mat-cell>\r\n      </ng-container>\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"tiempo_fin\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef\r\n          >Tiempo de fin</mat-header-cell\r\n        >\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.cTime_stamp }}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"diferencia\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef>\r\n          Diferencia en tiempo\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">{{ element.time }}</mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[5, 10, 20]\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of periodic elements\"\r\n    >\r\n    </mat-paginator>\r\n    <ngx-spinner\r\n      bdColor=\"rgba(51,51,51,0.8)\"\r\n      size=\"medium\"\r\n      color=\"#fff\"\r\n      type=\"ball-spin-clockwise\"\r\n      [fullScreen]=\"false\"\r\n      name=\"tabla\"\r\n    >\r\n    </ngx-spinner>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { Subscription, catchError } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { ChartGeneratorService } from 'src/app/service/chart-generator.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css'],\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n  subscription!: Subscription;\r\n  chartList: any = [];\r\n  interval: any = [];\r\n  range!: any;\r\n  rangeSub!: any;\r\n  listVariables: any;\r\n  valor: any;\r\n  chartUrl: string = environment.API_URL_CHARTS;\r\n  isAdminUser: boolean = false;\r\n  selectTime2: any = [\r\n    {\r\n      option: '1h',\r\n      value: 3600000,\r\n      binSize: 1,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '3h',\r\n      value: 10800000,\r\n      binSize: 10,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '12h',\r\n      value: 43200000,\r\n      binSize: 5,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '1d',\r\n      value: 86400000,\r\n      binSize: 15,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '3d',\r\n      value: 259200000,\r\n      binSize: 1,\r\n      unit: 'hour',\r\n    },\r\n    {\r\n      option: '1w',\r\n      value: 604800000,\r\n      binSize: 6,\r\n      unit: 'hour',\r\n    },\r\n    {\r\n      option: '1m',\r\n      binSize: 1,\r\n      unit: 'day',\r\n      value: 2419200000,\r\n    },\r\n  ];\r\n\r\n  @Input() value: any;\r\n  @Input() selectValue: any;\r\n  @Input() selectTime: any;\r\n  @Input() indice: any;\r\n  @Input() tabla: any;\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private spinnerService: SpinnerService,\r\n    private builder: FormBuilder,\r\n    private chartService: ChartGeneratorService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getUserRole();\r\n    this.range = this.builder.group({\r\n      start: new FormControl<Date | null>(null),\r\n      end: new FormControl<Date | null>(null),\r\n      granularidad: new FormControl<string>('day'),\r\n    });\r\n\r\n    this.interval = this.builder.group({\r\n      medida: new FormControl<String | null>('max'),\r\n      threshold: new FormControl<number>(25),\r\n    });\r\n    if (this.tabla) {\r\n      this.getVariables();\r\n    }\r\n    this.subscription = this.chartService.listaDeCharts.subscribe((data) => {\r\n      this.chartList = data;\r\n      console.log('toolbar chartList', this.chartList);\r\n      for (let i = 0; i < this.chartList.length; i++) {\r\n        this.setSelectTimeInterval(\r\n          {\r\n            option: '1h',\r\n            value: 3600000,\r\n            binSize: 1,\r\n            unit: 'second',\r\n          },\r\n          i\r\n        );\r\n      }\r\n    });\r\n    this.subscription = this.chartService.rangeInfo.subscribe(\r\n      (message: any) => {\r\n        this.rangeSub = message;\r\n      }\r\n    );\r\n  }\r\n\r\n  setValue(value: any, i: number) {\r\n    console.log('value toolbar:', value, 'indice: ', i);\r\n  }\r\n  setSelectValue(sValue: any, i: number) {\r\n    this.chartList[i].sValue = sValue;\r\n    var data = this.chartList[i];\r\n    data.value = sValue;\r\n    data.index = i;\r\n\r\n    this.chartService.streamChartIntervalInfo(data);\r\n    console.log('select value: ', this.chartList[i], 'indice: ', i);\r\n  }\r\n  setSelectTimeInterval(sTime: any, i: number, tabla?: any) {\r\n    this.chartList[i].inicio = null;\r\n    this.chartList[i].final = null;\r\n    tabla\r\n      ? (tabla.sTime = sTime.value)\r\n      : (this.chartList[i].sTime = sTime.value);\r\n    tabla ? (tabla.sInterval = sTime) : (this.chartList[i].sInterval = sTime);\r\n\r\n    console.log(\r\n      'select time: ',\r\n      tabla ? tabla : this.chartList[i],\r\n      'indice: ',\r\n      i\r\n    );\r\n  }\r\n\r\n  setInicioFinal(i: number, tabla?: any) {\r\n    tabla\r\n      ? (tabla.inicio = this.range.value.start._d?.getTime().toString())\r\n      : (this.chartList[i].inicio = this.range.value.start._d\r\n          ?.getTime()\r\n          .toString());\r\n    tabla\r\n      ? (tabla.final = this.range.value.end._d?.getTime().toString())\r\n      : (this.chartList[i].final = this.range.value.end._d\r\n          ?.getTime()\r\n          .toString());\r\n\r\n    console.log(\r\n      'inicio: ',\r\n      tabla ? tabla.inicio : this.chartList[i].inicio,\r\n      'final ',\r\n      tabla ? tabla.final : this.chartList[i].final,\r\n      'indice: ',\r\n      i\r\n    );\r\n    var difference =\r\n      parseInt(tabla ? tabla.final : this.chartList[i].final) -\r\n      parseInt(tabla ? tabla.inicio : this.chartList[i].inicio);\r\n    if (difference < this.selectTime[4].value) {\r\n      tabla\r\n        ? (tabla.sTime = this.selectTime2[3].value)\r\n        : (this.chartList[i].sTime = this.selectTime2[3].value);\r\n      tabla\r\n        ? (tabla.sInterval = this.selectTime2[3])\r\n        : (this.chartList[i].sInterval = this.selectTime2[3]);\r\n    } else if (difference < this.selectTime[5].value) {\r\n      tabla\r\n        ? (tabla.sTime = this.selectTime2[4].value)\r\n        : (this.chartList[i].sTime = this.selectTime2[4].value);\r\n      tabla\r\n        ? (tabla.sInterval = this.selectTime2[4])\r\n        : (this.chartList[i].sInterval = this.selectTime2[4]);\r\n    } else if (difference < this.selectTime[5].value * 3) {\r\n      tabla\r\n        ? (tabla.sTime = this.selectTime2[5].value)\r\n        : (this.chartList[i].sTime = this.selectTime2[5].value);\r\n      tabla\r\n        ? (tabla.sInterval = this.selectTime2[5])\r\n        : (this.chartList[i].sInterval = this.selectTime2[5]);\r\n    } else {\r\n      tabla\r\n        ? (tabla.sTime = this.selectTime2[6].value)\r\n        : (this.chartList[i].sTime = this.selectTime2[6].value);\r\n      tabla\r\n        ? (tabla.sInterval = this.selectTime2[6])\r\n        : (this.chartList[i].sInterval = this.selectTime2[6]);\r\n    }\r\n  }\r\n\r\n  getValuesByInterval(i: number, tabla?: any) {\r\n    if (tabla) {\r\n      this._httpService.set_Inicio_Final(tabla.inicio, tabla.final);\r\n      return console.log(\r\n        `tabla: ${JSON.stringify(tabla)}, inicio: ${tabla.inicio}, final: ${\r\n          tabla.final\r\n        }`\r\n      );\r\n    }\r\n    const currentDateObj = new Date();\r\n    const final = this.chartList[i].final\r\n      ? this.chartList[i].final\r\n      : currentDateObj.getTime();\r\n    const millis = this.chartList[i].sTime;\r\n    const inicio = this.chartList[i].final\r\n      ? this.chartList[i].inicio\r\n      : final - millis;\r\n    console.log('inicio: ', inicio, 'final: ', final);\r\n\r\n    this.spinnerService.llamarSpinner(`grafico${i}`);\r\n    this._httpService\r\n      .getInterval(\r\n        inicio,\r\n        final,\r\n        this.chartList[i].sInterval.unit,\r\n        this.chartList[i].sInterval.binSize\r\n      )\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      )\r\n      .subscribe((data) => {\r\n        data.index = i;\r\n        data.value = this.interval.value.medida;\r\n        const datosFilter = data.datos.filter((e: any) => {\r\n          return e._id == this.chartList[i].variable;\r\n        });\r\n        data.datos = datosFilter;\r\n        console.log(\r\n          'filter data: ',\r\n          data,\r\n          'medida: ',\r\n          this.interval.value.medida\r\n        );\r\n        this.chartList[i].datos = data.datos;\r\n        this.chartService.streamChartIntervalInfo(data);\r\n        this.spinnerService.detenerSpinner(`grafico${i}`);\r\n      });\r\n  }\r\n\r\n  getVariables() {\r\n    this._httpService.getVariables().subscribe((data) => {\r\n      this.listVariables = data;\r\n      this.tabla.id_variable = this.listVariables[0]._id;\r\n      this.tabla.threshold = this.interval.value.threshold;\r\n      console.log('tabla', this.tabla);\r\n    });\r\n  }\r\n\r\n  variableSelected(variable: any) {\r\n    this.tabla.id_variable = variable;\r\n    console.log('variable selected: ', this.tabla);\r\n  }\r\n\r\n  setThreshold() {\r\n    console.log('threshold', this.interval.value.threshold);\r\n    this.tabla.threshold = this.interval.value.threshold;\r\n  }\r\n  getUserRole() {\r\n    const userRole = this.authService.getUserRole();\r\n    if (userRole === 'admin') {\r\n      this.isAdminUser = true;\r\n    } else {\r\n      this.isAdminUser = false;\r\n    }\r\n  }\r\n  removeCharts(chart: any) {\r\n    this.chartService.removerCharts(this.chartUrl, chart.nombre, chart._id);\r\n  }\r\n}\r\n","<mat-menu [hasBackdrop]=\"true\" #menu=\"matMenu\" class=\"menu\">\r\n  <div\r\n    class=\"grid grid-cols-2 grid-flow-row sm:grid-cols-2 grid-row-2 gap-4 m-3\"\r\n    [formGroup]=\"range\"\r\n    (click)=\"$event.stopPropagation()\"\r\n  >\r\n    <div>\r\n      <h2 class=\"subtitulo\">Desde</h2>\r\n      <div class=\"c-input\">\r\n        <mat-datepicker-toggle [for]=\"startpicker\">\r\n          <mat-icon\r\n            svgIcon=\"calendario\"\r\n            class=\"calendario\"\r\n            matDatepickerToggleIcon\r\n          ></mat-icon>\r\n        </mat-datepicker-toggle>\r\n        <input\r\n          [matDatepicker]=\"startpicker\"\r\n          formControlName=\"start\"\r\n          class=\"input-field\"\r\n          type=\"date\"\r\n        />\r\n      </div>\r\n      <mat-datepicker #startpicker></mat-datepicker>\r\n    </div>\r\n    <div>\r\n      <h2 class=\"subtitulo\">Hasta</h2>\r\n      <div class=\"c-input\">\r\n        <mat-datepicker-toggle [for]=\"endpicker\">\r\n          <mat-icon\r\n            svgIcon=\"calendario\"\r\n            class=\"calendario\"\r\n            matDatepickerToggleIcon\r\n          ></mat-icon>\r\n        </mat-datepicker-toggle>\r\n        <input\r\n          formControlName=\"end\"\r\n          [matDatepicker]=\"endpicker\"\r\n          class=\"input-field\"\r\n          type=\"date\"\r\n          (dateChange)=\"\r\n            [setInicioFinal(indice, tabla), getValuesByInterval(indice, tabla)]\r\n          \"\r\n        />\r\n      </div>\r\n      <mat-datepicker #endpicker></mat-datepicker>\r\n    </div>\r\n    <div class=\"col-span-2 row-start-2\"></div>\r\n  </div>\r\n</mat-menu>\r\n<mat-card-header\r\n  [formGroup]=\"interval\"\r\n  class=\"grid grid-cols-1 grid-rows-3 sm:grid-cols-1 grid-rows-2\"\r\n>\r\n  <h2 class=\"titulo col-span-2 row-start-1\">\r\n    {{ value.nombre }}\r\n  </h2>\r\n  <mat-icon\r\n    *ngIf=\"!tabla\"\r\n    class=\"col-span-1 row-start-1\"\r\n    matTooltip=\"\r\n  Proceso: {{ value.id ? value.id.id_proceso.descripcion : 'no hay proceso' }} \r\n  Maquina: {{ value.id ? value.id.id_maquina.nombre : 'no hay maquina' }}\r\n  Trigger: {{ value.id ? value.id.id_trigger.nombre : 'no hay trigger' }}\r\n  \r\n\"\r\n  >\r\n    info_outlined\r\n  </mat-icon>\r\n  <button\r\n    *ngIf=\"isAdminUser && !tabla\"\r\n    mat-icon-button\r\n    (click)=\"removeCharts(value)\"\r\n    matTooltip=\"Eliminar un gráfico\"\r\n  >\r\n    <mat-icon color=\"warn\">cancel</mat-icon>\r\n  </button>\r\n  <div class=\"flex flex-row justify-end sm:row-start-2\">\r\n    <div *ngIf=\"!tabla\" class=\"d-input px-3\">\r\n      <select\r\n        class=\"input-field\"\r\n        formControlName=\"medida\"\r\n        #selectMedida\r\n        (change)=\"[setSelectValue(selectMedida.value, indice)]\"\r\n      >\r\n        <option *ngFor=\"let valor of selectValue\" value=\"{{ valor.value }}\">\r\n          {{ valor.option }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div *ngIf=\"tabla\" class=\"d-input px-3 mr-5\">\r\n      <input\r\n        id=\"valor_limite\"\r\n        class=\"input-field\"\r\n        placeholder=\"Elegir valor limite\"\r\n        (change)=\"setThreshold()\"\r\n        formControlName=\"threshold\"\r\n      />\r\n    </div>\r\n\r\n    <div *ngIf=\"tabla\" class=\"d-input px-3\">\r\n      <select\r\n        id=\"select_variable\"\r\n        class=\"input-field\"\r\n        #selectVariable\r\n        (change)=\"variableSelected(selectVariable.value)\"\r\n      >\r\n        <option value=\"null\">Elegir variable</option>\r\n        <option\r\n          *ngFor=\"let variable of listVariables\"\r\n          value=\"{{ variable._id }}\"\r\n        >\r\n          {{ variable.nombre }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div class=\"pl-5\">\r\n      <mat-button-toggle-group>\r\n        <mat-button-toggle\r\n          *ngFor=\"let time of selectTime\"\r\n          [value]=\"time\"\r\n          (click)=\"\r\n            [\r\n              setSelectTimeInterval(time, indice, tabla),\r\n              getValuesByInterval(indice, tabla)\r\n            ]\r\n          \"\r\n        >\r\n          {{ time.option }}\r\n        </mat-button-toggle>\r\n        <mat-button-toggle [matMenuTriggerFor]=\"menu\">\r\n          <mat-icon\r\n            svgIcon=\"calendario\"\r\n            class=\"calendario\"\r\n            iconPositionEnd\r\n          ></mat-icon>\r\n        </mat-button-toggle>\r\n      </mat-button-toggle-group>\r\n    </div>\r\n  </div>\r\n</mat-card-header>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-updatepopup',\r\n  templateUrl: './updatepopup.component.html',\r\n  styleUrls: ['./updatepopup.component.css'],\r\n})\r\nexport class UpdatepopupComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private service: AuthService,\r\n    private toastr: ToastrService,\r\n    private dialog: MatDialogRef<UpdatepopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  editData: any;\r\n\r\n  ngOnInit(): void {\r\n    this.service.GetAllRoles().subscribe((res) => {\r\n      console.log('roles', res);\r\n      this.rolelist = res;\r\n    });\r\n    if (this.data.username != null && this.data.username != '') {\r\n      this.service.GetById(this.data.username).subscribe((res) => {\r\n        this.editData = res;\r\n        this.registerform.setValue({\r\n          username: this.editData.username,\r\n          name: this.editData.name,\r\n          password: this.editData.password,\r\n          email: this.editData.email,\r\n          role: this.editData.role,\r\n          isActive: this.editData.isActive,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  rolelist: any;\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(''),\r\n    name: this.builder.control(''),\r\n    password: this.builder.control(''),\r\n    email: this.builder.control(''),\r\n    role: this.builder.control('', Validators.required),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  updateUser() {\r\n    if (this.registerform.valid) {\r\n      this.service\r\n        .UpdateUser(this.registerform.value.username, this.registerform.value)\r\n        .subscribe((res) => {\r\n          this.toastr.success('Updated successfully');\r\n          this.dialog.close();\r\n        });\r\n    } else {\r\n      this.toastr.warning('Please select a role');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Update User</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"updateUser()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Role</mat-label>\r\n          <mat-select formControlName=\"role\">\r\n            <mat-option value=\"\">Select Role </mat-option>\r\n            <mat-option *ngFor=\"let item of rolelist\" [value]=\"item._id\">\r\n              {{ item.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-checkbox formControlName=\"isActive\">Is Active? </mat-checkbox>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Update</button>\r\n        <a mat-dialog-close mat-raised-button color=\"accent\">Close</a>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from 'src/app/forms/variable-form/variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {\r\n  checkNumber,\r\n  checkSpecial,\r\n  checkUpperCase,\r\n} from 'src/app/service/validator';\r\n\r\n@Component({\r\n  selector: 'app-userlisting',\r\n  templateUrl: './userlisting.component.html',\r\n  styleUrls: ['./userlisting.component.css'],\r\n})\r\nexport class UserlistingComponent implements OnInit {\r\n  constructor(\r\n    private service: AuthService,\r\n    private toastr: ToastrService,\r\n    public dialog: MatDialog,\r\n    private builder: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.LoadUser();\r\n  }\r\n  pass: string = 'password';\r\n  show = false;\r\n  userList: any = [];\r\n  dataSource: any;\r\n  editable: boolean = false;\r\n  userUrl = environment.API_URL_USERS;\r\n  subscription!: Subscription;\r\n  userForm!: FormGroup;\r\n  fields: any = [];\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n\r\n  LoadUser() {\r\n    this.service.GetAll().subscribe((res) => {\r\n      this.service.streamUsers(res);\r\n    });\r\n    this.subscription = this.service.listUser.subscribe((message: any) => {\r\n      Array.from(message).forEach((element: any) => {\r\n        element.show = false;\r\n        element.pass = 'password';\r\n      });\r\n\r\n      this.userList = message;\r\n      console.log('userlist: ', this.userList);\r\n      this.buildForm();\r\n      this.dataSource = new MatTableDataSource(this.userList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n\r\n    this.service.getUser();\r\n  }\r\n\r\n  displayedColumns: string[] = [\r\n    'username',\r\n    'name',\r\n    'email',\r\n    'role',\r\n    'password',\r\n    'status',\r\n    'action',\r\n  ];\r\n\r\n  editableToggle() {\r\n    this.editable = !this.editable;\r\n  }\r\n\r\n  guardarCambios(data: any) {\r\n    var ulist: any = [];\r\n\r\n    this.service.GetAll().subscribe((res) => {\r\n      ulist = res;\r\n      for (let i = 0; i < ulist.length; i++) {\r\n        console.log(data[i]);\r\n        console.log(this.userForm.controls[ulist[i].name].value);\r\n        data[i].password = this.userForm.controls[ulist[i].name].value;\r\n        if (\r\n          ulist[i].isActive != data[i].isActive ||\r\n          ulist[i].role._id != data[i].role._id ||\r\n          ulist[i].password != data[i].password\r\n        ) {\r\n          console.log(data[i]);\r\n          this.service\r\n            .UpdateUser(data[i].username, data[i])\r\n            .subscribe((res) => {\r\n              console.log(res);\r\n              this.toastr.success('¡Cambios Guardados con exito!', '', {\r\n                toastClass: 'yourclass ngx-toastr',\r\n                positionClass: 'toast-bottom-center',\r\n              });\r\n            });\r\n        }\r\n        if (i == this.userList.length - 1) {\r\n          return;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'este usuario',\r\n      },\r\n    });\r\n  }\r\n  showPass(element: any): void {\r\n    if (element.pass === 'password') {\r\n      element.show = true;\r\n      element.pass = '';\r\n    } else {\r\n      element.show = false;\r\n      element.pass = 'password';\r\n    }\r\n  }\r\n  get password() {\r\n    if (this.editable === true) {\r\n      this.userForm.enable();\r\n    } else {\r\n      this.userForm.disable();\r\n    }\r\n\r\n    return this.userForm;\r\n  }\r\n\r\n  getFormControlsFields() {\r\n    const formGroupFields: any = {};\r\n    for (const user of this.userList) {\r\n      formGroupFields[user.name] = new FormControl(user.password, [\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        checkUpperCase(),\r\n        checkNumber(),\r\n        checkSpecial(),\r\n      ]);\r\n      this.fields.push(user);\r\n    }\r\n    return formGroupFields;\r\n  }\r\n  buildForm() {\r\n    const formGroupFields = this.getFormControlsFields();\r\n    (this.userForm = new FormGroup(formGroupFields)),\r\n      [\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        checkUpperCase(),\r\n        checkNumber(),\r\n        checkSpecial(),\r\n      ];\r\n    console.log('form group fields', formGroupFields);\r\n    console.log('userform', this.userForm.controls);\r\n  }\r\n}\r\n","<mat-card class=\"fondo\">\r\n  <mat-card-header class=\"\">\r\n    <div class=\"grid grid-cols-2 header\">\r\n      <h2 class=\"titulo justify-self-start\">Listado de usuarios</h2>\r\n    </div>\r\n  </mat-card-header>\r\n\r\n  <mat-card-content>\r\n    <div class=\"card\">\r\n      <mat-table matSort [dataSource]=\"dataSource\" class=\"mb-3\">\r\n        <!-- username Column -->\r\n        <ng-container matColumnDef=\"username\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Nombre de usuario</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">{{ element.username }}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Nombre</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">{{ element.name }}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- email Column -->\r\n        <ng-container matColumnDef=\"email\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Email</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">{{ element.email }}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- role Column -->\r\n        <ng-container matColumnDef=\"role\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Rol</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <mat-select\r\n              [ngClass]=\"editable ? '' : 'select'\"\r\n              [disabled]=\"!editable\"\r\n              [(value)]=\"element.role._id\"\r\n            >\r\n              <mat-option value=\"64f1f60e918724a5f931d909\">\r\n                Usuario\r\n              </mat-option>\r\n              <mat-option value=\"64d3cdd575d7a2df083079bd\">\r\n                Administrador\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Password Column -->\r\n        <ng-container matColumnDef=\"password\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Contraseña\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element; let i = index\">\r\n            <div class=\"contenedor flex\" [formGroup]=\"userForm\">\r\n              <mat-form-field class=\"input-user\">\r\n                <input\r\n                  matInput\r\n                  [type]=\"element.pass\"\r\n                  [formControlName]=\"element.name\"\r\n                  [value]=\"element.password\"\r\n                />\r\n              </mat-form-field>\r\n              <a\r\n                style=\"cursor: pointer\"\r\n                (click)=\"showPass(element)\"\r\n                class=\"p-2 mt-3\"\r\n                matSuffix\r\n              >\r\n                <mat-icon>{{\r\n                  element.show ? \"visibility\" : \"visibility_off\"\r\n                }}</mat-icon>\r\n              </a>\r\n              <svg\r\n                *ngIf=\"editable\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"mt-6\"\r\n                matTooltip=\"\r\n        - Al menos una mayúscula \r\n        - 8 caracteres mínimo\r\n        - Al menos un caracter especial\r\n        - Al menos un número\r\n        \"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                !userForm.get(element.name)!.value || userForm.get(element.name)?.errors?.['hasNumber'] || userForm.get(element.name)?.errors?.['hasSp'] ||  userForm.get(element.name)?.errors?.['minlength'] || userForm.get(element.name)?.errors?.['hasUpper']\r\n                ? ''\r\n                : 'iconFill'\r\n                \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n            </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Status Column -->\r\n        <ng-container matColumnDef=\"status\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Estado</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <mat-select\r\n              class=\"{{ element.isActive }}\"\r\n              [ngClass]=\"editable ? '' : 'select'\"\r\n              [disabled]=\"!editable\"\r\n              [(value)]=\"element.isActive\"\r\n            >\r\n              <mat-option value=\"inactive\" class=\"inactive\"\r\n                >Inactivo</mat-option\r\n              >\r\n              <mat-option value=\"active\" class=\"active\">Activo</mat-option>\r\n            </mat-select>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Action Column -->\r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Accion</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <button\r\n              mat-icon-button\r\n              [disabled]=\"!editable\"\r\n              (click)=\"openDialog(element._id)\"\r\n            >\r\n              <mat-icon\r\n                [ngClass]=\"editable ? 'delete_icon' : 'delete_icon_disabled'\"\r\n                >delete</mat-icon\r\n              >\r\n            </button>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n      </mat-table>\r\n      <div class=\"flex justify-end\">\r\n        <a\r\n          (click)=\"editableToggle()\"\r\n          mat-raised-button\r\n          class=\"boton justify-self-end mx-8\"\r\n        >\r\n          <mat-icon id=\"icon\"> edit_note </mat-icon>\r\n          {{ editable ? \"Cancelar\" : \"Editar Listado\" }}\r\n        </a>\r\n        <a\r\n          (click)=\"guardarCambios(dataSource._data._value)\"\r\n          class=\"justify-self-end\"\r\n          mat-raised-button\r\n          [disabled]=\"password.status === 'INVALID'\"\r\n          [ngClass]=\"password.status === 'INVALID' ? 'boton_disabled' : 'boton'\"\r\n          >Guardar Cambios</a\r\n        >\r\n      </div>\r\n      <mat-paginator\r\n        [pageSizeOptions]=\"[5, 10, 20]\"\r\n        showFirstLastButtons\r\n        aria-label=\"Select page of periodic elements\"\r\n      >\r\n      </mat-paginator>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthService } from './service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  rtoken_url = environment.API_URL_RTOKEN;\r\n  rBody = {\r\n    token: sessionStorage.getItem('rtoken')?.toString(),\r\n    user: sessionStorage.getItem('username')?.toString(),\r\n  };\r\n  resData: any;\r\n  timeout: any;\r\n  token: any;\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  refreshToken(): void {\r\n    this.authService.postForm(this.rtoken_url, this.rBody).subscribe((res) => {\r\n      this.resData = res.body;\r\n      console.log(\r\n        'refresh token: ',\r\n        this.rBody,\r\n        'access Token: ',\r\n        this.resData\r\n      );\r\n      console.log('status code: ', res.status);\r\n      this.token = this.resData.accessToken;\r\n      sessionStorage.setItem('token', this.resData.accessToken);\r\n      sessionStorage.setItem('rtoken', this.resData.refreshToken);\r\n      this.timeout =\r\n        this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n        new Date().valueOf();\r\n      this.authService.expirationCounter(this.timeout);\r\n      if (res.status == 200) {\r\n        this.toastr.success('sesion extendida');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Sesion a punto de exipirar</h1>\r\n<div mat-dialog-content>\r\n  <p>Desea continuar con su sesion?</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No</button>\r\n  <button\r\n    class=\"m-3\"\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    mat-button\r\n    (click)=\"refreshToken()\"\r\n    [mat-dialog-close]\r\n    cdkFocusInitial\r\n  >\r\n    De acuerdo\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n@Component({\r\n  selector: 'app-departamentos',\r\n  templateUrl: './departamentos.component.html',\r\n  styleUrls: ['./departamentos.component.css'],\r\n})\r\nexport class DepartamentosComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listProvincias: any;\r\n  listDepartamentos: any;\r\n  apiDepartamentos = environment.API_URL_ARGENTINA_DEPARTAMENTOS; //hay que cambiar la variable\r\n  apiLocalidades = environment.API_URL_ARGENTINA_LOCALIDADES; //hay que cambiar la variable\r\n  apiProvincias = environment.API_URL_PROVINCIAS;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  isOptional = true;\r\n  id_provincia!: string;\r\n  id_departamento!: string;\r\n  departamentoForm!: FormGroup;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.departamentoForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.departamentoSelected.subscribe(\r\n      (message) => (this.id_departamento = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n    this.subscription2 = this.service.listDepartamentos.subscribe(\r\n      (message) => (this.listDepartamentos = message)\r\n    );\r\n  }\r\n  //no esta en uso\r\n\r\n  setDepartamento(id: any) {\r\n    console.log('set Departamento', id);\r\n    this.service.changeMessage(id);\r\n    this.service.departamentoSelectedSource.next(id);\r\n\r\n    this.GetLocalidadesByDepartamento();\r\n  }\r\n\r\n  GetLocalidadesByDepartamento() {\r\n    this.service\r\n      .getForm(\r\n        this.apiLocalidades +\r\n          this.id_provincia +\r\n          `&departamento=${this.id_departamento}&orden=nombre&aplanar=true&campos=departamento.nombre&max=600&exacto=true`\r\n      )\r\n      .subscribe((res: any) => {\r\n        console.log('Departamento-form get localidades', res.localidades);\r\n        let localidadesUnicas = this.removeDuplicates(res.localidades);\r\n        console.log('localidades unicas: ', localidadesUnicas);\r\n        this.service.streamLocalidades_DepartamentoSelected(localidadesUnicas);\r\n      });\r\n  }\r\n  removeDuplicates(data: any) {\r\n    const seen = new Set();\r\n    const filteredArr = data.filter((el: any) => {\r\n      const duplicate = seen.has(el.nombre);\r\n      seen.add(el.nombre);\r\n      return !duplicate;\r\n    });\r\n    return filteredArr;\r\n  }\r\n}\r\n// https://apis.datos.gob.ar/georef/api/localidades?provincia=${provincia}&departamento=${departamento}&aplanar=true&campos=basico&max=100&exacto=true\r\n","<div class=\"carta flex flex-col p-3\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Departamentos/Partidos/Comunas </mat-label>\r\n    <mat-select [disabled]=\"!id_provincia\">\r\n      <mat-option\r\n        *ngFor=\"let departamento of listDepartamentos\"\r\n        [value]=\"departamento.nombre\"\r\n        (click)=\"[setDepartamento(departamento.nombre)]\"\r\n      >\r\n        <p>{{ departamento.nombre }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from '../variable-form/variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-empresa-form',\r\n  templateUrl: './empresa-form.component.html',\r\n  styleUrls: ['./empresa-form.component.css'],\r\n})\r\nexport class EmpresaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  listLocalidades: any;\r\n  listEmpresas: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlantas = environment.API_URL_PLANTA;\r\n  isOptional = true;\r\n  id_localidad!: string;\r\n  id_empresa!: string;\r\n  empresaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.empresaForm = this.builder.group({\r\n      razon_social: this.builder.control('', Validators.required),\r\n      nombre_fantasia: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n      rubro: this.builder.control('', Validators.required),\r\n      piso: this.builder.control(''),\r\n      deptartamento: this.builder.control(''),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.listEmpresas.subscribe(\r\n      (message) => (this.listEmpresas = message)\r\n    );\r\n  }\r\n\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createEmpresa() {\r\n    if (this.empresaForm.valid) {\r\n      console.log(this.empresaForm.value);\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        razon_social: this.empresaForm.value.razon_social,\r\n        nombre_fantasia: this.empresaForm.value.nombre_fantasia,\r\n        calle: this.empresaForm.value.calle,\r\n        altura: this.empresaForm.value.altura,\r\n        piso: this.empresaForm.value.piso,\r\n        deptartamento: this.empresaForm.value.deptartamento,\r\n        rubro: this.empresaForm.value.rubro,\r\n      };\r\n      this.service.postForm(this.apiEmpresas, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Empresa registrada corectamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service\r\n              .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n              .subscribe((res: any) => {\r\n                console.log('empresas res after crear: ', res);\r\n                this.listEmpresas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarEmpresa(id: string) {\r\n    console.log(this.apiEmpresas + id);\r\n    this.service.deleteForm(this.apiEmpresas, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Empresa borrada correctamente');\r\n          this.GetAllEmpresas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setEmpresa(id: any) {\r\n    console.log('set empresa', id);\r\n    this.id_empresa = id;\r\n    this.service.changeMessage(id);\r\n    this.service.empresaSelectedSource.next(id);\r\n    this.GetPlantasByEmpresas();\r\n  }\r\n\r\n  GetPlantasByEmpresas() {\r\n    this.service\r\n      .getForm(this.apiPlantas + this.id_empresa)\r\n      .subscribe((res: any) => {\r\n        console.log('empresa get plantas', res);\r\n        this.service.streamPlantas_EmpresaSelected(res);\r\n      });\r\n  }\r\n\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'esta empresa',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir una empresa</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Lista De Empresas</mat-label>\r\n\r\n        <mat-select>\r\n          <div *ngFor=\"let empresa of listEmpresas\">\r\n            <mat-option\r\n              [value]=\"empresa._id\"\r\n              (click)=\"[setEmpresa(empresa._id)]\"\r\n            >\r\n              <p>{{ empresa.nombre_fantasia }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <button\r\n              mat-icon-button\r\n              (click)=\"[$event.stopPropagation(), openDialog(empresa._id)]\"\r\n            >\r\n              <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header>\r\n    <h2 class=\"titulo\">Ingresar nueva empresa</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <form\r\n        [formGroup]=\"empresaForm\"\r\n        (ngSubmit)=\"createEmpresa()\"\r\n        (submit)=\"empresaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-6 gap-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Razon Social</mat-label>\r\n              <input class=\"d-input\" matInput formControlName=\"razon_social\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 row-start-2\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre Fantasia</mat-label>\r\n              <input matInput formControlName=\"nombre_fantasia\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 row-start-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row-start-4\">\r\n            <mat-form-field>\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row-start-4\">\r\n            <mat-form-field>\r\n              <mat-label>Piso</mat-label>\r\n              <input matInput formControlName=\"piso\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row-start-4\">\r\n            <mat-form-field>\r\n              <mat-label>Deptartamento</mat-label>\r\n              <input matInput formControlName=\"deptartamento\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Rubro</mat-label>\r\n              <input matInput formControlName=\"rubro\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !empresaForm.value.razon_social ||\r\n                !empresaForm.value.nombre_fantasia ||\r\n                !empresaForm.value.calle ||\r\n                !empresaForm.value.altura ||\r\n                !empresaForm.value.rubro\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from '../variable-form/variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-empresa-planta-form',\r\n  templateUrl: './empresa-planta-form.component.html',\r\n  styleUrls: ['./empresa-planta-form.component.css'],\r\n})\r\nexport class EmpresaPlantaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  listEmpresas: any;\r\n  listLocalidades: any;\r\n  listPlantas: any;\r\n  id_empresa!: string;\r\n  id_localidad!: string;\r\n  id_planta!: string;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  isOptional = true;\r\n  plantaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllEmpresas();\r\n    this.plantaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.listPlantas.subscribe(\r\n      (message) => (this.listPlantas = message)\r\n    );\r\n    this.subscription = this.service.empresaSelected.subscribe(\r\n      (message) => (this.id_empresa = message)\r\n    );\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n  }\r\n\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createPlanta() {\r\n    if (this.plantaForm.valid) {\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        id_empresa: this.id_empresa,\r\n        nombre: this.plantaForm.value.nombre,\r\n        calle: this.plantaForm.value.calle,\r\n        altura: this.plantaForm.value.altura,\r\n      };\r\n      console.log(this.plantaForm.value);\r\n      this.service.postForm(this.apiPlanta, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else {\r\n            this.toastr.success('Planta registrada corectamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service\r\n              .getForm(this.apiPlanta + this.id_empresa)\r\n              .subscribe((res: any) => {\r\n                this.listPlantas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarPlanta(id: string) {\r\n    console.log(this.apiPlanta + id);\r\n    this.service.deleteForm(this.apiPlanta, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Planta borrada correctamente');\r\n          this.GetAllPlantas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setPlanta(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_planta = id;\r\n    this.service.plantaSelectedSource.next(id);\r\n    this.GetLineaByPlanta();\r\n  }\r\n\r\n  GetLineaByPlanta() {\r\n    this.service\r\n      .getForm(this.apiLinea + this.id_planta)\r\n      .subscribe((res: any) => {\r\n        console.log('planta get lineas', res);\r\n        this.service.streamLinea_PlantaSelected(res);\r\n      });\r\n  }\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'esta planta',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir una planta</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-form-field>\r\n        <mat-label>Elegir una planta</mat-label>\r\n        <mat-select>\r\n          <div *ngFor=\"let planta of listPlantas\">\r\n            <mat-option\r\n              [value]=\"planta._id\"\r\n              (click)=\"[setPlanta(planta._id, planta.nombre)]\"\r\n            >\r\n              <p>{{ planta.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <button\r\n              mat-icon-button\r\n              (click)=\"[$event.stopPropagation(), openDialog(planta._id)]\"\r\n            >\r\n              <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar nueva planta</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <form\r\n        [formGroup]=\"plantaForm\"\r\n        (ngSubmit)=\"createPlanta()\"\r\n        (submit)=\"plantaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !plantaForm.value.nombre ||\r\n                !plantaForm.value.calle ||\r\n                !plantaForm.value.altura\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from '../variable-form/variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-linea-produccion-form',\r\n  templateUrl: './linea-produccion-form.component.html',\r\n  styleUrls: ['./linea-produccion-form.component.css'],\r\n})\r\nexport class LineaProduccionFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  listPlantas: any;\r\n  listLineas: any;\r\n  id_empresa_planta!: string;\r\n  id_linea!: string;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  lineaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPlantas();\r\n    this.lineaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n      identificador: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.listLineas.subscribe(\r\n      (message) => (this.listLineas = message)\r\n    );\r\n    this.subscription = this.service.plantaSelected.subscribe(\r\n      (message) => (this.id_empresa_planta = message)\r\n    );\r\n  }\r\n\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLinea() {\r\n    if (this.lineaForm.valid) {\r\n      console.log(this.lineaForm.value);\r\n      let body = {\r\n        id_empresa_planta: this.id_empresa_planta,\r\n        nombre: this.lineaForm.value.nombre,\r\n        descripcion: this.lineaForm.value.descripcion,\r\n        identificador: this.lineaForm.value.identificador,\r\n      };\r\n      this.service.postForm(this.apiLinea, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success(\r\n              'Linea de produccion registrada corectamente',\r\n              '',\r\n              {\r\n                toastClass: 'yourclass ngx-toastr',\r\n                positionClass: 'toast-bottom-center',\r\n              }\r\n            );\r\n            this.service\r\n              .getForm(this.apiLinea + this.id_empresa_planta)\r\n              .subscribe((res: any) => {\r\n                this.listLineas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLineaProduccion(id: string) {\r\n    console.log(this.apiLinea + id);\r\n    this.service.deleteForm(this.apiLinea, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Linea de produccion borrada correctamente');\r\n          this.GetAllLineas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLinea(id: any, nombre: any) {\r\n    console.log('set linea', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_linea = id;\r\n    this.service.lineaSelectedSource.next(id);\r\n    this.GetMaquinaByLinea();\r\n  }\r\n\r\n  GetMaquinaByLinea() {\r\n    this.service\r\n      .getForm(this.apiMaquina + this.id_linea)\r\n      .subscribe((res: any) => {\r\n        console.log('linea get maquinas', res);\r\n        this.service.streamMaquinas_LineaSelected(res);\r\n      });\r\n  }\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'esta linea de produccion',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Elegir una línea de producción</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Linea</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let linea of listLineas\">\r\n            <mat-option\r\n              [value]=\"linea._id\"\r\n              (click)=\"[setLinea(linea._id, linea.nombre)]\"\r\n            >\r\n              <p>{{ linea.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ linea.descripcion }}\r\n            </p>\r\n            <button\r\n              mat-icon-button\r\n              (click)=\"[$event.stopPropagation(), openDialog(linea._id)]\"\r\n            >\r\n              <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar nueva línea</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"lineaForm\"\r\n        (ngSubmit)=\"createLinea()\"\r\n        (submit)=\"lineaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>identificador</mat-label>\r\n              <input matInput formControlName=\"identificador\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !lineaForm.value.nombre ||\r\n                !lineaForm.value.descripcion ||\r\n                !lineaForm.value.identificador\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-localidad-form',\r\n  templateUrl: './localidad-form.component.html',\r\n  styleUrls: ['./localidad-form.component.css'],\r\n})\r\nexport class LocalidadFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listProvincias: any;\r\n  listLocalidades: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiProvincias = environment.API_URL_PROVINCIAS;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  isOptional = true;\r\n  id_provincia!: string;\r\n  id_localidad!: string;\r\n  id_departamento!: string;\r\n  localidadForm!: FormGroup;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.localidadForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n    this.subscription = this.service.departamentoSelected.subscribe(\r\n      (message) => (this.id_departamento = message)\r\n    );\r\n    this.subscription2 = this.service.listLocalidades.subscribe(\r\n      (message) => (this.listLocalidades = message)\r\n    );\r\n  }\r\n  //no esta en uso\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLocalidad() {\r\n    if (this.localidadForm.valid) {\r\n      console.log(this.localidadForm.value);\r\n      let body = {\r\n        nombre: this.localidadForm.value.nombre,\r\n        id_provincia: this.id_provincia,\r\n      };\r\n      this.service.postForm(this.apiLocalidad, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Localidad registrada correctamente');\r\n            this.service\r\n              .getForm(this.apiLocalidad + this.id_provincia)\r\n              .subscribe((res: any) => {\r\n                this.listLocalidades = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLocalidad(id: string) {\r\n    console.log(this.apiLocalidad + id);\r\n    this.service.deleteForm(this.apiLocalidad, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Localidad borrada correctamente');\r\n          this.GetAllLocalidades();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLocalidad(id: any) {\r\n    console.log('set localidad', id);\r\n    this.service.changeMessage(id);\r\n    this.service.localidadSelectedSource.next(id);\r\n\r\n    this.GetEmpresasByLocalidad();\r\n  }\r\n\r\n  GetEmpresasByLocalidad() {\r\n    this.service\r\n      .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n      .subscribe((res: any) => {\r\n        console.log('Localidad-form get empresas', res);\r\n        this.service.streamEmpresas_LocalidadSelected(res);\r\n      });\r\n  }\r\n}\r\n","<div class=\"carta flex flex-col p-3\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Localidad </mat-label>\r\n    <mat-select [disabled]=\"!id_departamento\">\r\n      <mat-option\r\n        *ngFor=\"let localidad of listLocalidades\"\r\n        [value]=\"localidad.nombre ? localidad.nombre : localidad\"\r\n        (click)=\"\r\n          [setLocalidad(localidad.nombre ? localidad.nombre : localidad)]\r\n        \"\r\n      >\r\n        <p>{{ localidad.nombre ? localidad.nombre : localidad }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from '../variable-form/variable.modal.component';\r\n\r\n@Component({\r\n  selector: 'app-maquina-form',\r\n  templateUrl: './maquina-form.component.html',\r\n  styleUrls: ['./maquina-form.component.css'],\r\n})\r\nexport class MaquinaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  listLineas: any;\r\n  listTipoMaquina: any;\r\n  listMaquinas: any;\r\n  message: any;\r\n  id_linea_produccion!: string;\r\n  id_tipo_maquina!: string;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  maquinaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLineas();\r\n    this.GetAllTipos();\r\n\r\n    this.maquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      marca: this.builder.control('', Validators.required),\r\n      modelo: this.builder.control('', Validators.required),\r\n      detalle: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.currentMessage.subscribe(\r\n      (message) => (this.message = message)\r\n    );\r\n    this.subscription = this.service.listMaquinas.subscribe(\r\n      (message) => (this.listMaquinas = message)\r\n    );\r\n    this.subscription = this.service.lineaSelected.subscribe(\r\n      (message) => (this.id_linea_produccion = message)\r\n    );\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => (this.id_tipo_maquina = message)\r\n    );\r\n  }\r\n\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n  GetAllTipos() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquinas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createMaquina() {\r\n    if (this.maquinaForm.valid) {\r\n      console.log(this.maquinaForm.value);\r\n      let body = {\r\n        id_linea_produccion: this.id_linea_produccion,\r\n        id_tipo_maquina: this.id_tipo_maquina,\r\n        nombre: this.maquinaForm.value.nombre,\r\n        marca: this.maquinaForm.value.marca,\r\n        modelo: this.maquinaForm.value.modelo,\r\n        detalle: this.maquinaForm.value.detalle,\r\n      };\r\n      this.service.postForm(this.apiMaquina, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Maquina registrada corectamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service\r\n              .getForm(this.apiMaquina + this.id_linea_produccion)\r\n              .subscribe((res: any) => {\r\n                console.log('res maquina: ', res);\r\n                this.listMaquinas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarMaquina(id: string) {\r\n    console.log(this.apiMaquina + id);\r\n    this.service.deleteForm(this.apiMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Maquina borrada correctamente');\r\n          this.GetAllMaquinas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setMaquina(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamMaquinaSelected(maquina_id: string) {\r\n    this.service.streamMaquinaSelected(maquina_id);\r\n  }\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'esta maquina',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir una máquina</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una maquina</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let maquina of listMaquinas\">\r\n            <mat-option\r\n              [value]=\"maquina._id\"\r\n              (click)=\"\r\n                [\r\n                  setMaquina(maquina._id, maquina.nombre),\r\n                  StreamMaquinaSelected(maquina._id)\r\n                ]\r\n              \"\r\n            >\r\n              <p>{{ maquina.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ maquina.detalle }}\r\n            </p>\r\n            <button\r\n              mat-icon-button\r\n              (click)=\"[$event.stopPropagation(), openDialog(maquina._id)]\"\r\n            >\r\n              <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar una nueva máquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"maquinaForm\"\r\n        (ngSubmit)=\"createMaquina()\"\r\n        (submit)=\"maquinaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-5\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Marca</mat-label>\r\n              <input matInput formControlName=\"marca\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Modelo</mat-label>\r\n              <input matInput formControlName=\"modelo\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Detalle</mat-label>\r\n              <input matInput formControlName=\"detalle\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !maquinaForm.value.nombre ||\r\n                !maquinaForm.value.marca ||\r\n                !maquinaForm.value.modelo ||\r\n                !maquinaForm.value.detalle\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-pais-form',\r\n  templateUrl: './pais-form.component.html',\r\n  styleUrls: ['./pais-form.component.css'],\r\n})\r\nexport class PaisFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private _httpservice: HttpService\r\n  ) {}\r\n  listPaises: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiArgentinaPronvincias = environment.API_URL_ARGENTINA_PROVINCIAS;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  isOptional = true;\r\n  paisForm!: FormGroup;\r\n  nombre_pais!: string;\r\n  message2!: any;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  completed: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPaises();\r\n    this.paisForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.nombre_pais = message)\r\n    );\r\n  }\r\n\r\n  GetAllPaises() {\r\n    this._httpservice.httpGet(this.apiPaises).subscribe((res: any) => {\r\n      console.log('lista paises', res);\r\n      this.listPaises = res['data'];\r\n      this.setPais(this.listPaises[7].country);\r\n    });\r\n  }\r\n  setPais(id: any) {\r\n    console.log('set pais', id);\r\n    this.service.changeMessage(id);\r\n    this.service.paisSelectedSource.next(id);\r\n    this.GetProvinciasByPais();\r\n  }\r\n\r\n  GetProvinciasByPais() {\r\n    console.log('pais nombre', this.nombre_pais);\r\n    if (this.nombre_pais == 'Argentina') {\r\n      this._httpservice\r\n        .httpGet(this.apiArgentinaPronvincias)\r\n        .subscribe((res: any) => {\r\n          console.log('pais form get provincias', res.provincias);\r\n          this.service.streamProvincias_PaisSelected(res.provincias);\r\n        });\r\n    } else {\r\n      let body = {\r\n        country: this.nombre_pais,\r\n      };\r\n      this._httpservice\r\n        .httpPost(this.apiProvincia, body)\r\n        .subscribe((res: any) => {\r\n          console.log('pais form get provincias', res.body.data.states);\r\n          this.service.streamProvincias_PaisSelected(res.body.data.states);\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"carta mat-elevation-z flex flex-col p-3\" style=\"display: none\">\r\n  <mat-form-field>\r\n    <mat-label>País</mat-label>\r\n\r\n    <mat-select (selectionChange)=\"(!completed)\">\r\n      <mat-option\r\n        *ngFor=\"let pais of listPaises\"\r\n        [value]=\"pais.country\"\r\n        (click)=\"setPais(pais.country)\"\r\n      >\r\n        <p>{{ pais.country }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from '../variable-form/variable.modal.component';\r\n\r\n@Component({\r\n  selector: 'app-proceso-form',\r\n  templateUrl: './proceso-form.component.html',\r\n  styleUrls: ['./proceso-form.component.css'],\r\n})\r\nexport class ProcesoFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  procesoForm!: FormGroup;\r\n  listProceso: any;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllProcesos();\r\n    this.subscription = this.service.listProceso.subscribe(\r\n      (message) => (this.listProceso = message)\r\n    );\r\n    this.procesoForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProceso = res['datos'];\r\n    });\r\n  }\r\n\r\n  crearProceso() {\r\n    if (this.procesoForm.valid) {\r\n      console.log(this.procesoForm.value);\r\n      this.service.postForm(this.apiProceso, this.procesoForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('proceso registrado correctamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.GetAllProcesos();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarProcesos(id: string) {\r\n    console.log(this.apiProceso + id);\r\n    this.service.deleteForm(this.apiProceso, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Proceso borrado correctamente');\r\n          this.GetAllProcesos();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setProceso(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamProcesoSelected(proceso_id: string) {\r\n    this.service.streamProcesoSelected(proceso_id);\r\n  }\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'este proceso',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir un proceso</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un proceso</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let proceso of listProceso\">\r\n            <mat-option\r\n              [value]=\"proceso._id\"\r\n              (click)=\"\r\n                [\r\n                  setProceso(proceso._id, proceso.nombre),\r\n                  StreamProcesoSelected(proceso._id)\r\n                ]\r\n              \"\r\n            >\r\n              <p>{{ proceso.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ proceso.descripcion }}\r\n            </p>\r\n            <button\r\n              mat-icon-button\r\n              (click)=\"[$event.stopPropagation(), openDialog(proceso._id)]\"\r\n            >\r\n              <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar un nuevo proceso</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"procesoForm\"\r\n        (ngSubmit)=\"crearProceso()\"\r\n        (submit)=\"procesoForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-3\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre del proceso</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Descripcion del proceso</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !procesoForm.value.nombre || !procesoForm.value.descripcion\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-provincia-form',\r\n  templateUrl: './provincia-form.component.html',\r\n  styleUrls: ['./provincia-form.component.css'],\r\n})\r\nexport class ProvinciaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private _httpservice: HttpService\r\n  ) {}\r\n  listPaises: any;\r\n  listProvincias: any;\r\n  listProvinciasPais: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiArgentinaDepartamentos = environment.API_URL_ARGENTINA_DEPARTAMENTOS;\r\n  isOptional = true;\r\n  provinciaForm!: FormGroup;\r\n  nombre_pais!: string;\r\n  id_provincia!: string;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.provinciaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.nombre_pais = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n\r\n    this.subscription2 = this.service.listProvincias.subscribe(\r\n      (message) => (this.listProvinciasPais = message)\r\n    );\r\n  }\r\n\r\n  setProvincia(nombre: any) {\r\n    console.log('set provincia nombre', nombre);\r\n    this.service.changeMessage(nombre);\r\n    this.service.provinciaSelectedSource.next(nombre);\r\n    this.GetDepartamentosByProvincia();\r\n  }\r\n\r\n  GetDepartamentosByProvincia() {\r\n    if (this.nombre_pais == 'Argentina') {\r\n      this._httpservice\r\n        .httpGet(\r\n          this.apiArgentinaDepartamentos +\r\n            this.id_provincia +\r\n            '&orden=nombre&max=2100&exacto=true'\r\n        )\r\n        .subscribe((res: any) => {\r\n          console.log('pais form get departamentos', res.departamentos);\r\n\r\n          this.service.streamDepartamentos_ProvinciaSelected(res.departamentos);\r\n        });\r\n    } else {\r\n      let body = {\r\n        country: this.nombre_pais,\r\n        state: this.id_provincia,\r\n      };\r\n      this._httpservice\r\n        .httpPost(this.apiLocalidad, body)\r\n        .subscribe((res: any) => {\r\n          console.log('provincia form get localidades', res.body.data);\r\n\r\n          this.service.streamDepartamentos_ProvinciaSelected(res.body.data);\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"carta flex flex-col p-3\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Provincia</mat-label>\r\n\r\n    <mat-select>\r\n      <mat-option\r\n        *ngFor=\"let provincia of listProvinciasPais\"\r\n        [value]=\"provincia.name ? provincia.name : provincia.nombre\"\r\n        (click)=\"\r\n          [setProvincia(provincia.name ? provincia.name : provincia.nombre)]\r\n        \"\r\n      >\r\n        <p>{{ provincia.name ? provincia.name : provincia.nombre }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from '../variable-form/variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-tipo-maquina-form',\r\n  templateUrl: './tipo-maquina-form.component.html',\r\n  styleUrls: ['./tipo-maquina-form.component.css'],\r\n})\r\nexport class TipoMaquinaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  listPaises: any;\r\n  listTipoMaquina: any;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  isOptional = true;\r\n  tipoMaquinaForm!: FormGroup;\r\n  pais: any;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTiposMaquina();\r\n    this.subscription = this.service.listTipoMaquina.subscribe(\r\n      (message) => (this.listTipoMaquina = message)\r\n    );\r\n    this.tipoMaquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  createTipoMaquina() {\r\n    if (this.tipoMaquinaForm.valid) {\r\n      console.log(this.tipoMaquinaForm.value);\r\n      this.service\r\n        .postForm(this.apiTipoMaquina, this.tipoMaquinaForm.value)\r\n        .subscribe({\r\n          next: (res: any) => {\r\n            console.log('respuesta: ', res);\r\n            if (res.status == 500) {\r\n              this.toastr.warning(res.error.error);\r\n            } else {\r\n              this.toastr.success(\r\n                'Tipo de maquina registrada correctamente',\r\n                '',\r\n                {\r\n                  toastClass: 'yourclass ngx-toastr',\r\n                  positionClass: 'toast-bottom-center',\r\n                }\r\n              );\r\n              this.GetAllTiposMaquina();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.toastr.error(error);\r\n            console.log(error);\r\n          },\r\n        });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  GetAllTiposMaquina() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log('tipo maquinas: ', res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n\r\n  borrarTipoMaquina(id: string) {\r\n    console.log(this.apiTipoMaquina + id);\r\n    this.service.deleteForm(this.apiTipoMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Tipo de maquina borrada correctamente');\r\n          this.GetAllTiposMaquina();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTipo(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamTipoSelected(tipo_id: string) {\r\n    this.service.streamTipoSelected(tipo_id);\r\n  }\r\n\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'este tipo de maquina',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Elegir un tipo de máquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un Tipo de maquina</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let tipo of listTipoMaquina\">\r\n            <mat-option\r\n              [value]=\"tipo._id\"\r\n              (click)=\"\r\n                [setTipo(tipo._id, tipo.nombre), StreamTipoSelected(tipo._id)]\r\n              \"\r\n            >\r\n              <p>{{ tipo.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ tipo.descripcion }}\r\n            </p>\r\n            <button\r\n              mat-icon-button\r\n              (click)=\"[$event.stopPropagation(), openDialog(tipo._id)]\"\r\n            >\r\n              <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar un nuevo tipo de máquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"tipoMaquinaForm\"\r\n        (ngSubmit)=\"createTipoMaquina()\"\r\n        (submit)=\"tipoMaquinaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-3\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !tipoMaquinaForm.value.nombre ||\r\n                !tipoMaquinaForm.value.descripcion\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-trigger-form',\r\n  templateUrl: './trigger-form.component.html',\r\n  styleUrls: ['./trigger-form.component.css'],\r\n})\r\nexport class TriggerFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  triggerForm!: FormGroup;\r\n  listTriggers: any;\r\n  trigger_descripcion!: string;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTriggers();\r\n    this.triggerForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTriggers = res;\r\n    });\r\n  }\r\n\r\n  crearTrigger() {\r\n    if (this.triggerForm.valid) {\r\n      console.log(this.triggerForm.value);\r\n      this.service.postForm(this.apiTrigger, this.triggerForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Trigger registrado correctamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.GetAllTriggers();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarTrigger(id: string) {\r\n    console.log(this.apiTrigger + id);\r\n    this.service.deleteForm(this.apiTrigger, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Trigger borrado correctamente');\r\n          this.GetAllTriggers();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTrigger(id: any, nombre: any, descripcion: string) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.trigger_descripcion = descripcion;\r\n  }\r\n\r\n  StreamTriggerSelected(trigger_id: string) {\r\n    this.service.streamTriggerSelected(trigger_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir un trigger</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Seleccionar una opcion del listado</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let trigger of listTriggers\">\r\n            <mat-option\r\n              [value]=\"trigger._id\"\r\n              (click)=\"\r\n                [\r\n                  setTrigger(trigger._id, trigger.nombre, trigger.descripcion),\r\n                  StreamTriggerSelected(trigger._id)\r\n                ]\r\n              \"\r\n            >\r\n              <p>{{ trigger.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ trigger.descripcion }}\r\n            </p>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from './variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-variable-form',\r\n  templateUrl: './variable-form.component.html',\r\n  styleUrls: ['./variable-form.component.css'],\r\n})\r\nexport class VariableFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private httpService: HttpService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  apiVariables = environment.API_URL_VARIABLES;\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  apiMaquinas = environment.API_URL_MAQUINA;\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  variableForm!: FormGroup;\r\n  id_maquina: any;\r\n  id_proceso: any;\r\n  id_trigger: any;\r\n  listProcesos: any;\r\n  listMaquina: any;\r\n  listTrigger: any;\r\n  listaVariables: any;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllVariables();\r\n    this.GetAllProcesos();\r\n    this.GetAllMaquinas();\r\n    this.GetAllTriggers();\r\n    this.variableForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control(''),\r\n      trigger_valor: this._formBuilder.control(''),\r\n    });\r\n    this.subscription = this.service.maquinaSelected.subscribe(\r\n      (message) => (this.id_maquina = message)\r\n    );\r\n    this.subscription = this.service.procesoSelected.subscribe(\r\n      (message) => (this.id_proceso = message)\r\n    );\r\n    this.subscription = this.service.triggerSelected.subscribe(\r\n      (message) => (this.id_trigger = message)\r\n    );\r\n    this.subscription = this.httpService.listaVariables.subscribe(\r\n      (message) => (this.listaVariables = message)\r\n    );\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProcesos = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquinas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTrigger = res;\r\n    });\r\n  }\r\n  GetAllVariables() {\r\n    this.service.getForm(this.apiVariables).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listaVariables = res;\r\n    });\r\n  }\r\n\r\n  crearVariable() {\r\n    if (this.variableForm.valid) {\r\n      console.log(this.variableForm.value);\r\n      let body = {\r\n        id_maquina: this.id_maquina,\r\n        id_proceso: this.id_proceso,\r\n        id_trigger: this.id_trigger,\r\n        nombre: this.variableForm.value.nombre,\r\n        trigger_valor: this.variableForm.value.trigger_valor,\r\n        time_stamp: new Date(),\r\n      };\r\n      this.service.postForm(this.apiVariables, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Variable registrada correctamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.GetAllVariables();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor ingrese datos validos');\r\n    }\r\n  }\r\n\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: {\r\n        variable_id: variable_id,\r\n        titulo: 'esta variable',\r\n      },\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Elegir una variable</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-accordion>\r\n        <mat-expansion-panel (click)=\"GetAllVariables()\" hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Listado de variables</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <mat-list role=\"list\" *ngFor=\"let variable of listaVariables\">\r\n            <mat-list-item role=\"listitem\">\r\n              {{ variable.nombre }}\r\n\r\n              <div matListItemMeta>\r\n                <mat-icon\r\n                  matTooltip=\"\r\n\r\n                Proceso: {{ variable.id_proceso.descripcion }}\r\n                Maquina: {{ variable.id_maquina.nombre }}\r\n                Trigger: {{ variable.id_trigger.nombre }}\r\n                \r\n                \"\r\n                >\r\n                  info_outlined\r\n                </mat-icon>\r\n              </div>\r\n              <button\r\n                matListItemMeta\r\n                mat-icon-button\r\n                (click)=\"openDialog(variable._id)\"\r\n              >\r\n                <mat-icon class=\"delete_icon\">delete</mat-icon>\r\n              </button>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar una nueva variable</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"variableForm\"\r\n        (ngSubmit)=\"crearVariable()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>nombre de la variable </mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion de la variable </mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>valor del trigger </mat-label>\r\n              <input matInput formControlName=\"trigger_valor\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !variableForm.value.nombre || !variableForm.value.descripcion\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'variable-modal',\r\n  templateUrl: 'variable-modal.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class VariableModalComponent implements OnInit {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<VariableModalComponent>,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private httpService: HttpService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n  subscription!: Subscription;\r\n  listaVariables: any;\r\n\r\n  apiVariables = environment.API_URL_VARIABLES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlantas = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  userUrl = environment.API_URL_USERS;\r\n\r\n  id_localidad!: string;\r\n  id_empresa!: string;\r\n  id_planta!: string;\r\n  id_linea!: string;\r\n  id_tipoMaquina!: string;\r\n  id_maquina!: string;\r\n  id_preoceso!: string;\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.empresaSelected.subscribe(\r\n      (message) => (this.id_empresa = message)\r\n    );\r\n    this.subscription = this.service.plantaSelected.subscribe(\r\n      (message) => (this.id_planta = message)\r\n    );\r\n    this.subscription = this.service.lineaSelected.subscribe(\r\n      (message) => (this.id_linea = message)\r\n    );\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => (this.id_tipoMaquina = message)\r\n    );\r\n    this.subscription = this.service.maquinaSelected.subscribe(\r\n      (message) => (this.id_maquina = message)\r\n    );\r\n    this.subscription = this.service.procesoSelected.subscribe(\r\n      (message) => (this.id_preoceso = message)\r\n    );\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  switchDelete(id: any) {\r\n    switch (this.data.titulo) {\r\n      case 'esta empresa':\r\n        this.borrarEmpresa(id);\r\n        break;\r\n      case 'esta planta':\r\n        this.borrarPlanta(id);\r\n        break;\r\n      case 'esta linea de produccion':\r\n        this.borrarLineaProduccion(id);\r\n        break;\r\n      case 'este tipo de maquina':\r\n        this.borrarTipoMaquina(id);\r\n        break;\r\n      case 'esta maquina':\r\n        this.borrarMaquina(id);\r\n        break;\r\n      case 'este proceso':\r\n        this.borrarProcesos(id);\r\n        break;\r\n      case 'esta variable':\r\n        this.borrarVariable(id);\r\n        break;\r\n      case 'este usuario':\r\n        this.borrarUsuario(id);\r\n        break;\r\n\r\n      default:\r\n        this.toastr.warning('Error desconocido');\r\n\r\n        break;\r\n    }\r\n  }\r\n\r\n  borrarVariable(id: string) {\r\n    console.log(this.apiVariables + id);\r\n    this.service.deleteForm(this.apiVariables, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Variable borrada correctamente', '', {\r\n            toastClass: 'yourclass ngx-toastr',\r\n            positionClass: 'toast-bottom-center',\r\n          });\r\n          this.GetAllVariables();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  borrarEmpresa(id: string) {\r\n    this.service.deleteForm(this.apiEmpresas, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Empresa borrada correctamente');\r\n          this.GetEmpresasByLocalidad();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  borrarPlanta(id: string) {\r\n    console.log(this.apiPlantas + id);\r\n    this.service.deleteForm(this.apiPlantas, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Planta borrada correctamente');\r\n          this.GetPlantasByEmpresas();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  borrarLineaProduccion(id: string) {\r\n    console.log(this.apiLinea + id);\r\n    this.service.deleteForm(this.apiLinea, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Linea de produccion borrada correctamente');\r\n          this.GetLineaByPlanta();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  borrarTipoMaquina(id: string) {\r\n    console.log(this.apiTipoMaquina + id);\r\n    this.service.deleteForm(this.apiTipoMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Tipo de maquina borrada correctamente');\r\n          this.GetMaquinaByLinea();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  borrarMaquina(id: string) {\r\n    console.log(this.apiMaquina + id);\r\n    this.service.deleteForm(this.apiMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Maquina borrada correctamente');\r\n          this.GetMaquinaByLinea();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  borrarProcesos(id: string) {\r\n    console.log(this.apiProceso + id);\r\n    this.service.deleteForm(this.apiProceso, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Proceso borrado correctamente');\r\n          this.GetAllProcesos();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  borrarUsuario(id: string) {\r\n    this.service.deleteForm(this.userUrl, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Usuario borrado correctamente');\r\n          this.service.GetAll().subscribe((res) => {\r\n            this.service.streamUsers(res);\r\n          });\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  GetAllVariables() {\r\n    this.service.getForm(this.apiVariables).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.httpService.stream_Variables(res);\r\n    });\r\n  }\r\n  GetEmpresasByLocalidad() {\r\n    this.service\r\n      .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n      .subscribe((res: any) => {\r\n        console.log('Localidad-form get empresas', res);\r\n        this.service.streamEmpresas_LocalidadSelected(res);\r\n      });\r\n  }\r\n  GetPlantasByEmpresas() {\r\n    this.service\r\n      .getForm(this.apiPlantas + this.id_empresa)\r\n      .subscribe((res: any) => {\r\n        console.log('empresa get plantas', res);\r\n        this.service.streamPlantas_EmpresaSelected(res);\r\n      });\r\n  }\r\n  GetLineaByPlanta() {\r\n    this.service\r\n      .getForm(this.apiLinea + this.id_planta)\r\n      .subscribe((res: any) => {\r\n        console.log('planta get lineas', res);\r\n        this.service.streamLinea_PlantaSelected(res);\r\n      });\r\n  }\r\n  GetMaquinaByLinea() {\r\n    this.service\r\n      .getForm(this.apiMaquina + this.id_linea)\r\n      .subscribe((res: any) => {\r\n        console.log('linea get maquinas', res);\r\n        this.service.streamMaquinas_LineaSelected(res);\r\n      });\r\n  }\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.service.streamProcesos(res['datos']);\r\n    });\r\n  }\r\n  GetAllTipoMaquinas() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.service.streamTipoMaquinas(res['datos']);\r\n    });\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  <p>¿Estás seguro que deseás borrar {{data.titulo}}?</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button (click)=\"onNoClick()\">Cancelar</button>\r\n  <button\r\n    mat-raised-button\r\n    color=\"warn\"\r\n    (click)=\"switchDelete(data.variable_id)\"\r\n    cdkFocusInitial\r\n  >\r\n    Confirmar\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { inject } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivateFn,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const authGuard: CanActivateFn = (\r\n  route: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot\r\n) => {\r\n  const router = inject(Router);\r\n  const service = inject(AuthService);\r\n  const toastr = inject(ToastrService);\r\n\r\n  if (service.IsLoggedIn()) {\r\n    if (route.url.length > 0) {\r\n      let menu = route.url[0].path;\r\n      console.log('authService', menu);\r\n      if (menu == 'user' || 'admin') {\r\n        if (service.getUserRole() == 'admin') {\r\n          return true;\r\n        } else {\r\n          toastr.warning('Acceso restringido, no es administrador');\r\n          router.navigate(['']);\r\n          return false;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  } else {\r\n    router.navigate(['login']);\r\n    return false;\r\n  }\r\n};\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-login-modal',\r\n  templateUrl: './login-modal.component.html',\r\n  styleUrls: ['./login-modal.component.css'],\r\n})\r\nexport class LoginModalComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<LoginModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { isLogin: string }\r\n  ) {}\r\n\r\n  cerrar(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"flex flex-col card\">\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"80\"\r\n    height=\"80\"\r\n    viewBox=\"0 0 80 80\"\r\n    fill=\"none\"\r\n    class=\"icono\"\r\n  >\r\n    <g clip-path=\"url(#clip0_139_508)\">\r\n      <path\r\n        d=\"M40 0C32.0888 0 24.3552 2.34596 17.7772 6.74122C11.1992 11.1365 6.07234 17.3836 3.04484 24.6927C0.0173314 32.0017 -0.774802 40.0444 0.768607 47.8036C2.31202 55.5629 6.12165 62.6902 11.7157 68.2843C17.3098 73.8784 24.4372 77.688 32.1964 79.2314C39.9556 80.7748 47.9983 79.9827 55.3074 76.9552C62.6164 73.9277 68.8635 68.8008 73.2588 62.2228C77.6541 55.6448 80 47.9113 80 40C79.9885 29.3949 75.7706 19.2274 68.2716 11.7284C60.7727 4.22943 50.6052 0.0114703 40 0ZM40 73.3333C33.4073 73.3333 26.9626 71.3784 21.481 67.7157C15.9994 64.0529 11.727 58.847 9.20403 52.7561C6.68111 46.6652 6.021 39.963 7.30718 33.497C8.59335 27.031 11.768 21.0915 16.4298 16.4298C21.0915 11.768 27.031 8.59333 33.497 7.30716C39.963 6.02098 46.6653 6.6811 52.7561 9.20402C58.847 11.7269 64.053 15.9994 67.7157 21.481C71.3784 26.9626 73.3334 33.4073 73.3334 40C73.3236 48.8376 69.8086 57.3104 63.5595 63.5595C57.3104 69.8086 48.8376 73.3236 40 73.3333Z\"\r\n        fill=\"#C82D3B\"\r\n      />\r\n      <path\r\n        d=\"M40 16.6667C39.1159 16.6667 38.2681 17.0179 37.6429 17.643C37.0178 18.2681 36.6666 19.116 36.6666 20V46.6667C36.6666 47.5507 37.0178 48.3986 37.6429 49.0237C38.2681 49.6488 39.1159 50 40 50C40.884 50 41.7319 49.6488 42.357 49.0237C42.9821 48.3986 43.3333 47.5507 43.3333 46.6667V20C43.3333 19.116 42.9821 18.2681 42.357 17.643C41.7319 17.0179 40.884 16.6667 40 16.6667Z\"\r\n        fill=\"#C82D3B\"\r\n      />\r\n      <path\r\n        d=\"M43.3333 60C43.3333 58.159 41.8409 56.6666 40 56.6666C38.159 56.6666 36.6666 58.159 36.6666 60C36.6666 61.8409 38.159 63.3333 40 63.3333C41.8409 63.3333 43.3333 61.8409 43.3333 60Z\"\r\n        fill=\"#C82D3B\"\r\n      />\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_139_508\">\r\n        <rect width=\"80\" height=\"80\" fill=\"white\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n  <div *ngIf=\"data.isLogin === 'pass'\" class=\"flex flex-col card\">\r\n    <h1 mat-dialog-title class=\"titulo\">Notificar administrador</h1>\r\n    <div mat-dialog-content>\r\n      <p>Solicitar nueva contraseña de acceso al administrador</p>\r\n    </div>\r\n    <button mat-button class=\"boton\" (click)=\"cerrar()\">Aceptar</button>\r\n  </div>\r\n  <div *ngIf=\"data.isLogin === 'login'\" class=\"flex flex-col card\">\r\n    <h1 mat-dialog-title class=\"titulo\">Credenciales inválidas</h1>\r\n    <div mat-dialog-content>\r\n      <p>Usuario o contraseña incorrecta</p>\r\n    </div>\r\n    <button mat-button class=\"boton\" (click)=\"cerrar()\">\r\n      Intentar nuevamente\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Subscription, catchError, delay, BehaviorSubject, of } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogOverviewExampleDialog } from '../dialog.component';\r\nimport { LoginModalComponent } from '../login-modal/login-modal.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ListarDatosModal } from '../components/listar-datos/listar-daatos-modal/listar-datos-modal.component';\r\nimport {\r\n  DOCUMENT,\r\n  Location,\r\n  LocationStrategy,\r\n  PlatformLocation,\r\n} from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private jwtHelper: JwtHelperService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService,\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private location: Location,\r\n    private locationStrategy: LocationStrategy,\r\n    private plaformLocation: PlatformLocation\r\n  ) {}\r\n  apiUsers = environment.API_URL_USERS;\r\n  apiRole = environment.API_URL_ROLES;\r\n  authToken: any;\r\n  user: any;\r\n  tokenSubscription = new Subscription();\r\n  tokenSubscription2 = new Subscription();\r\n  timeout?: any;\r\n\r\n  private messageSource = new BehaviorSubject('default message');\r\n  //observables que recogen la respuesta de la llamada a la api\r\n  private provinciasSource = new BehaviorSubject('');\r\n  private departamentosSource = new BehaviorSubject('');\r\n  private localidadesSource = new BehaviorSubject('');\r\n  private empresasSource = new BehaviorSubject('');\r\n  private plantasSource = new BehaviorSubject('');\r\n  private lineaSource = new BehaviorSubject('');\r\n  private maquinaSource = new BehaviorSubject('');\r\n  private tipoMaquinaSource = new BehaviorSubject('');\r\n  private procesoSource = new BehaviorSubject('');\r\n  private userSource = new BehaviorSubject('');\r\n  private fullnameSource = new BehaviorSubject('');\r\n\r\n  //observables que recogen la opcion seleccionada\r\n  paisSelectedSource = new BehaviorSubject('');\r\n  provinciaSelectedSource = new BehaviorSubject('');\r\n  departamentoSelectedSource = new BehaviorSubject('');\r\n  localidadSelectedSource = new BehaviorSubject('');\r\n  empresaSelectedSource = new BehaviorSubject('');\r\n  plantaSelectedSource = new BehaviorSubject('');\r\n  lineaSelectedSource = new BehaviorSubject('');\r\n  tipoMaquinaSelectedSource = new BehaviorSubject('');\r\n  maquinaSelectedSource = new BehaviorSubject('');\r\n  procesoSelectedSource = new BehaviorSubject('');\r\n  triggerSelectedSource = new BehaviorSubject('');\r\n\r\n  currentMessage = this.messageSource.asObservable();\r\n\r\n  // guardamos la respuesta en listas que son accesibles desde los componentes\r\n  listProvincias = this.provinciasSource.asObservable();\r\n  listDepartamentos = this.departamentosSource.asObservable();\r\n  listLocalidades = this.localidadesSource.asObservable();\r\n  listEmpresas = this.empresasSource.asObservable();\r\n  listPlantas = this.plantasSource.asObservable();\r\n  listLineas = this.lineaSource.asObservable();\r\n  listMaquinas = this.maquinaSource.asObservable();\r\n  listTipoMaquina = this.tipoMaquinaSource.asObservable();\r\n  listProceso = this.procesoSource.asObservable();\r\n  listUser = this.userSource.asObservable();\r\n\r\n  // guardamos la opcion seleccionada para que sea accesible a los componentes\r\n  paisSelected = this.paisSelectedSource.asObservable();\r\n  provinciaSelected = this.provinciaSelectedSource.asObservable();\r\n  departamentoSelected = this.departamentoSelectedSource.asObservable();\r\n  localidadSelected = this.localidadSelectedSource.asObservable();\r\n  empresaSelected = this.empresaSelectedSource.asObservable();\r\n  plantaSelected = this.plantaSelectedSource.asObservable();\r\n  lineaSelected = this.lineaSelectedSource.asObservable();\r\n  tipoMaquinaSelected = this.tipoMaquinaSelectedSource.asObservable();\r\n  maquinaSelected = this.maquinaSelectedSource.asObservable();\r\n  procesoSelected = this.procesoSelectedSource.asObservable();\r\n  triggerSelected = this.triggerSelectedSource.asObservable();\r\n  fullname = this.fullnameSource.asObservable();\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '50%',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  openDialogLogin(value: string): void {\r\n    const dialogRef = this.dialog.open(LoginModalComponent, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '571px',\r\n      height: '292px',\r\n      data: { isLogin: value },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  openDialogListarDatos(): void {\r\n    const dialogRef = this.dialog.open(ListarDatosModal, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '571px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  // get\r\n\r\n  GetAll() {\r\n    return this.http.get(this.apiUsers);\r\n  }\r\n\r\n  //\r\n\r\n  GetAllRoles() {\r\n    return this.http.get(this.apiRole);\r\n  }\r\n\r\n  GetById(id: any) {\r\n    return this.http.get(this.apiUsers + '/' + id);\r\n  }\r\n\r\n  LogIn(body: any) {\r\n    console.log(`base url: ${environment.API_BASE_URL}`);\r\n    return this.http.post(this.apiUsers + 'login', body).pipe(\r\n      catchError(async (error) => {\r\n        console.log(error.message);\r\n        return error;\r\n      })\r\n    );\r\n  }\r\n  storeUserData(token: any, user: any, rtoken: any) {\r\n    console.log('storeUserData, user: ', user, 'token: ', token);\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(token)!.valueOf() -\r\n      new Date().valueOf();\r\n    sessionStorage.setItem('token', token);\r\n    sessionStorage.setItem('rtoken', rtoken);\r\n    sessionStorage.setItem('username', user.username);\r\n    sessionStorage.setItem('fullname', user.name);\r\n    sessionStorage.setItem('userrole', user.role.name);\r\n    this.authToken = token;\r\n    this.user = user;\r\n    // this.expirationCounter(this.timeout);\r\n    if (sessionStorage.getItem('userrole') == 'admin') {\r\n      this.router.navigate(['admin']);\r\n    } else {\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n\r\n  expirationCounter(timeout: any) {\r\n    console.log('timeout: ', timeout);\r\n    this.tokenSubscription.unsubscribe();\r\n    this.tokenSubscription = of(null)\r\n      .pipe(delay(timeout))\r\n      .subscribe((expired) => {\r\n        console.log('EXPIRED!!');\r\n        this.dialog.closeAll();\r\n        this.logout();\r\n        this.toastr.error('sesion expirada', 'vuelva a iniciar sesion');\r\n      });\r\n    this.pre_expirationCounter(timeout);\r\n  }\r\n\r\n  pre_expirationCounter(timeout: any) {\r\n    let timeNow = new Date();\r\n    console.log('time now: ', timeNow);\r\n    this.tokenSubscription2.unsubscribe();\r\n    this.tokenSubscription2 = of(null)\r\n      .pipe(delay(timeout - 120000))\r\n      .subscribe(() => {\r\n        this.openDialog();\r\n        console.log('about to expire !!');\r\n      });\r\n  }\r\n  logout() {\r\n    this.tokenSubscription.unsubscribe();\r\n    this.authToken = null;\r\n    this.user = null;\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/login']);\r\n    sessionStorage.setItem('token', '');\r\n    console.log(sessionStorage.getItem('token')?.toString());\r\n  }\r\n\r\n  IsLoggedIn() {\r\n    return sessionStorage.getItem('username') != null;\r\n  }\r\n  getUserRole() {\r\n    return sessionStorage.getItem('userrole') != null\r\n      ? sessionStorage.getItem('userrole')?.toString()\r\n      : '';\r\n  }\r\n\r\n  getUser() {\r\n    try {\r\n      var fullname = sessionStorage.getItem('fullname')!.toString();\r\n      this.fullnameSource.next(fullname);\r\n    } catch (error) {\r\n      console.log('getUser error: ', error);\r\n    }\r\n  }\r\n\r\n  // post\r\n  Proceedregister(inputdata: any) {\r\n    return this.http\r\n      .post(this.apiUsers, inputdata, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  UpdateUser(id: any, inputdata: any) {\r\n    return this.http.post(this.apiUsers + '/' + id, inputdata);\r\n  }\r\n\r\n  // get formularios\r\n  getForm(url: string) {\r\n    return this.http\r\n      .get(url, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          if (error.status == 403) {\r\n            this.router.navigate(['/login']);\r\n          }\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  postForm(url: string, formData: any) {\r\n    return this.http\r\n      .post(url, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  deleteForm(url: string, id: string) {\r\n    return this.http\r\n      .delete(url + 'delete/' + id, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  changeMessage(message: string) {\r\n    console.log('change message: ', message);\r\n    this.messageSource.next(message);\r\n  }\r\n  streamProvincias_PaisSelected(provincias: string) {\r\n    console.log('change message: ', provincias);\r\n    this.provinciasSource.next(provincias);\r\n  }\r\n\r\n  streamDepartamentos_ProvinciaSelected(departamentos: string) {\r\n    console.log('change message: ', departamentos);\r\n    this.departamentosSource.next(departamentos);\r\n  }\r\n  streamLocalidades_DepartamentoSelected(localidades: string) {\r\n    console.log('change message: ', localidades);\r\n    this.localidadesSource.next(localidades);\r\n  }\r\n\r\n  streamEmpresas_LocalidadSelected(empresas: string) {\r\n    console.log('change message: ', empresas);\r\n    this.empresasSource.next(empresas);\r\n  }\r\n  streamPlantas_EmpresaSelected(plantas: string) {\r\n    console.log('change message: ', plantas);\r\n    this.plantasSource.next(plantas);\r\n  }\r\n\r\n  streamLinea_PlantaSelected(linea: string) {\r\n    console.log('change message: ', linea);\r\n    this.lineaSource.next(linea);\r\n  }\r\n  streamMaquinas_LineaSelected(Maquinas: string) {\r\n    console.log('change message: ', Maquinas);\r\n    this.maquinaSource.next(Maquinas);\r\n  }\r\n  streamProcesos(Procesos: string) {\r\n    console.log('change message: ', Procesos);\r\n    this.procesoSource.next(Procesos);\r\n  }\r\n  streamTipoMaquinas(tipoMaquina: string) {\r\n    console.log('change message: ', tipoMaquina);\r\n    this.tipoMaquinaSource.next(tipoMaquina);\r\n  }\r\n  streamTipoSelected(TipoMaquina: string) {\r\n    console.log('tipo maquina selected: ', TipoMaquina);\r\n    this.tipoMaquinaSelectedSource.next(TipoMaquina);\r\n  }\r\n  streamMaquinaSelected(Maquina: string) {\r\n    console.log('maquina selected: ', Maquina);\r\n    this.maquinaSelectedSource.next(Maquina);\r\n  }\r\n  streamProcesoSelected(proceso: string) {\r\n    console.log('Proceso selected: ', proceso);\r\n    this.procesoSelectedSource.next(proceso);\r\n  }\r\n  streamTriggerSelected(trigger: string) {\r\n    console.log('Trigger selected: ', trigger);\r\n    this.triggerSelectedSource.next(trigger);\r\n  }\r\n  streamUsers(user: any) {\r\n    console.log('change message: ', user);\r\n    this.userSource.next(user);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport 'date-fns/locale';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpService } from './http.service';\r\nimport { UtilsService } from './utils.service';\r\nimport { Dato } from '../models/datos.model';\r\nimport { AuthService } from './auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nChart.register(...registerables);\r\nChart.defaults.font.family = 'DIN-PRO';\r\nChart.defaults.font.size = 14;\r\nChart.defaults.font.weight = '400';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ChartGeneratorService {\r\n  chartList: any = [];\r\n  dato!: Dato;\r\n  decimation: any = {\r\n    id: 'decimation',\r\n    enabled: true,\r\n    algorithm: 'lttb',\r\n    samples: 100,\r\n    threshold: 1000,\r\n  };\r\n  private chartListSource = new Subject();\r\n  private chartRangeSource = new Subject();\r\n  private chartIntervalInfoSource = new Subject();\r\n\r\n  listaDeCharts = this.chartListSource.asObservable();\r\n  rangeInfo = this.chartRangeSource.asObservable();\r\n  chartInfo = this.chartIntervalInfoSource.asObservable();\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private utils: UtilsService,\r\n    private _authService: AuthService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  renderChart(chartList: any, canvasBackgroundColor: any, listDatos: any) {\r\n    var inicio = new Date('2023-05-01').getTime().toString();\r\n    var final = new Date('2024-12-31').getTime().toString();\r\n    let datosRenderChart: any[] = [];\r\n    for (let j = 0; j < chartList.length; j++) {\r\n      var chartItem = chartList[j];\r\n      const createdChart = {\r\n        chart: new Chart(chartItem.nombre, {\r\n          type: chartItem.tipo,\r\n          data: {\r\n            labels: [],\r\n            datasets: [],\r\n          },\r\n          options: {\r\n            // hay que arreglar esto para que funcione la data decimation\r\n            // Turn off animations and data parsing for performance\r\n            aspectRatio: 1,\r\n            maintainAspectRatio: false,\r\n            animation: false,\r\n            parsing: false,\r\n            plugins: {\r\n              decimation: this.decimation,\r\n            },\r\n            elements: {\r\n              line: {\r\n                tension: 0.5,\r\n              },\r\n            },\r\n            scales: {\r\n              y: {\r\n                type: 'linear',\r\n                beginAtZero: true,\r\n                ticks: {},\r\n                grid: {\r\n                  display: false,\r\n                },\r\n              },\r\n              x: {\r\n                type: 'time',\r\n\r\n                ticks: {\r\n                  source: 'auto',\r\n                  // Disabled rotation for performance\r\n                  maxRotation: 0,\r\n                  autoSkip: true,\r\n                },\r\n                grid: {\r\n                  display: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n          plugins: [canvasBackgroundColor],\r\n        }),\r\n        titulo: chartItem.nombre,\r\n        variables: chartItem.variables,\r\n        index: chartList.length,\r\n      };\r\n\r\n      for (let i = 0; i < chartItem.variables.length; i++) {\r\n        const dsColor = this.utils.namedColor(i);\r\n        console.log('chart item variables', chartItem.variables);\r\n        console.log('list datos', listDatos);\r\n        var sortedList = chartItem.variables;\r\n        sortedList = sortedList.map((item: { _id: any }) => {\r\n          const item2 = listDatos.find(\r\n            (i2: { _id: any }) => i2._id === item._id\r\n          );\r\n          return item2 ? { ...item, ...item2 } : item;\r\n        });\r\n        sortedList = sortedList.filter((e: any) => 'info' in e);\r\n        if (createdChart.chart.data.datasets.length < sortedList.length) {\r\n          for (let j = 0; j < sortedList.length; j++) {\r\n            const dataSet = {\r\n              data: [],\r\n              label: sortedList[j].nombre,\r\n              borderColor: dsColor,\r\n              backgroundColor: this.utils.transparentize(dsColor, 0.5),\r\n            };\r\n            createdChart.chart.data.datasets.push(dataSet);\r\n          }\r\n        }\r\n\r\n        console.log('sortedList: ', sortedList);\r\n        for (let i = 0; i < sortedList.length; i++) {\r\n          createdChart.chart.data.datasets[i].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.max.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          createdChart.chart.update();\r\n\r\n          if (i == sortedList.length - 1) {\r\n            createdChart.chart.update();\r\n            this.chartList.push(createdChart);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // console.log('variable values: ', chartList.variable);\r\n    // return;\r\n    // console.log('created Chart: ', createdChart);\r\n  }\r\n\r\n  // generate(idList: any[], decimation: any, canvasBackgroundColor?: any) {\r\n  //   this.chartList = [];\r\n  //   for (let i = 0; i < idList.length; i++) {\r\n  //     var generatedChart = {\r\n  //       chart: new Chart(idList[i].titulo, {\r\n  //         type: 'line',\r\n  //         data: {\r\n  //           labels: [],\r\n  //           datasets: [\r\n  //             {\r\n  //               data: [],\r\n  //               borderColor: '#062984',\r\n  //               backgroundColor: 'rgba(6, 41, 132, 0.35)',\r\n  //               label: idList[i].titulo,\r\n  //             },\r\n  //           ],\r\n  //         },\r\n  //         options: {\r\n  //           // hay que arreglar esto para que funcione la data decimation\r\n  //           // Turn off animations and data parsing for performance\r\n  //           aspectRatio: 1,\r\n  //           maintainAspectRatio: false,\r\n  //           animation: false,\r\n  //           parsing: false,\r\n  //           plugins: {\r\n  //             decimation: decimation,\r\n  //           },\r\n  //           elements: {\r\n  //             line: {\r\n  //               tension: 0.5,\r\n  //             },\r\n  //           },\r\n  //           scales: {\r\n  //             y: {\r\n  //               type: 'linear',\r\n  //               beginAtZero: true,\r\n  //               ticks: {},\r\n  //               grid: {\r\n  //                 display: false,\r\n  //               },\r\n  //             },\r\n  //             x: {\r\n  //               type: 'time',\r\n\r\n  //               ticks: {\r\n  //                 source: 'auto',\r\n  //                 // Disabled rotation for performance\r\n  //                 maxRotation: 0,\r\n  //                 autoSkip: true,\r\n  //               },\r\n  //               grid: {\r\n  //                 display: false,\r\n  //               },\r\n  //             },\r\n  //           },\r\n  //         },\r\n  //         plugins: [canvasBackgroundColor],\r\n  //       }),\r\n  //       titulo: idList[i].titulo,\r\n  //       variable: idList[i].id,\r\n  //       id: i,\r\n  //     };\r\n  //     this.chartList.push(generatedChart);\r\n  //   }\r\n  //   console.log('generated charts: ', this.chartList);\r\n  // }\r\n\r\n  getCharts() {\r\n    return this.chartList;\r\n  }\r\n  streamCharts(chartList: any) {\r\n    this.chartListSource.next(chartList);\r\n  }\r\n  set_Inicio_Final(inicio: string, final: string) {\r\n    this.chartRangeSource.next([inicio, final]);\r\n  }\r\n  streamChartIntervalInfo(chartInfo: any) {\r\n    this.chartIntervalInfoSource.next(chartInfo);\r\n  }\r\n  removerCharts(chartUrl: string, nombre: string, id: string) {\r\n    this.chartList = this.chartList.filter((chart: any) => {\r\n      return chart.nombre != nombre;\r\n    });\r\n    this._authService.deleteForm(chartUrl, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Chart borrado correctamente');\r\n          this._httpService.stream_Chart_Info(this.chartList);\r\n          // for (let i = 0; i < this.chartList.length; i++) {\r\n          //   this.chartList[i].chart.update();\r\n          // }\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject, catchError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RegistroFiltrado } from '../models/datos.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpService {\r\n  registroGeneral = environment.API_URL_RGENERAL;\r\n  registroGeneralts = environment.API_URL_RGENERALTS;\r\n  variables = environment.API_URL_VARIABLES;\r\n  // chartUrl = environment.API_URL_CHARTS;\r\n  private listaVariablesSource = new Subject();\r\n  private listaRegistroFiltradoSource = new BehaviorSubject(\r\n    <RegistroFiltrado[]>[]\r\n  );\r\n  private listaRegistroFiltrado2Source = new Subject();\r\n  private listaDatosSource3 = new BehaviorSubject(<[]>[]);\r\n  private listaDatosInRangeSource = new BehaviorSubject(<[]>[]);\r\n  private listChartInfoSource = new Subject();\r\n  private listCharDatatInfoSource = new Subject();\r\n  private listIntervalSource = new Subject();\r\n  private rangeSource = new Subject();\r\n\r\n  listaVariables = this.listaVariablesSource.asObservable();\r\n  listaRegistroFiltrado = this.listaRegistroFiltradoSource.asObservable();\r\n  listaRegistroFiltrado2 = this.listaRegistroFiltrado2Source.asObservable();\r\n  listaDatos3 = this.listaDatosSource3.asObservable();\r\n  listaDatosInRange = this.listaDatosInRangeSource.asObservable();\r\n  listChartInfo = this.listChartInfoSource.asObservable();\r\n  listInterval = this.listIntervalSource.asObservable();\r\n  listChartDataInfo = this.listCharDatatInfoSource.asObservable();\r\n  rangeInfo = this.rangeSource.asObservable();\r\n  inicio_str: string = '';\r\n  final_str: string = '';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // getValores(variable: string): Observable<any> {\r\n  //   return this.http.get(this.registroGeneralts + 'all/' + variable, {\r\n  //     headers: {\r\n  //       Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n  //     },\r\n  //   });\r\n  // }\r\n  getValoresFiltrados2(\r\n    inicio: String,\r\n    fin: String,\r\n    granularidad: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneralts + `granularidad/${inicio}/${fin}/${granularidad}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getAllInRange(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneralts + `all/${variable}/${inicio}/${fin}/`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getVariables(): Observable<any> {\r\n    return this.http.get(this.variables, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  getInterval(\r\n    inicio: string,\r\n    final: string,\r\n    unit: string,\r\n    binsize: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      `${this.registroGeneralts}intervals/${inicio}/${final}/${unit}/${binsize}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  httpGet(url: string) {\r\n    return this.http.get(url, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  httpPost(url: string, body: any) {\r\n    return this.http\r\n      .post(url, body, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  stream_Variables(variables: any) {\r\n    this.listaVariablesSource.next(variables);\r\n  }\r\n  stream_RegistroFiltrado(datos: RegistroFiltrado[]) {\r\n    console.log('stream registro filtrado: ', datos);\r\n    this.listaRegistroFiltradoSource.next(datos);\r\n  }\r\n  stream_RegistroFiltrado2(datoGeneral: any) {\r\n    this.listaRegistroFiltrado2Source.next(datoGeneral);\r\n  }\r\n  stream_Datos3(datoGeneral: any) {\r\n    this.listaDatosSource3.next(datoGeneral);\r\n  }\r\n  stream_DatosInRange(datoGeneral: any) {\r\n    this.listaDatosInRangeSource.next(datoGeneral);\r\n  }\r\n  stream_Chart_Info(chartInfo: any) {\r\n    this.listChartInfoSource.next(chartInfo);\r\n  }\r\n  stream_ChartData_Info(chartDataInfo: any) {\r\n    this.listCharDatatInfoSource.next(chartDataInfo);\r\n  }\r\n  stream_Interval(interval: any) {\r\n    this.listIntervalSource.next(interval);\r\n  }\r\n  set_Inicio_Final(inicio: string, final: string) {\r\n    this.rangeSource.next([inicio, final]);\r\n  }\r\n  get_Inicio_Final() {\r\n    return [this.inicio_str, this.final_str];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SpinnerService {\r\n  constructor(private _spinnerService: NgxSpinnerService) {}\r\n\r\n  public llamarSpinner(spinner: string) {\r\n    this._spinnerService.show(spinner);\r\n  }\r\n  public detenerSpinner(spinner: string) {\r\n    this._spinnerService.hide(spinner);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport colorLib from '@kurkle/color';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UtilsService {\r\n  constructor() {}\r\n  private CHART_COLORS = {\r\n    strong_blue: '#062984',\r\n    medium_blue: '#1758FF',\r\n    light_blue: '#6F97FF',\r\n    red: 'rgb(255, 99, 132)',\r\n    orange: 'rgb(255, 159, 64)',\r\n    yellow: 'rgb(255, 205, 86)',\r\n    green: 'rgb(75, 192, 192)',\r\n    blue: 'rgb(54, 162, 235)',\r\n    purple: 'rgb(153, 102, 255)',\r\n    grey: 'rgb(201, 203, 207)',\r\n  };\r\n\r\n  NAMED_COLORS = [\r\n    this.CHART_COLORS.strong_blue,\r\n    this.CHART_COLORS.medium_blue,\r\n    this.CHART_COLORS.light_blue,\r\n    this.CHART_COLORS.red,\r\n    this.CHART_COLORS.orange,\r\n    this.CHART_COLORS.yellow,\r\n    this.CHART_COLORS.green,\r\n    this.CHART_COLORS.blue,\r\n    this.CHART_COLORS.purple,\r\n    this.CHART_COLORS.grey,\r\n  ];\r\n\r\n  namedColor(index: number) {\r\n    return this.NAMED_COLORS[index % this.NAMED_COLORS.length];\r\n  }\r\n  transparentize(value: string, opacity: number) {\r\n    var alpha = opacity === undefined ? 0.5 : 1 - opacity;\r\n    return colorLib(value).alpha(alpha).rgbString();\r\n  }\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function checkUpperCase(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasUpperCase = /[A-Z]+/.test(value);\r\n\r\n    const passwordValid = hasUpperCase;\r\n\r\n    return !passwordValid ? { hasUpper: true } : null;\r\n  };\r\n}\r\nexport function checkLowerCase(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasLowerCase = /[a-z]+/.test(value);\r\n\r\n    const passwordValid = hasLowerCase;\r\n\r\n    return !passwordValid ? { hasLower: true } : null;\r\n  };\r\n}\r\nexport function checkNumber(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasNumeric = /[0-9]+/.test(value);\r\n\r\n    const passwordValid = hasNumeric;\r\n\r\n    return !passwordValid ? { hasNumber: true } : null;\r\n  };\r\n}\r\nexport function checkSpecial(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasSpecial = /[$@$!%*?&]+/.test(value);\r\n\r\n    const passwordValid = hasSpecial;\r\n\r\n    return !passwordValid ? { hasSp: true } : null;\r\n  };\r\n}\r\n","var loc = location.toString().split(`/`);\r\nvar BASE_URL = `http://${loc[2]}`;\r\nexport const environment = {\r\n  production: true,\r\n  // OLD VARIABLES:\r\n  // API_URL_PAISES_OLD: `http://${BASE_URL}:3001/api/paises/`,\r\n  // API_URL_PROVINCIAS_OLD: `http://${BASE_URL}:3001/api/provincias/`,\r\n  // API_URL_LOCALIDADES_OLD: `http://${BASE_URL}:3001/api/localidad/`,\r\n  API_BASE_URL: BASE_URL,\r\n  API_URL_USERS: `${BASE_URL}:3001/api/users/`,\r\n  API_URL_ROLES: `${BASE_URL}:3001/api/role/`,\r\n  API_URL_RGENERAL: `${BASE_URL}:3001/api/registro-general/`,\r\n  API_URL_RGENERALTS: `${BASE_URL}:3001/api/registro-general-ts/`,\r\n  API_URL_VARIABLES: `${BASE_URL}:3001/api/variables/`,\r\n  API_URL_PAISES: `https://countriesnow.space/api/v0.1/countries/`,\r\n  API_URL_PROVINCIAS: `https://countriesnow.space/api/v0.1/countries/states`,\r\n  API_URL_LOCALIDADES: `https://countriesnow.space/api/v0.1/countries/state/cities`,\r\n  API_URL_EMPRESAS: `${BASE_URL}:3001/api/empresas/`,\r\n  API_URL_PLANTA: `${BASE_URL}:3001/api/empresa-planta/`,\r\n  API_URL_TIPO_MAQUINA: `${BASE_URL}:3001/api/tipo-maquina/`,\r\n  API_URL_MAQUINA: `${BASE_URL}:3001/api/maquinas/`,\r\n  API_URL_LINEA_PRODUCCION: `${BASE_URL}:3001/api/linea-produccion/`,\r\n  API_URL_PROCESO: `${BASE_URL}:3001/api/proceso/`,\r\n  API_URL_TRIGGER: `${BASE_URL}:3001/api/trigger/`,\r\n  API_URL_RTOKEN: `${BASE_URL}:3001/api/refresh`,\r\n  API_URL_ARGENTINA_PROVINCIAS: `https://apis.datos.gob.ar/georef/api/provincias?orden=nombre&campos=basico&max=30`,\r\n  API_URL_ARGENTINA_DEPARTAMENTOS: `https://apis.datos.gob.ar/georef/api/departamentos?provincia=`,\r\n  API_URL_ARGENTINA_LOCALIDADES: `https://apis.datos.gob.ar/georef/api/localidades?provincia=`,\r\n  API_URL_CHARTS: `${BASE_URL}:3001/api/charts/`,\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatStepperModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n    MatProgressSpinnerModule,\r\n    MatMenuModule,\r\n    MatProgressBarModule,\r\n    MatTabsModule,\r\n    MatButtonToggleModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","var map = {\n\t\"./af\": 5528,\n\t\"./af.js\": 5528,\n\t\"./ar\": 1036,\n\t\"./ar-dz\": 7579,\n\t\"./ar-dz.js\": 7579,\n\t\"./ar-kw\": 9588,\n\t\"./ar-kw.js\": 9588,\n\t\"./ar-ly\": 6519,\n\t\"./ar-ly.js\": 6519,\n\t\"./ar-ma\": 3258,\n\t\"./ar-ma.js\": 3258,\n\t\"./ar-ps\": 5467,\n\t\"./ar-ps.js\": 5467,\n\t\"./ar-sa\": 4085,\n\t\"./ar-sa.js\": 4085,\n\t\"./ar-tn\": 287,\n\t\"./ar-tn.js\": 287,\n\t\"./ar.js\": 1036,\n\t\"./az\": 9757,\n\t\"./az.js\": 9757,\n\t\"./be\": 9620,\n\t\"./be.js\": 9620,\n\t\"./bg\": 1139,\n\t\"./bg.js\": 1139,\n\t\"./bm\": 4042,\n\t\"./bm.js\": 4042,\n\t\"./bn\": 9641,\n\t\"./bn-bd\": 9126,\n\t\"./bn-bd.js\": 9126,\n\t\"./bn.js\": 9641,\n\t\"./bo\": 494,\n\t\"./bo.js\": 494,\n\t\"./br\": 934,\n\t\"./br.js\": 934,\n\t\"./bs\": 6274,\n\t\"./bs.js\": 6274,\n\t\"./ca\": 6077,\n\t\"./ca.js\": 6077,\n\t\"./cs\": 2354,\n\t\"./cs.js\": 2354,\n\t\"./cv\": 1258,\n\t\"./cv.js\": 1258,\n\t\"./cy\": 8774,\n\t\"./cy.js\": 8774,\n\t\"./da\": 584,\n\t\"./da.js\": 584,\n\t\"./de\": 1557,\n\t\"./de-at\": 4954,\n\t\"./de-at.js\": 4954,\n\t\"./de-ch\": 1881,\n\t\"./de-ch.js\": 1881,\n\t\"./de.js\": 1557,\n\t\"./dv\": 6475,\n\t\"./dv.js\": 6475,\n\t\"./el\": 8877,\n\t\"./el.js\": 8877,\n\t\"./en-au\": 454,\n\t\"./en-au.js\": 454,\n\t\"./en-ca\": 7356,\n\t\"./en-ca.js\": 7356,\n\t\"./en-gb\": 456,\n\t\"./en-gb.js\": 456,\n\t\"./en-ie\": 8789,\n\t\"./en-ie.js\": 8789,\n\t\"./en-il\": 5471,\n\t\"./en-il.js\": 5471,\n\t\"./en-in\": 9664,\n\t\"./en-in.js\": 9664,\n\t\"./en-nz\": 7672,\n\t\"./en-nz.js\": 7672,\n\t\"./en-sg\": 805,\n\t\"./en-sg.js\": 805,\n\t\"./eo\": 7390,\n\t\"./eo.js\": 7390,\n\t\"./es\": 1564,\n\t\"./es-do\": 1473,\n\t\"./es-do.js\": 1473,\n\t\"./es-mx\": 2089,\n\t\"./es-mx.js\": 2089,\n\t\"./es-us\": 4156,\n\t\"./es-us.js\": 4156,\n\t\"./es.js\": 1564,\n\t\"./et\": 6513,\n\t\"./et.js\": 6513,\n\t\"./eu\": 7856,\n\t\"./eu.js\": 7856,\n\t\"./fa\": 2378,\n\t\"./fa.js\": 2378,\n\t\"./fi\": 1538,\n\t\"./fi.js\": 1538,\n\t\"./fil\": 32,\n\t\"./fil.js\": 32,\n\t\"./fo\": 6845,\n\t\"./fo.js\": 6845,\n\t\"./fr\": 8875,\n\t\"./fr-ca\": 6425,\n\t\"./fr-ca.js\": 6425,\n\t\"./fr-ch\": 1746,\n\t\"./fr-ch.js\": 1746,\n\t\"./fr.js\": 8875,\n\t\"./fy\": 7037,\n\t\"./fy.js\": 7037,\n\t\"./ga\": 1217,\n\t\"./ga.js\": 1217,\n\t\"./gd\": 7010,\n\t\"./gd.js\": 7010,\n\t\"./gl\": 1931,\n\t\"./gl.js\": 1931,\n\t\"./gom-deva\": 4488,\n\t\"./gom-deva.js\": 4488,\n\t\"./gom-latn\": 8032,\n\t\"./gom-latn.js\": 8032,\n\t\"./gu\": 4984,\n\t\"./gu.js\": 4984,\n\t\"./he\": 9090,\n\t\"./he.js\": 9090,\n\t\"./hi\": 2085,\n\t\"./hi.js\": 2085,\n\t\"./hr\": 8787,\n\t\"./hr.js\": 8787,\n\t\"./hu\": 2901,\n\t\"./hu.js\": 2901,\n\t\"./hy-am\": 9819,\n\t\"./hy-am.js\": 9819,\n\t\"./id\": 4074,\n\t\"./id.js\": 4074,\n\t\"./is\": 715,\n\t\"./is.js\": 715,\n\t\"./it\": 3838,\n\t\"./it-ch\": 7040,\n\t\"./it-ch.js\": 7040,\n\t\"./it.js\": 3838,\n\t\"./ja\": 3180,\n\t\"./ja.js\": 3180,\n\t\"./jv\": 4346,\n\t\"./jv.js\": 4346,\n\t\"./ka\": 5538,\n\t\"./ka.js\": 5538,\n\t\"./kk\": 9772,\n\t\"./kk.js\": 9772,\n\t\"./km\": 7905,\n\t\"./km.js\": 7905,\n\t\"./kn\": 9125,\n\t\"./kn.js\": 9125,\n\t\"./ko\": 9140,\n\t\"./ko.js\": 9140,\n\t\"./ku\": 6780,\n\t\"./ku-kmr\": 4662,\n\t\"./ku-kmr.js\": 4662,\n\t\"./ku.js\": 6780,\n\t\"./ky\": 3768,\n\t\"./ky.js\": 3768,\n\t\"./lb\": 4016,\n\t\"./lb.js\": 4016,\n\t\"./lo\": 3169,\n\t\"./lo.js\": 3169,\n\t\"./lt\": 2353,\n\t\"./lt.js\": 2353,\n\t\"./lv\": 3243,\n\t\"./lv.js\": 3243,\n\t\"./me\": 2338,\n\t\"./me.js\": 2338,\n\t\"./mi\": 5555,\n\t\"./mi.js\": 5555,\n\t\"./mk\": 5794,\n\t\"./mk.js\": 5794,\n\t\"./ml\": 3151,\n\t\"./ml.js\": 3151,\n\t\"./mn\": 6458,\n\t\"./mn.js\": 6458,\n\t\"./mr\": 9165,\n\t\"./mr.js\": 9165,\n\t\"./ms\": 8680,\n\t\"./ms-my\": 7477,\n\t\"./ms-my.js\": 7477,\n\t\"./ms.js\": 8680,\n\t\"./mt\": 9684,\n\t\"./mt.js\": 9684,\n\t\"./my\": 285,\n\t\"./my.js\": 285,\n\t\"./nb\": 5922,\n\t\"./nb.js\": 5922,\n\t\"./ne\": 9040,\n\t\"./ne.js\": 9040,\n\t\"./nl\": 5066,\n\t\"./nl-be\": 4460,\n\t\"./nl-be.js\": 4460,\n\t\"./nl.js\": 5066,\n\t\"./nn\": 3693,\n\t\"./nn.js\": 3693,\n\t\"./oc-lnc\": 8676,\n\t\"./oc-lnc.js\": 8676,\n\t\"./pa-in\": 2341,\n\t\"./pa-in.js\": 2341,\n\t\"./pl\": 7416,\n\t\"./pl.js\": 7416,\n\t\"./pt\": 4344,\n\t\"./pt-br\": 113,\n\t\"./pt-br.js\": 113,\n\t\"./pt.js\": 4344,\n\t\"./ro\": 2643,\n\t\"./ro.js\": 2643,\n\t\"./ru\": 1305,\n\t\"./ru.js\": 1305,\n\t\"./sd\": 6095,\n\t\"./sd.js\": 6095,\n\t\"./se\": 4486,\n\t\"./se.js\": 4486,\n\t\"./si\": 8742,\n\t\"./si.js\": 8742,\n\t\"./sk\": 6722,\n\t\"./sk.js\": 6722,\n\t\"./sl\": 3345,\n\t\"./sl.js\": 3345,\n\t\"./sq\": 2416,\n\t\"./sq.js\": 2416,\n\t\"./sr\": 9450,\n\t\"./sr-cyrl\": 501,\n\t\"./sr-cyrl.js\": 501,\n\t\"./sr.js\": 9450,\n\t\"./ss\": 2222,\n\t\"./ss.js\": 2222,\n\t\"./sv\": 9454,\n\t\"./sv.js\": 9454,\n\t\"./sw\": 9638,\n\t\"./sw.js\": 9638,\n\t\"./ta\": 6494,\n\t\"./ta.js\": 6494,\n\t\"./te\": 4435,\n\t\"./te.js\": 4435,\n\t\"./tet\": 5003,\n\t\"./tet.js\": 5003,\n\t\"./tg\": 3706,\n\t\"./tg.js\": 3706,\n\t\"./th\": 6025,\n\t\"./th.js\": 6025,\n\t\"./tk\": 9780,\n\t\"./tk.js\": 9780,\n\t\"./tl-ph\": 2068,\n\t\"./tl-ph.js\": 2068,\n\t\"./tlh\": 9167,\n\t\"./tlh.js\": 9167,\n\t\"./tr\": 2494,\n\t\"./tr.js\": 2494,\n\t\"./tzl\": 8707,\n\t\"./tzl.js\": 8707,\n\t\"./tzm\": 1296,\n\t\"./tzm-latn\": 4532,\n\t\"./tzm-latn.js\": 4532,\n\t\"./tzm.js\": 1296,\n\t\"./ug-cn\": 2086,\n\t\"./ug-cn.js\": 2086,\n\t\"./uk\": 5069,\n\t\"./uk.js\": 5069,\n\t\"./ur\": 9304,\n\t\"./ur.js\": 9304,\n\t\"./uz\": 5115,\n\t\"./uz-latn\": 7609,\n\t\"./uz-latn.js\": 7609,\n\t\"./uz.js\": 5115,\n\t\"./vi\": 4802,\n\t\"./vi.js\": 4802,\n\t\"./x-pseudo\": 5605,\n\t\"./x-pseudo.js\": 5605,\n\t\"./yo\": 8456,\n\t\"./yo.js\": 8456,\n\t\"./zh-cn\": 3272,\n\t\"./zh-cn.js\": 3272,\n\t\"./zh-hk\": 9402,\n\t\"./zh-hk.js\": 9402,\n\t\"./zh-mo\": 8101,\n\t\"./zh-mo.js\": 8101,\n\t\"./zh-tw\": 262,\n\t\"./zh-tw.js\": 262\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;"],"names":["RouterModule","ListarDatosComponent","RegisterComponent","LoginComponent","UserlistingComponent","authGuard","Home5Component","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","FormControl","FormGroup","environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","chart_r6","value","ɵɵadvance","ɵɵtextInterpolate","viewValue","variable_r7","nombre","ɵɵlistener","AppComponent_div_3_Template_form_submit_6_listener","ɵɵrestoreView","_r9","ctx_r8","ɵɵnextContext","ɵɵresetView","tipoChart","reset","AppComponent_div_3_Template_form_ngSubmit_6_listener","ctx_r10","poblarChartArray","ɵɵtemplate","AppComponent_div_3_mat_option_12_Template","ɵɵelement","AppComponent_div_3_mat_option_23_Template","ctx_r1","charts","listVariables","tipo","titulo","variable","variable_r14","ɵɵtextInterpolate1","variable_r15","AppComponent_div_4_Template_mat_select_ngModelChange_10_listener","$event","restoredCtx","_r17","chart_r11","$implicit","variables","AppComponent_div_4_mat_option_11_Template","AppComponent_div_4_p_12_Template","AppComponent_div_4_Template_button_click_13_listener","ctx_r18","updateVariables","ctx_r2","chartForm","ɵɵpropertyInterpolate","comparer","ctx_r21","fullName","AppComponent_mat_toolbar_8_Template_button_click_1_listener","_r23","_r0","ɵɵreference","toggle","AppComponent_mat_toolbar_8_a_9_Template","AppComponent_mat_toolbar_8_a_11_Template","AppComponent_mat_toolbar_8_p_15_Template","ɵɵnamespaceSVG","AppComponent_mat_toolbar_8_Template__svg_svg_click_16_listener","ctx_r24","logOut","ctx_r3","isAdminUser","ɵɵattribute","iniciales","mobile","AppComponent","constructor","builder","router","service","_httpService","matIconRegistry","domSanitizer","utils","opened","title","isMenuRequired","chartList","created_chart_List","fields","chartUrl","API_URL_CHARTS","decimation","id","enabled","algorithm","samples","threshold","addSvgIcon","bypassSecurityTrustResourceUrl","ngOnInit","getCharts","group","subscription3","fullname","subscribe","message","setTimeout","console","log","splitFullName","subscription","listaVariables","subscription2","listaDatosInRange","window","screen","width","ngDoCheck","currentUrl","url","getUserRole","logout","output","split","length","charAt","toUpperCase","createdChartItem","stream_Chart_Info","httpGet","data","buildForm","logOptions","getFormControlsFields","formGroupFields","chart","push","o1","o2","ɵɵdirectiveInject","FormBuilder","i2","Router","i3","AuthService","i4","HttpService","i5","MatIconRegistry","i6","DomSanitizer","i7","UtilsService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_Template_mat_sidenav_openedChange_1_listener","AppComponent_div_3_Template","AppComponent_div_4_Template","AppComponent_mat_toolbar_8_Template","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","BrowserAnimationsModule","MaterialModule","ToastrModule","UpdatepopupComponent","PaisFormComponent","ProvinciaFormComponent","LocalidadFormComponent","EmpresaFormComponent","EmpresaPlantaFormComponent","MaquinaFormComponent","TipoMaquinaFormComponent","LineaProduccionFormComponent","ProcesoFormComponent","VariableFormComponent","JwtModule","TriggerFormComponent","TablaComponent","NgxSpinnerModule","MatTooltipModule","LoginModalComponent","DateAdapter","MatNativeDateModule","MAT_DATE_FORMATS","MAT_DATE_LOCALE","MomentDateAdapter","DepartamentosComponent","ToolbarComponent","ListarDatosComponentOld","tokenGetter","localStorage","getItem","MY_DATE_FORMAT","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","AppModule","bootstrap","provide","useClass","deps","useValue","config","allowedDomains","declarations","MatTabGroup","jwtHelper","breakpointObserver","isTrue","isPaisCompleted","isProvinciaCompleted","isLocalidadCompleted","isEmpresaCompleted","isPlantaCompleted","isTipoMaquinaCompleted","isLineaProduccionCompleted","isMaquinaCompleted","isProcesoCompleted","isTriggerCompleted","completed","tituloTabs","selected","expirationCheck","getUser","paisSelected","provinciaSelected","localidadSelected","empresaSelected","plantaSelected","lineaSelected","tipoMaquinaSelected","maquinaSelected","procesoSelected","triggerSelected","token","sessionStorage","toString","timeout","getTokenExpirationDate","valueOf","Date","expirationCounter","nextButton","setValue","backButton","JwtHelperService","BreakpointObserver","viewQuery","Home5Component_Query","Home5Component_Template_mat_tab_group_selectedIndexChange_13_listener","Home5Component_Template_button_click_36_listener","Home5Component_Template_button_click_38_listener","CommonModule","MatButtonModule","MatDialogModule","MatFormFieldModule","MatInputModule","variable_r1","ListarDatosModal","dialogRef","getVariables","filter","x","id_trigger","MatDialogRef","standalone","features","ɵɵStandaloneFeature","ListarDatosModal_Template","ListarDatosModal_span_5_Template","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","MatButton","NgForOf","styles","Chart","registerables","ListarDatosComponentOld_div_19_button_5_Template_button_click_0_listener","_r6","chart_r1","ctx_r4","removerCharts","_id","ListarDatosComponentOld_div_19_button_5_Template","ctx_r0","ɵɵpropertyInterpolate1","i_r2","register","authService","spinnerService","toastr","listDatos","listDatos2","listCheckbox","todayDate","canvasBackgroundColor","beforeDraw","args","pluginOptions","chartArea","top","bottom","left","right","scales","y","bgColors","bracketLow","bracketHigh","color","fillStyle","fillRect","getPixelForValue","opciones","aspectRatio","maintainAspectRatio","animation","parsing","plugins","type","beginAtZero","ticks","grid","position","time","displayFormats","day","maxRotation","autoSkip","getDaysInMonth","year","month","getDate","addMonths","input","months","date","setDate","setMonth","getMonth","Math","min","getFullYear","sixMonthAgoDate","getDataColors","opacity","colors","map","getChartsOnStartUp","labels","datasets","yAxisID","options","tooltip","callbacks","label","tooltipItem","formattedValue","context","chart3","borderColor","backgroundColor","legend","listaRegistroFiltrado","avg","update","listaRegistroFiltrado2","detenerSpinner","dato","parseFloat","max","toFixed","getTime","listChartInfo","makeCheckboxArray","newValue","JSON","source","_value","desmarcar","valor","stream_Variables","getFiltrados","inicio","final","getAllInRange","stream_RegistroFiltrado","postForm","next","res","status","warning","error","success","i","renderChartOnStartUp","renderChart","datosRenderChart","createdChart","dsColor","namedColor","newDataset","transparentize","deleteForm","stream_ChartData_Info","userRole","SpinnerService","ToastrService","ListarDatosComponentOld_Template","ListarDatosComponentOld_div_19_Template","catchError","MatMenuTrigger","valor_r10","option","ListarDatosComponent_mat_button_toggle_35_Template_mat_button_toggle_click_0_listener","_r13","time_r11","ctx_r12","setInterval","getValuesByInterval","timeOut_r14","chart_r15","ctx_r9","selectValue","selectTime","i_r16","defaults","font","family","size","weight","chartService","open","chartList2","tabla","isOpen","selectedValue","selectedInterval","binSize","unit","selectedTime","selectTimeOut","beforeDatasetsDraw","height","restore","API_BASE_URL","range","start","end","granularidad","interval","intervalo","medida","tiempo","elements","line","tension","getRegistros","sortedList","item","item2","find","info","sort","objA","objB","Number","valor_lectura","fecha_lectura","rangeInfo","rangeSub","chartInfo","changeCurrentValues","index","ngOnDestroy","clearInterval","llamarSpinner","getValoresFiltrados2","e","j","dataSet","streamCharts","_d","stream_RegistroFiltrado2","setInicio_final","difference","parseInt","toggleIsOpen","val","datos","listaDeVariables","undefined","hasSinFiltro","some","openDialogListarDatos","currentDateObj","millis","getInterval","pipe","_ref","_asyncToGenerator","_x","apply","arguments","setTime","decimation_on_start_up","updateChart","ChartGeneratorService","i8","ListarDatosComponent_Query","ListarDatosComponent_Template_div_click_5_listener","stopPropagation","ListarDatosComponent_Template_input_dateChange_19_listener","ListarDatosComponent_Template_select_change_30_listener","_r3","ListarDatosComponent_option_32_Template","ListarDatosComponent_mat_button_toggle_35_Template","ListarDatosComponent_button_40_Template","ListarDatosComponent_div_50_Template","_r1","_r2","ɵɵpureFunction1","_c0","Validators","checkNumber","checkSpecial","checkUpperCase","LoginComponent_div_3_Template_form_ngSubmit_5_listener","_r4","proceedLogin","LoginComponent_div_3_Template_a_click_11_listener","ctx_r5","showPass","LoginComponent_div_3_Template_a_click_17_listener","ctx_r6","openForgotPass","LoginComponent_div_3_Template_a_click_19_listener","ctx_r7","mostrarRegistro","loginForm","pass","show","username","password","LoginComponent_div_4_Template_form_ngSubmit_5_listener","proceedRegistration","registerForm","LoginComponent_div_4_Template_a_click_15_listener","ɵɵnamespaceHTML","LoginComponent_div_4_Template_a_click_44_listener","ctx_r11","mostrarLogin","errors","hasUpper","hasSp","hasNumber","name","email","showDiv","Login","Register","control","required","clear","minLength","role","isActive","LogIn","userData","toastClass","positionClass","storeUserData","rtoken","openDialogLogin","valid","Proceedregister","get","LoginComponent_Template","LoginComponent_div_1_Template","LoginComponent_div_3_Template","LoginComponent_div_4_Template","registerform","compose","pattern","navigate","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_5_listener","MatPaginator","MatSort","MatTableDataSource","element_r10","element_r11","time_stamp","element_r12","cTime_stamp","element_r13","table","id_variable","exceedList","notExceedList","csv","displayedColumns","dataSource","paginator","getInRangeTabla","removeDuplicates","ids","filtered","includes","downloadCSV","csvList","tiempo_inicio","tiempo_fin","diferencia","row","keysAmount","Object","keys","keysCounter","key","link","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","n","notDuplicatedExceedList","notDuplicatedNotExceedList","stream_DatosInRange","result","notExceedListPusher","enviarDatos","formatTime","notExceed","exceed","seconds","hours","floor","minutes","remainingSeconds","formattedHours","String","padStart","formattedMinutes","formattedSeconds","formatDate","padTo2Digits","join","getHours","getMinutes","getSeconds","num","variableSelected","target","ExceedList","resultado","TablaComponent_Query","ɵɵelementContainerStart","TablaComponent_mat_header_cell_6_Template","TablaComponent_mat_cell_7_Template","ɵɵelementContainerEnd","TablaComponent_mat_header_cell_9_Template","TablaComponent_mat_cell_10_Template","TablaComponent_mat_header_cell_12_Template","TablaComponent_mat_cell_13_Template","TablaComponent_mat_header_cell_15_Template","TablaComponent_mat_cell_16_Template","TablaComponent_mat_header_row_17_Template","TablaComponent_mat_row_18_Template","ɵɵpureFunction0","ɵɵpropertyInterpolate3","id_proceso","descripcion","id_maquina","ToolbarComponent_button_26_Template_button_click_0_listener","_r10","removeCharts","valor_r13","ToolbarComponent_div_28_Template_select_change_1_listener","_r15","_r11","ctx_r14","setSelectValue","indice","ToolbarComponent_div_28_option_3_Template","ToolbarComponent_div_29_Template_input_change_1_listener","ctx_r16","setThreshold","variable_r20","ToolbarComponent_div_30_Template_select_change_1_listener","_r22","_r18","ToolbarComponent_div_30_option_5_Template","ToolbarComponent_mat_button_toggle_33_Template_mat_button_toggle_click_0_listener","_r25","time_r23","setSelectTimeInterval","selectTime2","listaDeCharts","sValue","streamChartIntervalInfo","sTime","sInterval","setInicioFinal","set_Inicio_Final","stringify","datosFilter","inputs","ToolbarComponent_Template","ToolbarComponent_Template_div_click_2_listener","ToolbarComponent_Template_input_dateChange_18_listener","ToolbarComponent_mat_icon_25_Template","ToolbarComponent_button_26_Template","ToolbarComponent_div_28_Template","ToolbarComponent_div_29_Template","ToolbarComponent_div_30_Template","ToolbarComponent_mat_button_toggle_33_Template","MAT_DIALOG_DATA","item_r1","dialog","GetAllRoles","rolelist","GetById","editData","updateUser","UpdateUser","close","UpdatepopupComponent_Template","UpdatepopupComponent_Template_form_ngSubmit_5_listener","UpdatepopupComponent_mat_option_13_Template","VariableModalComponent","element_r16","element_r17","element_r18","UserlistingComponent_mat_cell_19_Template_mat_select_valueChange_1_listener","_r21","element_r19","editable","userForm","element_r22","tmp_0_0","UserlistingComponent_mat_cell_22_Template_a_click_4_listener","_r27","ctx_r26","UserlistingComponent_mat_cell_22__svg_svg_7_Template","UserlistingComponent_mat_cell_25_Template_mat_select_valueChange_1_listener","_r30","element_r28","ɵɵclassMap","UserlistingComponent_mat_cell_28_Template_button_click_1_listener","_r33","element_r31","ctx_r32","openDialog","ctx_r13","userList","userUrl","API_URL_USERS","LoadUser","GetAll","streamUsers","listUser","Array","from","forEach","element","editableToggle","guardarCambios","ulist","controls","variable_id","enable","disable","user","MatDialog","UserlistingComponent_Query","UserlistingComponent_mat_header_cell_9_Template","UserlistingComponent_mat_cell_10_Template","UserlistingComponent_mat_header_cell_12_Template","UserlistingComponent_mat_cell_13_Template","UserlistingComponent_mat_header_cell_15_Template","UserlistingComponent_mat_cell_16_Template","UserlistingComponent_mat_header_cell_18_Template","UserlistingComponent_mat_cell_19_Template","UserlistingComponent_mat_header_cell_21_Template","UserlistingComponent_mat_cell_22_Template","UserlistingComponent_mat_header_cell_24_Template","UserlistingComponent_mat_cell_25_Template","UserlistingComponent_mat_header_cell_27_Template","UserlistingComponent_mat_cell_28_Template","UserlistingComponent_mat_header_row_29_Template","UserlistingComponent_mat_row_30_Template","UserlistingComponent_Template_a_click_32_listener","UserlistingComponent_Template_a_click_36_listener","_data","DialogOverviewExampleDialog","rtoken_url","API_URL_RTOKEN","rBody","onNoClick","refreshToken","resData","accessToken","setItem","DialogOverviewExampleDialog_Template","DialogOverviewExampleDialog_Template_button_click_6_listener","DialogOverviewExampleDialog_Template_button_click_8_listener","encapsulation","DepartamentosComponent_mat_option_5_Template_mat_option_click_0_listener","departamento_r1","setDepartamento","apiDepartamentos","API_URL_ARGENTINA_DEPARTAMENTOS","apiLocalidades","API_URL_ARGENTINA_LOCALIDADES","apiProvincias","API_URL_PROVINCIAS","apiEmpresas","API_URL_EMPRESAS","isOptional","departamentoForm","departamentoSelected","id_departamento","id_provincia","listDepartamentos","changeMessage","departamentoSelectedSource","GetLocalidadesByDepartamento","getForm","localidades","localidadesUnicas","streamLocalidades_DepartamentoSelected","seen","Set","filteredArr","el","duplicate","has","add","DepartamentosComponent_Template","DepartamentosComponent_mat_option_5_Template","EmpresaFormComponent_div_10_Template_mat_option_click_1_listener","empresa_r1","setEmpresa","EmpresaFormComponent_div_10_Template_button_click_5_listener","nombre_fantasia","apiLocalidad","API_URL_LOCALIDADES","apiPlantas","API_URL_PLANTA","empresaForm","razon_social","calle","altura","rubro","piso","deptartamento","id_localidad","listEmpresas","GetAllEmpresas","createEmpresa","borrarEmpresa","id_empresa","empresaSelectedSource","GetPlantasByEmpresas","streamPlantas_EmpresaSelected","EmpresaFormComponent_Template","EmpresaFormComponent_div_10_Template","EmpresaFormComponent_Template_form_ngSubmit_17_listener","EmpresaFormComponent_Template_form_submit_17_listener","EmpresaPlantaFormComponent_div_10_Template_mat_option_click_1_listener","planta_r1","setPlanta","EmpresaPlantaFormComponent_div_10_Template_button_click_5_listener","apiPlanta","apiLinea","API_URL_LINEA_PRODUCCION","plantaForm","listPlantas","GetAllPlantas","createPlanta","borrarPlanta","id_planta","plantaSelectedSource","GetLineaByPlanta","streamLinea_PlantaSelected","EmpresaPlantaFormComponent_Template","EmpresaPlantaFormComponent_div_10_Template","EmpresaPlantaFormComponent_Template_form_ngSubmit_17_listener","EmpresaPlantaFormComponent_Template_form_submit_17_listener","LineaProduccionFormComponent_div_10_Template_mat_option_click_1_listener","linea_r1","setLinea","LineaProduccionFormComponent_div_10_Template_button_click_7_listener","apiMaquina","API_URL_MAQUINA","lineaForm","identificador","listLineas","id_empresa_planta","GetAllLineas","createLinea","borrarLineaProduccion","id_linea","lineaSelectedSource","GetMaquinaByLinea","streamMaquinas_LineaSelected","LineaProduccionFormComponent_Template","LineaProduccionFormComponent_div_10_Template","LineaProduccionFormComponent_Template_form_ngSubmit_17_listener","LineaProduccionFormComponent_Template_form_submit_17_listener","LocalidadFormComponent_mat_option_5_Template_mat_option_click_0_listener","localidad_r1","setLocalidad","localidadForm","listLocalidades","GetAllLocalidades","createLocalidad","borrarLocalidad","localidadSelectedSource","GetEmpresasByLocalidad","streamEmpresas_LocalidadSelected","LocalidadFormComponent_Template","LocalidadFormComponent_mat_option_5_Template","MaquinaFormComponent_div_10_Template_mat_option_click_1_listener","maquina_r1","setMaquina","StreamMaquinaSelected","MaquinaFormComponent_div_10_Template_button_click_7_listener","detalle","apiTipoMaquina","API_URL_TIPO_MAQUINA","GetAllTipos","maquinaForm","marca","modelo","currentMessage","listMaquinas","id_linea_produccion","id_tipo_maquina","listTipoMaquina","GetAllMaquinas","createMaquina","borrarMaquina","maquina_id","streamMaquinaSelected","MaquinaFormComponent_Template","MaquinaFormComponent_div_10_Template","MaquinaFormComponent_Template_form_ngSubmit_17_listener","MaquinaFormComponent_Template_form_submit_17_listener","PaisFormComponent_mat_option_5_Template_mat_option_click_0_listener","pais_r1","setPais","country","_formBuilder","_httpservice","apiPaises","API_URL_PAISES","apiArgentinaPronvincias","API_URL_ARGENTINA_PROVINCIAS","apiProvincia","GetAllPaises","paisForm","nombre_pais","listPaises","paisSelectedSource","GetProvinciasByPais","provincias","streamProvincias_PaisSelected","httpPost","states","PaisFormComponent_Template","PaisFormComponent_Template_mat_select_selectionChange_4_listener","PaisFormComponent_mat_option_5_Template","ProcesoFormComponent_div_10_Template_mat_option_click_1_listener","proceso_r1","setProceso","StreamProcesoSelected","ProcesoFormComponent_div_10_Template_button_click_7_listener","apiProceso","API_URL_PROCESO","GetAllProcesos","listProceso","procesoForm","crearProceso","borrarProcesos","proceso_id","streamProcesoSelected","ProcesoFormComponent_Template","ProcesoFormComponent_div_10_Template","ProcesoFormComponent_Template_form_ngSubmit_17_listener","ProcesoFormComponent_Template_form_submit_17_listener","ProvinciaFormComponent_mat_option_5_Template_mat_option_click_0_listener","provincia_r1","setProvincia","apiArgentinaDepartamentos","provinciaForm","listProvincias","listProvinciasPais","provinciaSelectedSource","GetDepartamentosByProvincia","departamentos","streamDepartamentos_ProvinciaSelected","state","ProvinciaFormComponent_Template","ProvinciaFormComponent_mat_option_5_Template","TipoMaquinaFormComponent_div_10_Template_mat_option_click_1_listener","tipo_r1","setTipo","StreamTipoSelected","TipoMaquinaFormComponent_div_10_Template_button_click_7_listener","GetAllTiposMaquina","tipoMaquinaForm","createTipoMaquina","borrarTipoMaquina","tipo_id","streamTipoSelected","TipoMaquinaFormComponent_Template","TipoMaquinaFormComponent_div_10_Template","TipoMaquinaFormComponent_Template_form_ngSubmit_17_listener","TipoMaquinaFormComponent_Template_form_submit_17_listener","TriggerFormComponent_div_10_Template_mat_option_click_1_listener","trigger_r1","setTrigger","StreamTriggerSelected","apiTrigger","API_URL_TRIGGER","GetAllTriggers","triggerForm","listTriggers","crearTrigger","borrarTrigger","trigger_descripcion","trigger_id","streamTriggerSelected","TriggerFormComponent_Template","TriggerFormComponent_div_10_Template","VariableFormComponent_mat_list_11_Template_button_click_6_listener","httpService","apiVariables","API_URL_VARIABLES","apiMaquinas","GetAllVariables","variableForm","trigger_valor","listProcesos","listMaquina","listTrigger","crearVariable","VariableFormComponent_Template","VariableFormComponent_Template_mat_expansion_panel_click_7_listener","VariableFormComponent_mat_list_11_Template","VariableFormComponent_Template_form_ngSubmit_18_listener","id_tipoMaquina","id_preoceso","switchDelete","borrarVariable","borrarUsuario","streamProcesos","GetAllTipoMaquinas","streamTipoMaquinas","VariableModalComponent_Template","VariableModalComponent_Template_button_click_4_listener","VariableModalComponent_Template_button_click_6_listener","inject","route","IsLoggedIn","menu","LoginModalComponent_div_9_Template_button_click_6_listener","cerrar","LoginModalComponent_div_10_Template_button_click_6_listener","_r5","LoginModalComponent_Template","LoginModalComponent_div_9_Template","LoginModalComponent_div_10_Template","isLogin","Subscription","delay","BehaviorSubject","of","DOCUMENT","http","location","locationStrategy","plaformLocation","apiUsers","apiRole","API_URL_ROLES","tokenSubscription","tokenSubscription2","messageSource","provinciasSource","departamentosSource","localidadesSource","empresasSource","plantasSource","lineaSource","maquinaSource","tipoMaquinaSource","procesoSource","userSource","fullnameSource","tipoMaquinaSelectedSource","maquinaSelectedSource","procesoSelectedSource","triggerSelectedSource","asObservable","enterAnimationDuration","exitAnimationDuration","afterClosed","post","authToken","unsubscribe","expired","closeAll","pre_expirationCounter","timeNow","inputdata","headers","observe","_ref2","_x2","_this","Authorization","_ref3","_x3","formData","_ref4","_x4","delete","_ref5","_x5","empresas","plantas","linea","Maquinas","Procesos","tipoMaquina","TipoMaquina","Maquina","proceso","trigger","ɵɵinject","HttpClient","Location","LocationStrategy","PlatformLocation","factory","ɵfac","providedIn","Subject","_authService","chartListSource","chartRangeSource","chartIntervalInfoSource","chartItem","registroGeneral","API_URL_RGENERAL","registroGeneralts","API_URL_RGENERALTS","listaVariablesSource","listaRegistroFiltradoSource","listaRegistroFiltrado2Source","listaDatosSource3","listaDatosInRangeSource","listChartInfoSource","listCharDatatInfoSource","listIntervalSource","rangeSource","listaDatos3","listInterval","listChartDataInfo","inicio_str","final_str","fin","binsize","datoGeneral","stream_Datos3","chartDataInfo","stream_Interval","get_Inicio_Final","_spinnerService","spinner","hide","NgxSpinnerService","colorLib","CHART_COLORS","strong_blue","medium_blue","light_blue","red","orange","yellow","green","blue","purple","grey","NAMED_COLORS","alpha","rgbString","hasUpperCase","test","passwordValid","checkLowerCase","hasLowerCase","hasLower","hasNumeric","hasSpecial","loc","BASE_URL","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","MatSelectModule","MatCardModule","MatRadioModule","MatCheckboxModule","MatTableModule","MatPaginatorModule","MatSortModule","MatExpansionModule","MatStepperModule","MatIconModule","MatListModule","MatChipsModule","MatDatepickerModule","MatSidenavModule","MatProgressSpinnerModule","MatMenuModule","MatProgressBarModule","MatTabsModule","MatButtonToggleModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[64]}