{"version":3,"file":"main.js","mappings":"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8EAAmB,EACnB/7B,wEAAmB,EACnBg8B,wEAAgB,EAChBnb,6EAAkB,EAClBob,yFAAwB,EACxBC,kEAAa,EACbC,iFAAoB,EACpBC,kEAAa,EACbC,mFAAqB;EAAA;AAAA;;;;;;;;;;ACnDzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home5/home5.component.ts","./src/app/components/home5/home5.component.html","./src/app/components/listar-datos/listar-datos.component.ts","./src/app/components/listar-datos/listar-datos.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/tabla/tabla.component.ts","./src/app/components/tabla/tabla.component.html","./src/app/components/toolbar/toolbar.component.ts","./src/app/components/toolbar/toolbar.component.html","./src/app/components/updatepopup/updatepopup.component.ts","./src/app/components/updatepopup/updatepopup.component.html","./src/app/components/userlisting/userlisting.component.ts","./src/app/components/userlisting/userlisting.component.html","./src/app/dialog.component.ts","./src/app/dialog.component.html","./src/app/forms/departamentos/departamentos.component.ts","./src/app/forms/departamentos/departamentos.component.html","./src/app/forms/empresa-form/empresa-form.component.ts","./src/app/forms/empresa-form/empresa-form.component.html","./src/app/forms/empresa-planta-form/empresa-planta-form.component.ts","./src/app/forms/empresa-planta-form/empresa-planta-form.component.html","./src/app/forms/linea-produccion-form/linea-produccion-form.component.ts","./src/app/forms/linea-produccion-form/linea-produccion-form.component.html","./src/app/forms/localidad-form/localidad-form.component.ts","./src/app/forms/localidad-form/localidad-form.component.html","./src/app/forms/maquina-form/maquina-form.component.ts","./src/app/forms/maquina-form/maquina-form.component.html","./src/app/forms/pais-form/pais-form.component.ts","./src/app/forms/pais-form/pais-form.component.html","./src/app/forms/proceso-form/proceso-form.component.ts","./src/app/forms/proceso-form/proceso-form.component.html","./src/app/forms/provincia-form/provincia-form.component.ts","./src/app/forms/provincia-form/provincia-form.component.html","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.ts","./src/app/forms/tipo-maquina-form/tipo-maquina-form.component.html","./src/app/forms/trigger-form/trigger-form.component.ts","./src/app/forms/trigger-form/trigger-form.component.html","./src/app/forms/variable-form/variable-form.component.ts","./src/app/forms/variable-form/variable-form.component.html","./src/app/forms/variable-form/variable.modal.component.ts","./src/app/forms/variable-form/variable-modal.html","./src/app/guard/auth.guard.ts","./src/app/login-modal/login-modal.component.ts","./src/app/login-modal/login-modal.component.html","./src/app/service/auth.service.ts","./src/app/service/chart-generator.service.ts","./src/app/service/http.service.ts","./src/app/service/spinner.service.ts","./src/app/service/utils.service.ts","./src/app/service/validator.ts","./src/environments/environment.staging.ts","./src/main.ts","./src/material.module.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { authGuard } from './guard/auth.guard';\r\n\r\nimport { Home5Component } from './components/home5/home5.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ListarDatosComponent, canActivate: [authGuard] },\r\n  { path: 'admin', component: Home5Component, canActivate: [authGuard] },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'user', component: UserlistingComponent, canActivate: [authGuard] },\r\n  { path: '**', redirectTo: 'login', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, DoCheck, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './service/auth.service';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { HttpService } from './service/http.service';\r\nimport { Subscription, catchError } from 'rxjs';\r\nimport { RegistroFiltrado, Variable } from './models/datos.model';\r\nimport { SpinnerService } from './service/spinner.service';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements DoCheck, OnInit {\r\n  opened: boolean = false;\r\n\r\n  range!: FormGroup;\r\n\r\n  valor!: FormGroup;\r\n  title = 'angular-charts';\r\n  isMenuRequired = false;\r\n  isAdminUser = false;\r\n  listVariables: any = [];\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  subscription3!: Subscription;\r\n  listDatos: RegistroFiltrado[] = [];\r\n  exceedList: any = [];\r\n\r\n  notExceedList2: any = [];\r\n  fullName!: string;\r\n  iniciales!: string;\r\n  mobile = false;\r\n\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private router: Router,\r\n    private service: AuthService,\r\n    private _httpService: HttpService,\r\n    private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer\r\n  ) {\r\n    this.matIconRegistry.addSvgIcon(\r\n      'ajustes-deslizadores',\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n        '../assets/ajustes-deslizadores.svg'\r\n      )\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      'calendario',\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n        '../assets/calendario 2.svg'\r\n      )\r\n    );\r\n  }\r\n  ngOnInit(): void {\r\n    this.valor = this.builder.group({\r\n      threshold: new FormControl<number>(25),\r\n    });\r\n    this.range = this.builder.group({\r\n      start: new FormControl<Date | null>(null),\r\n      end: new FormControl<Date | null>(null),\r\n      granularidad: new FormControl<string>('day'),\r\n    });\r\n    this.subscription3 = this.service.fullname.subscribe((message) => {\r\n      setTimeout(() => {\r\n        console.log('fullname: ', message);\r\n        this.fullName = message;\r\n        this.iniciales = this.splitFullName();\r\n      }, 0);\r\n    });\r\n    this.subscription = this._httpService.listaVariables.subscribe(\r\n      (message: any) => (this.listVariables = message)\r\n    );\r\n\r\n    this.subscription2 = this._httpService.listaDatosInRange.subscribe(\r\n      (message) => {\r\n        // console.log('app component datos in range: ', message);\r\n      }\r\n    );\r\n\r\n    if (window.screen.width < 500) {\r\n      this.mobile = true;\r\n    }\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    let currentUrl = this.router.url;\r\n    if (currentUrl == '/login' || currentUrl == '/register') {\r\n      this.isMenuRequired = false;\r\n      this.opened = false;\r\n    } else {\r\n      this.isMenuRequired = true;\r\n    }\r\n    if (this.service.getUserRole() === 'admin') {\r\n      this.isAdminUser = true;\r\n    } else {\r\n      this.isAdminUser = false;\r\n    }\r\n  }\r\n  logOut() {\r\n    this.service.logout();\r\n  }\r\n\r\n  splitFullName() {\r\n    var output = this.fullName.split(' ');\r\n    var iniciales = '';\r\n    if (output.length > 1) {\r\n      iniciales = output[0].charAt(0) + output[1].charAt(0);\r\n    } else {\r\n      iniciales = output[0].charAt(0) + output[0].charAt(1);\r\n    }\r\n    console.log('iniciales: ', iniciales);\r\n    return iniciales.toUpperCase();\r\n  }\r\n}\r\n","<style>\r\n  :host {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\r\n      \"Segoe UI Symbol\";\r\n    font-size: 14px;\r\n    color: #333;\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n\r\n  .toolbar {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    height: 75px;\r\n    font-weight: 600;\r\n    background: #fff;\r\n\r\n    /* shadow */\r\n    box-shadow: 0px 4px 16px 0px rgba(0, 0, 0, 0.08);\r\n  }\r\n\r\n  .navbar-menu {\r\n    cursor: pointer;\r\n  }\r\n  .navbar-menu:hover {\r\n    color: #cb3f45;\r\n  }\r\n</style>\r\n\r\n<mat-toolbar class=\"toolbar flex items-center\" *ngIf=\"isMenuRequired\">\r\n  <div class=\"grid grid-cols-3 grid-rows-1 gap-4 content-center\">\r\n    <div class=\"col-span-1 pl-5\">\r\n      <a routerLink=\"/\" class=\"navbar-menu\">\r\n        <img\r\n          src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n          alt=\"\"\r\n          class=\"lintec_logo\"\r\n      /></a>\r\n    </div>\r\n    <div class=\"col-span-1 pt-5\">\r\n      <a *ngIf=\"isAdminUser\" routerLink=\"/admin\" class=\"navbar-menu\"\r\n        >Formularios</a\r\n      >\r\n    </div>\r\n    <div class=\"col-span-1 pt-5\">\r\n      <a *ngIf=\"isAdminUser\" routerLink=\"/user\" class=\"navbar-menu\">Usuarios</a>\r\n    </div>\r\n  </div>\r\n\r\n  <span class=\"spacer\"></span>\r\n  <div class=\"perfil\">\r\n    <p [attr.data-letters]=\"iniciales\" class=\"profile\"></p>\r\n    <p *ngIf=\"!mobile\" class=\"fullName\">{{ fullName }}</p>\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      class=\"navbar-menu m-5\"\r\n      (click)=\"logOut()\"\r\n    >\r\n      <g clip-path=\"url(#clip0_137_246)\">\r\n        <path\r\n          d=\"M22.829 9.17192L18.95 5.29292C18.7614 5.11076 18.5088 5.00997 18.2466 5.01224C17.9844 5.01452 17.7336 5.11969 17.5482 5.3051C17.3628 5.49051 17.2576 5.74132 17.2553 6.00352C17.2531 6.26571 17.3539 6.51832 17.536 6.70692L21.415 10.5859C21.5303 10.7034 21.631 10.8344 21.715 10.9759C21.7 10.9759 21.688 10.9679 21.673 10.9679L5.98901 10.9999C5.7238 10.9999 5.46944 11.1053 5.28191 11.2928C5.09437 11.4803 4.98901 11.7347 4.98901 11.9999C4.98901 12.2651 5.09437 12.5195 5.28191 12.707C5.46944 12.8946 5.7238 12.9999 5.98901 12.9999L21.667 12.9679C21.695 12.9679 21.718 12.9539 21.745 12.9519C21.6563 13.1211 21.5438 13.2767 21.411 13.4139L17.532 17.2929C17.4365 17.3852 17.3603 17.4955 17.3079 17.6175C17.2555 17.7395 17.2279 17.8707 17.2268 18.0035C17.2256 18.1363 17.2509 18.268 17.3012 18.3909C17.3515 18.5138 17.4257 18.6254 17.5196 18.7193C17.6135 18.8132 17.7252 18.8875 17.8481 18.9377C17.971 18.988 18.1026 19.0133 18.2354 19.0122C18.3682 19.011 18.4994 18.9834 18.6214 18.931C18.7434 18.8786 18.8538 18.8024 18.946 18.7069L22.825 14.8279C23.5749 14.0778 23.9962 13.0606 23.9962 11.9999C23.9962 10.9393 23.5749 9.92203 22.825 9.17192H22.829Z\"\r\n          fill=\"#c82d3b\"\r\n        />\r\n        <path\r\n          d=\"M7 22H5C4.20435 22 3.44129 21.6839 2.87868 21.1213C2.31607 20.5587 2 19.7956 2 19V5C2 4.20435 2.31607 3.44129 2.87868 2.87868C3.44129 2.31607 4.20435 2 5 2H7C7.26522 2 7.51957 1.89464 7.70711 1.70711C7.89464 1.51957 8 1.26522 8 1C8 0.734784 7.89464 0.48043 7.70711 0.292893C7.51957 0.105357 7.26522 0 7 0L5 0C3.67441 0.00158786 2.40356 0.528882 1.46622 1.46622C0.528882 2.40356 0.00158786 3.67441 0 5L0 19C0.00158786 20.3256 0.528882 21.5964 1.46622 22.5338C2.40356 23.4711 3.67441 23.9984 5 24H7C7.26522 24 7.51957 23.8946 7.70711 23.7071C7.89464 23.5196 8 23.2652 8 23C8 22.7348 7.89464 22.4804 7.70711 22.2929C7.51957 22.1054 7.26522 22 7 22Z\"\r\n          fill=\"#c82d3b\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <clipPath id=\"clip0_137_246\">\r\n          <rect width=\"24\" height=\"24\" fill=\"white\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </div>\r\n</mat-toolbar>\r\n\r\n<div role=\"main\">\r\n  <router-outlet class=\"\"></router-outlet>\r\n</div>\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// Import FusionCharts library and chart modules\r\nimport { ListarDatosComponent } from './components/listar-datos/listar-datos.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from 'src/material.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UpdatepopupComponent } from './components/updatepopup/updatepopup.component';\r\nimport { UserlistingComponent } from './components/userlisting/userlisting.component';\r\nimport { PaisFormComponent } from './forms/pais-form/pais-form.component';\r\nimport { ProvinciaFormComponent } from './forms/provincia-form/provincia-form.component';\r\nimport { LocalidadFormComponent } from './forms/localidad-form/localidad-form.component';\r\nimport { EmpresaFormComponent } from './forms/empresa-form/empresa-form.component';\r\nimport { EmpresaPlantaFormComponent } from './forms/empresa-planta-form/empresa-planta-form.component';\r\nimport { MaquinaFormComponent } from './forms/maquina-form/maquina-form.component';\r\nimport { TipoMaquinaFormComponent } from './forms/tipo-maquina-form/tipo-maquina-form.component';\r\nimport { LineaProduccionFormComponent } from './forms/linea-produccion-form/linea-produccion-form.component';\r\nimport { ProcesoFormComponent } from './forms/proceso-form/proceso-form.component';\r\nimport { VariableFormComponent } from './forms/variable-form/variable-form.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { TriggerFormComponent } from './forms/trigger-form/trigger-form.component';\r\nimport { Home5Component } from './components/home5/home5.component';\r\nimport { TablaComponent } from './components/tabla/tabla.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { LoginModalComponent } from './login-modal/login-modal.component';\r\n\r\nimport {\r\n  DateAdapter,\r\n  MatNativeDateModule,\r\n  MAT_DATE_FORMATS,\r\n  MAT_DATE_LOCALE,\r\n} from '@angular/material/core';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DepartamentosComponent } from './forms/departamentos/departamentos.component';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\nconst MY_DATE_FORMAT = {\r\n  parse: {\r\n    dateInput: 'yyyy-MM-dd', // this is how your date will be parsed from Input\r\n  },\r\n  display: {\r\n    dateInput: 'yyyy-MM-DD', // this is how your date will get displayed on the Input\r\n    monthYearLabel: 'MMMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListarDatosComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    UpdatepopupComponent,\r\n    UserlistingComponent,\r\n    PaisFormComponent,\r\n    ProvinciaFormComponent,\r\n    LocalidadFormComponent,\r\n    EmpresaFormComponent,\r\n    EmpresaPlantaFormComponent,\r\n    MaquinaFormComponent,\r\n    TipoMaquinaFormComponent,\r\n    LineaProduccionFormComponent,\r\n    ProcesoFormComponent,\r\n    VariableFormComponent,\r\n    TriggerFormComponent,\r\n    Home5Component,\r\n    TablaComponent,\r\n    LoginModalComponent,\r\n    DepartamentosComponent,\r\n    ToolbarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgxSpinnerModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: ['localhost'],\r\n      },\r\n    }),\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    ToastrModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE],\r\n    },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMAT },\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatStepper, StepperOrientation } from '@angular/material/stepper';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { MatTabGroup } from '@angular/material/tabs';\r\n\r\n@Component({\r\n  selector: 'app-home5',\r\n  templateUrl: './home5.component.html',\r\n  styleUrls: ['./home5.component.css'],\r\n})\r\nexport class Home5Component implements OnInit {\r\n  @ViewChild('stepper') stepper!: MatStepper;\r\n  @ViewChild(MatTabGroup) tabgroup!: MatTabGroup;\r\n  paisForm!: FormGroup;\r\n  provinciaForm!: FormGroup;\r\n  localidadForm!: FormGroup;\r\n  empresaForm!: FormGroup;\r\n  plantaForm!: FormGroup;\r\n  tipoMaquinaForm!: FormGroup;\r\n  lineaProduccionForm!: FormGroup;\r\n  maquinaForm!: FormGroup;\r\n  procesoForm!: FormGroup;\r\n  triggerForm!: FormGroup;\r\n  timeout: any;\r\n  token: any;\r\n  isTrue: boolean = false;\r\n\r\n  isPaisCompleted: boolean = false;\r\n  isProvinciaCompleted: boolean = false;\r\n  isLocalidadCompleted: boolean = false;\r\n  isEmpresaCompleted: boolean = false;\r\n  isPlantaCompleted: boolean = false;\r\n  isTipoMaquinaCompleted: boolean = false;\r\n  isLineaProduccionCompleted: boolean = false;\r\n  isMaquinaCompleted: boolean = false;\r\n  isProcesoCompleted: boolean = false;\r\n  isTriggerCompleted: boolean = false;\r\n  subscription!: Subscription;\r\n  completed: boolean = false;\r\n  tituloTabs = [\r\n    'Direccion',\r\n    'Empresa',\r\n    'Empresa/Planta',\r\n    'Línea de producción',\r\n    'Tipo de Máquina',\r\n    'Máquina',\r\n    'Proceso',\r\n    'Trigger',\r\n    'Variables',\r\n  ];\r\n  public selected = new FormControl(0);\r\n\r\n  constructor(\r\n    private service: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    breakpointObserver: BreakpointObserver\r\n  ) {}\r\n  ngOnInit() {\r\n    this.expirationCheck();\r\n    this.service.getUser();\r\n    this.subscription = this.service.paisSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPaisCompleted = true;\r\n      } else {\r\n        this.isPaisCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.provinciaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProvinciaCompleted = true;\r\n      } else {\r\n        this.isProvinciaCompleted = false;\r\n      }\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLocalidadCompleted = true;\r\n        this.completed = this.isLocalidadCompleted;\r\n      } else {\r\n        this.isLocalidadCompleted = false;\r\n        this.completed = this.isLocalidadCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.empresaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isEmpresaCompleted = true;\r\n        this.completed = this.isEmpresaCompleted;\r\n      } else {\r\n        this.isEmpresaCompleted = false;\r\n        this.completed = this.isEmpresaCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.plantaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isPlantaCompleted = true;\r\n        this.completed = this.isPlantaCompleted;\r\n      } else {\r\n        this.isPlantaCompleted = false;\r\n        this.completed = this.isPlantaCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.lineaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isLineaProduccionCompleted = true;\r\n        this.completed = this.isPlantaCompleted;\r\n      } else {\r\n        this.isLineaProduccionCompleted = false;\r\n        this.completed = this.isLocalidadCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => {\r\n        if (message != '') {\r\n          this.isTipoMaquinaCompleted = true;\r\n          this.completed = this.isTipoMaquinaCompleted;\r\n        } else {\r\n          this.isTipoMaquinaCompleted = false;\r\n          this.completed = this.isTipoMaquinaCompleted;\r\n        }\r\n      }\r\n    );\r\n    this.subscription = this.service.maquinaSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isMaquinaCompleted = true;\r\n        this.completed = this.isMaquinaCompleted;\r\n      } else {\r\n        this.isMaquinaCompleted = false;\r\n        this.completed = this.isMaquinaCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.procesoSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isProcesoCompleted = true;\r\n        this.completed = this.isProcesoCompleted;\r\n      } else {\r\n        this.isProcesoCompleted = false;\r\n        this.completed = this.isProcesoCompleted;\r\n      }\r\n    });\r\n    this.subscription = this.service.triggerSelected.subscribe((message) => {\r\n      if (message != '') {\r\n        this.isTriggerCompleted = true;\r\n        this.completed = this.isTriggerCompleted;\r\n      } else {\r\n        this.isTriggerCompleted = false;\r\n        this.completed = this.isTriggerCompleted;\r\n      }\r\n    });\r\n  }\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.service.expirationCounter(this.timeout);\r\n  }\r\n  nextButton() {\r\n    this.selected.setValue(this.selected.value! + 1);\r\n    console.log(this.selected.value);\r\n    this.completed = false;\r\n  }\r\n  backButton() {\r\n    this.selected.setValue(this.selected.value! - 1);\r\n    console.log(this.selected.value);\r\n  }\r\n}\r\n","<div class=\"p-3 fondo\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div class=\"grid grid-cols-6 grid-rows-2 gap-1 m-6\">\r\n        <div class=\"col-span-5\">\r\n          <mat-progress-bar\r\n            mode=\"determinate\"\r\n            [value]=\"(selected.value ? selected.value : 0) * 12.5\"\r\n          ></mat-progress-bar>\r\n        </div>\r\n        <div class=\"col-start-6 justify-self-end\">\r\n          <p>{{ selected.value ? selected.value + 1 : 1 }} / 9</p>\r\n        </div>\r\n        <div class=\"row-start-2\">\r\n          <h2>{{ tituloTabs[selected.value || 0] }}</h2>\r\n        </div>\r\n      </div>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <mat-tab-group\r\n        class=\"invisible-tabs\"\r\n        [selectedIndex]=\"selected.value\"\r\n        (selectedIndexChange)=\"selected.setValue($event)\"\r\n      >\r\n        <mat-tab>\r\n          <app-pais-form></app-pais-form>\r\n          <app-provincia-form></app-provincia-form>\r\n          <app-departamentos></app-departamentos>\r\n          <app-localidad-form></app-localidad-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-empresa-form></app-empresa-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-empresa-planta-form></app-empresa-planta-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-linea-produccion-form></app-linea-produccion-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-tipo-maquina-form></app-tipo-maquina-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-maquina-form></app-maquina-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-proceso-form></app-proceso-form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <app-trigger-form></app-trigger-form>\r\n        </mat-tab>\r\n        <mat-tab><app-variable-form></app-variable-form></mat-tab>\r\n      </mat-tab-group>\r\n\r\n      <div class=\"flex justify-between\">\r\n        <button\r\n          class=\"boton\"\r\n          mat-raised-button\r\n          [disabled]=\"!selected.value\"\r\n          (click)=\"backButton()\"\r\n        >\r\n          Atrás\r\n        </button>\r\n        <button\r\n          class=\"boton\"\r\n          mat-raised-button\r\n          [disabled]=\"!completed || selected.value == 8\"\r\n          (click)=\"nextButton()\"\r\n        >\r\n          siguiente\r\n        </button>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { Chart, registerables } from 'node_modules/chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport 'date-fns/locale';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { UtilsService } from 'src/app/service/utils.service';\r\nimport { Dato, RegistroFiltrado } from 'src/app/models/datos.model';\r\nimport { Subscription, catchError } from 'rxjs';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\r\nimport { ChartGeneratorService } from 'src/app/service/chart-generator.service';\r\n// import zoomPlugin from 'chartjs-plugin-zoom';\r\nChart.register(...registerables);\r\nChart.defaults.font.family = 'DIN-PRO';\r\nChart.defaults.font.size = 14;\r\nChart.defaults.font.weight = '400';\r\n\r\n@Component({\r\n  selector: 'app-listar-datos',\r\n  templateUrl: './listar-datos.component.html',\r\n  styleUrls: ['./listar-datos.component.css'],\r\n})\r\nexport class ListarDatosComponent implements OnInit, OnDestroy {\r\n  listDatos: any;\r\n  listVariables: any[] = [];\r\n  todayDate: Date = new Date();\r\n  sixMonthAgoDate!: Date;\r\n  dato!: Dato;\r\n  sensor_1: string = 'sensor 1';\r\n  sensor_2: string = 'sensor 2';\r\n  pulsador: string = 'Pulsador';\r\n  id: any = 0;\r\n  chart: any;\r\n  chart3: any;\r\n  title: string = 'Prueba angular';\r\n  timeout: any;\r\n  token: any;\r\n  subscription!: Subscription;\r\n  open: boolean = false;\r\n  range!: any;\r\n  rangeSub!: any;\r\n  interval!: any;\r\n  chartList: any = [];\r\n  chartList2: any = [];\r\n  i: any = null;\r\n  tabla: any = 'tabla';\r\n  isOpen = false;\r\n  selectValue: any = [\r\n    {\r\n      option: 'Media',\r\n      value: 'avg',\r\n    },\r\n    {\r\n      option: 'Mínimo',\r\n      value: 'min',\r\n    },\r\n    {\r\n      option: 'Máximo',\r\n      value: 'max',\r\n    },\r\n  ];\r\n  selectedValue = this.selectValue[2].value;\r\n  selectedInterval = this.selectValue[0];\r\n\r\n  selectTime: any = [\r\n    {\r\n      option: '1h',\r\n      value: 3600000,\r\n      binSize: 1,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '3h',\r\n      value: 10800000,\r\n      binSize: 10,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '12h',\r\n      value: 43200000,\r\n      binSize: 5,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '1d',\r\n      value: 86400000,\r\n      binSize: 15,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '3d',\r\n      value: 259200000,\r\n      binSize: 1,\r\n      unit: 'hour',\r\n    },\r\n    {\r\n      option: '1w',\r\n      value: 604800000,\r\n      binSize: 6,\r\n      unit: 'hour',\r\n    },\r\n  ];\r\n  selectedTime = this.selectTime[0];\r\n\r\n  selectTimeOut: any = [\r\n    {\r\n      option: 'Desactivado',\r\n      value: 'null',\r\n    },\r\n    {\r\n      option: '30Seg',\r\n      value: '30s',\r\n    },\r\n    {\r\n      option: '1 Minuto',\r\n      value: '1m',\r\n    },\r\n    {\r\n      option: '2 Minutos',\r\n      value: '2m',\r\n    },\r\n    {\r\n      option: '5 Minutos',\r\n      value: '5m',\r\n    },\r\n    {\r\n      option: '15 Minutos',\r\n      value: '15m',\r\n    },\r\n  ];\r\n\r\n  canvasBackgroundColor = {\r\n    id: 'canvasBackgroundColor',\r\n    beforeDatasetsDraw(chart: any, args: any, pluginOptions: any) {\r\n      const {\r\n        ctx,\r\n        chartArea: { top, bottom, left, right, width, height },\r\n        scales: { x, y },\r\n      } = chart;\r\n\r\n      function bgColors(\r\n        bracketLow: number,\r\n        bracketHigh: number,\r\n        color: string\r\n      ) {\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(\r\n          left,\r\n          y.getPixelForValue(bracketHigh),\r\n          width,\r\n          y.getPixelForValue(bracketLow) - y.getPixelForValue(bracketHigh)\r\n        );\r\n      }\r\n      bgColors(\r\n        0,\r\n        parseInt(y._labelItems[y._labelItems.length - 1].label),\r\n        'rgba(111, 151, 255, 0.30)'\r\n      );\r\n    },\r\n  };\r\n  decimation: any = {\r\n    id: 'decimation',\r\n    enabled: true,\r\n    algorithm: 'lttb',\r\n    samples: 500,\r\n    threshold: 50,\r\n  };\r\n  @ViewChild(MatMenuTrigger) trigger!: MatMenuTrigger;\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private utils: UtilsService,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private spinnerService: SpinnerService,\r\n    private builder: FormBuilder,\r\n    private chartService: ChartGeneratorService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getVariables();\r\n    this.authService.getUser();\r\n\r\n    this.range = this.builder.group({\r\n      start: new FormControl<Date | null>(null),\r\n      end: new FormControl<Date | null>(null),\r\n      granularidad: new FormControl<string>('day'),\r\n    });\r\n\r\n    this.interval = this.builder.group({\r\n      intervalo: new FormControl<Number | null>(1),\r\n      medida: new FormControl<String | null>('max'),\r\n      tiempo: new FormControl<Number | null>(60 * 60 * 1000),\r\n    });\r\n\r\n    this.chart = new Chart('myChart', {\r\n      type: 'line',\r\n      data: {\r\n        labels: [],\r\n        datasets: [],\r\n      },\r\n      options: {\r\n        // hay que arreglar esto para que funcione la data decimation\r\n        // Turn off animations and data parsing for performance\r\n        elements: {\r\n          line: {\r\n            tension: 0.5,\r\n          },\r\n        },\r\n        aspectRatio: 1,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        parsing: false,\r\n        plugins: {\r\n          decimation: this.decimation,\r\n        },\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            ticks: {},\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n          x: {\r\n            type: 'time',\r\n\r\n            ticks: {\r\n              source: 'auto',\r\n              // Disabled rotation for performance\r\n              maxRotation: 0,\r\n              autoSkip: true,\r\n            },\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      plugins: [this.canvasBackgroundColor], //canvasBackgroundColor,\r\n    });\r\n\r\n    this.subscription = this._httpService.listaVariables.subscribe(\r\n      (message: any) => {\r\n        this.listVariables = message;\r\n        this.getRegistros();\r\n      }\r\n    );\r\n    this.expirationCheck();\r\n\r\n    this.subscription = this._httpService.listaRegistroFiltrado2.subscribe(\r\n      (message) => {\r\n        console.log('registro filtrado 2:', message);\r\n        this.listDatos = message;\r\n        if (this.listDatos.length != 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n        var sortedList = this.listVariables;\r\n        sortedList = sortedList.map((item: { _id: any }) => {\r\n          const item2 = this.listDatos.find(\r\n            (i2: { _id: any }) => i2._id === item._id\r\n          );\r\n          return item2 ? { ...item, ...item2 } : item;\r\n        });\r\n        console.log('sortedList: ', sortedList);\r\n        for (let i = 0; i < this.listVariables.length; i++) {\r\n          this.chart.data.datasets[i].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.max.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chart.update();\r\n\r\n          if (i == this.listVariables.length - 1) {\r\n            this.spinnerService.detenerSpinner('grafico');\r\n            this.chart.update();\r\n          }\r\n        }\r\n        for (let i = 0; i < this.chartList.length; i++) {\r\n          this.chartList2[i].chart.data.datasets[0].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.min.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.min.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chartList2[i].chart.update();\r\n        }\r\n      }\r\n    );\r\n    this.subscription = this._httpService.rangeInfo.subscribe(\r\n      (message: any) => {\r\n        this.rangeSub = message;\r\n      }\r\n    );\r\n    this.subscription = this.chartService.chartInfo.subscribe(\r\n      (message: any) => {\r\n        console.log('chart info datos: ', message);\r\n        this.changeCurrentValues(\r\n          this.chartList2[message.index].chart,\r\n          message.value,\r\n          message.datos ? message.datos : this.chartList2.datos,\r\n          message.index\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.id) {\r\n      clearInterval(this.id);\r\n    }\r\n  }\r\n\r\n  getRegistros() {\r\n    var inicio = new Date('2023-05-01').getTime().toString();\r\n    var final = new Date('2023-12-31').getTime().toString();\r\n    var sortedList = this.listVariables;\r\n    this.spinnerService.llamarSpinner('grafico');\r\n    this._httpService\r\n      .getValoresFiltrados2(inicio, final, this.range.value.granularidad)\r\n      .subscribe((data) => {\r\n        this.listDatos = data['datos'];\r\n\r\n        sortedList = sortedList.map((item: { _id: any }) => {\r\n          const item2 = this.listDatos.find(\r\n            (i2: { _id: any }) => i2._id === item._id\r\n          );\r\n          return item2 ? { ...item, ...item2 } : item;\r\n        });\r\n        if (this.chart.data.datasets.length < this.listVariables.length) {\r\n          for (let j = 0; j < sortedList.length; j++) {\r\n            const dsColor = this.utils.namedColor(\r\n              this.chart.data.datasets.length\r\n            );\r\n            const dataSet = {\r\n              data: [],\r\n              label: sortedList[j].nombre,\r\n              borderColor: dsColor,\r\n              backgroundColor: this.utils.transparentize(dsColor, 0.5),\r\n            };\r\n            this.chart.data.datasets.push(dataSet);\r\n          }\r\n        }\r\n\r\n        console.log('sortedList: ', sortedList);\r\n        for (let i = 0; i < this.listVariables.length; i++) {\r\n          this.chart.data.datasets[i].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.max.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chart.update();\r\n\r\n          if (i == this.listVariables.length - 1) {\r\n            this.spinnerService.detenerSpinner('grafico');\r\n            this.chart.update();\r\n          }\r\n        }\r\n        for (let i = 0; i < this.chartList.length; i++) {\r\n          this.chartList2[i].chart.data.datasets[0].data = sortedList[i]?.info\r\n            .sort(\r\n              (objA: any, objB: any) =>\r\n                Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n            )\r\n            .map(\r\n              (x: any) =>\r\n                (this.dato = {\r\n                  y: parseFloat(x.min.valor_lectura.toFixed(2)),\r\n                  x: new Date(x.min.fecha_lectura).getTime(),\r\n                })\r\n            );\r\n          this.chartList2[i].datos = [sortedList[i]];\r\n          this.chartList2[i].chart.update();\r\n        }\r\n      });\r\n  }\r\n\r\n  getVariables() {\r\n    this._httpService.getVariables().subscribe((data) => {\r\n      this._httpService.stream_Variables(data);\r\n      console.log(data);\r\n\r\n      this.chartList = [\r\n        {\r\n          titulo: data[0] ? data[0].nombre : 'myChart1',\r\n          id: data[0]._id,\r\n        },\r\n        {\r\n          titulo: data[1] ? data[1].nombre : 'myChart2',\r\n          id: data[1]._id,\r\n        },\r\n        {\r\n          titulo: data[2] ? data[2].nombre : 'myChart3',\r\n          id: data[2]._id,\r\n        },\r\n      ];\r\n      setTimeout(() => {\r\n        this.chartService.generate(\r\n          this.chartList,\r\n          this.decimation,\r\n          this.canvasBackgroundColor\r\n        );\r\n        this.chartList2 = this.chartService.getCharts();\r\n        this.chartService.streamCharts(this.chartList2);\r\n      }, 500);\r\n    });\r\n  }\r\n\r\n  getFiltrados() {\r\n    var inicio: any = this.range.value.start._d?.getTime().toString();\r\n    var final: any = this.range.value.end._d?.getTime().toString();\r\n    this.spinnerService.llamarSpinner('grafico');\r\n    this._httpService\r\n      .getValoresFiltrados2(inicio, final, this.range.value.granularidad)\r\n      .subscribe((data) => {\r\n        // console.log(data);\r\n        this._httpService.stream_RegistroFiltrado2(data['datos']);\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('grafico');\r\n        }\r\n      });\r\n  }\r\n\r\n  expirationCheck(): void {\r\n    this.token = sessionStorage.getItem('token')?.toString();\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n      new Date().valueOf();\r\n    this.authService.expirationCounter(this.timeout);\r\n  }\r\n  getDataColors = (opacity?: String) => {\r\n    const colors = [\r\n      '#7448c2',\r\n      '#21c0d7',\r\n      '#d99e2b',\r\n      '#cd3a81',\r\n      '#9c99cc',\r\n      '#e14eca',\r\n      '#ffffff',\r\n      '#ff0000',\r\n      '#d6ff00',\r\n      '#0038ff',\r\n    ];\r\n    return colors.map((color) => (opacity ? `${color + opacity}` : color));\r\n  };\r\n\r\n  setInicio_final() {\r\n    var inicio: any = this.range.value.start._d?.getTime().toString();\r\n    var final: any = this.range.value.end._d?.getTime().toString();\r\n    this._httpService.set_Inicio_Final(inicio, final);\r\n    var difference = parseInt(final) - parseInt(inicio);\r\n    if (difference < this.selectTime[4].value) {\r\n      this.setInterval({\r\n        binSize: 15,\r\n        unit: 'minute',\r\n      });\r\n    } else if (difference < this.selectTime[5].value) {\r\n      this.setInterval({\r\n        binSize: 1,\r\n        unit: 'hour',\r\n      });\r\n    } else if (difference < this.selectTime[5].value * 3) {\r\n      this.setInterval({\r\n        binSize: 6,\r\n        unit: 'hour',\r\n      });\r\n    } else {\r\n      this.setInterval({\r\n        binSize: 1,\r\n        unit: 'day',\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleIsOpen() {\r\n    this.isOpen = !this.isOpen;\r\n    console.log('is open value', this.isOpen);\r\n  }\r\n  changeCurrentValues(chart: any, val: string, datos: any, index?: number) {\r\n    console.log('change current values: ', val);\r\n    console.log('chart: ', chart);\r\n\r\n    var sortedList = this.listVariables;\r\n    sortedList = sortedList\r\n      .map((item: { _id: any }) => {\r\n        const item2 = datos.find((i2: { _id: any }) => i2._id === item._id);\r\n        return item2;\r\n      })\r\n      .filter((e) => {\r\n        return e !== undefined;\r\n      });\r\n    console.log('change current values sorted list: ', sortedList);\r\n    if (datos.length > 0) {\r\n      switch (val) {\r\n        case 'max':\r\n          for (let i = 0; i < sortedList.length; i++) {\r\n            chart.data.datasets[i].data = sortedList[i]?.info\r\n              .sort(\r\n                (objA: any, objB: any) =>\r\n                  Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n              )\r\n              .map(\r\n                (x: any) =>\r\n                  (this.dato = {\r\n                    y: parseFloat(x.max.valor_lectura.toFixed(2)),\r\n                    x: new Date(x.max.fecha_lectura).getTime(),\r\n                  })\r\n              );\r\n            chart.update();\r\n\r\n            if (i == sortedList.length - 1) {\r\n              this.spinnerService.detenerSpinner('grafico');\r\n              console.log('sorted list: ', sortedList);\r\n\r\n              chart.update();\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'min':\r\n          for (let i = 0; i < sortedList.length; i++) {\r\n            chart.data.datasets[i].data = sortedList[i]?.info\r\n              .sort(\r\n                (objA: any, objB: any) =>\r\n                  Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n              )\r\n              .map(\r\n                (x: any) =>\r\n                  (this.dato = {\r\n                    y: parseFloat(x.min.valor_lectura.toFixed(2)),\r\n                    x: new Date(x.min.fecha_lectura).getTime(),\r\n                  })\r\n              );\r\n            chart.update();\r\n\r\n            if (i == sortedList.length - 1) {\r\n              this.spinnerService.detenerSpinner('grafico');\r\n              console.log('sorted list: ', sortedList);\r\n\r\n              chart.update();\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'avg':\r\n          for (let i = 0; i < sortedList.length; i++) {\r\n            chart.data.datasets[i].data = sortedList[i]?.info\r\n              .sort(\r\n                (objA: any, objB: any) =>\r\n                  Number(new Date(objA.date)) - Number(new Date(objB.date))\r\n              )\r\n              .map(\r\n                (x: any) =>\r\n                  (this.dato = {\r\n                    y: parseFloat(x.avg.toFixed(2)),\r\n                    x: new Date(x.date).getTime(),\r\n                  })\r\n              );\r\n            chart.update();\r\n\r\n            if (i == sortedList.length - 1) {\r\n              this.spinnerService.detenerSpinner(`grafico${index}`);\r\n              console.log('sorted list: ', sortedList);\r\n\r\n              chart.update();\r\n            }\r\n          }\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      chart.data.datasets[0].data = [];\r\n      chart.update();\r\n      console.log('no hay datos');\r\n    }\r\n  }\r\n\r\n  getValuesByInterval() {\r\n    const currentDateObj = new Date();\r\n    const final = this.rangeSub[1]\r\n      ? this.rangeSub[1]\r\n      : currentDateObj.getTime();\r\n    const millis = this.selectedTime;\r\n    const inicio = this.rangeSub[1] ? this.rangeSub[0] : final - millis;\r\n    this.spinnerService.llamarSpinner('grafico');\r\n    this._httpService\r\n      .getInterval(\r\n        inicio,\r\n        final,\r\n        this.selectedInterval.unit,\r\n        this.selectedInterval.binSize\r\n      )\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      )\r\n      .subscribe((data) => {\r\n        this.listDatos = data['datos'];\r\n        console.log('getInterval: ', data);\r\n\r\n        this.spinnerService.detenerSpinner('grafico');\r\n\r\n        this.changeCurrentValues(\r\n          this.chart,\r\n          this.selectedValue,\r\n          this.listDatos\r\n        );\r\n      });\r\n  }\r\n  setTime(time: any) {\r\n    this.rangeSub = [];\r\n    this.selectedTime = time;\r\n  }\r\n  setInterval(interval: any) {\r\n    console.log('set interval', interval);\r\n    this.selectedInterval = interval;\r\n  }\r\n  setValue(value: any) {\r\n    this.selectedValue = value;\r\n    this.changeCurrentValues(this.chart, this.selectedValue, this.listDatos);\r\n  }\r\n}\r\n","<div class=\"grid grid-flow-row grid-cols-1 sm:grid-cols-1 p-3 fondo\">\r\n  <div class=\"p-3\">\r\n    <mat-card>\r\n      <mat-menu [hasBackdrop]=\"true\" #menu=\"matMenu\" class=\"menu\">\r\n        <div\r\n          class=\"grid grid-cols-2 grid-flow-row sm:grid-cols-2 grid-row-2 gap-4 m-3\"\r\n          [formGroup]=\"range\"\r\n          (click)=\"$event.stopPropagation()\"\r\n        >\r\n          <div>\r\n            <h2 class=\"subtitulo\">Desde</h2>\r\n            <div class=\"d-input\">\r\n              <mat-datepicker-toggle [for]=\"startpicker\">\r\n                <mat-icon\r\n                  svgIcon=\"calendario\"\r\n                  class=\"calendario\"\r\n                  matDatepickerToggleIcon\r\n                ></mat-icon>\r\n              </mat-datepicker-toggle>\r\n              <input\r\n                [matDatepicker]=\"startpicker\"\r\n                formControlName=\"start\"\r\n                class=\"input-field\"\r\n                type=\"date\"\r\n              />\r\n            </div>\r\n            <mat-datepicker #startpicker></mat-datepicker>\r\n          </div>\r\n          <div>\r\n            <h2 class=\"subtitulo\">Hasta</h2>\r\n            <div class=\"d-input\">\r\n              <mat-datepicker-toggle [for]=\"endpicker\">\r\n                <mat-icon\r\n                  svgIcon=\"calendario\"\r\n                  class=\"calendario\"\r\n                  matDatepickerToggleIcon\r\n                ></mat-icon>\r\n              </mat-datepicker-toggle>\r\n              <input\r\n                formControlName=\"end\"\r\n                [matDatepicker]=\"endpicker\"\r\n                class=\"input-field\"\r\n                type=\"date\"\r\n                (dateChange)=\"setInicio_final()\"\r\n              />\r\n            </div>\r\n            <mat-datepicker #endpicker></mat-datepicker>\r\n          </div>\r\n          <div class=\"col-span-2 row-start-2\">\r\n            <!-- <button mat-button (click)=\"range.reset()\">Reset</button> -->\r\n            <!-- <button\r\n              mat-raised-button\r\n              (click)=\"getFiltrados()\"\r\n              class=\"boton_wide\"\r\n              [disabled]=\"!range.value.start || !range.value.end\"\r\n            >\r\n              Aplicar\r\n            </button> -->\r\n          </div>\r\n        </div>\r\n      </mat-menu>\r\n      <mat-card-header\r\n        [formGroup]=\"interval\"\r\n        class=\"grid justify-content-stretch grid-cols-1 sm:grid-cols-3\"\r\n      >\r\n        <mat-card-title>\r\n          <h2 class=\"titulo\">Todas Las variables</h2>\r\n        </mat-card-title>\r\n        <div class=\"flex flex-row mr-5\">\r\n          <div class=\"d-input\">\r\n            <select\r\n              class=\"input-field\"\r\n              #selectMedida\r\n              formControlName=\"medida\"\r\n              (change)=\"[setValue(selectMedida.value)]\"\r\n            >\r\n              <option\r\n                *ngFor=\"let valor of selectValue\"\r\n                value=\"{{ valor.value }}\"\r\n              >\r\n                {{ valor.option }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"div3\">\r\n          <mat-button-toggle-group>\r\n            <mat-button-toggle\r\n              *ngFor=\"let time of selectTime\"\r\n              [value]=\"time\"\r\n              (click)=\"[tooltip.show(), setTime(time.value), setInterval(time)]\"\r\n            >\r\n              {{ time.option }}\r\n            </mat-button-toggle>\r\n            <mat-button-toggle [matMenuTriggerFor]=\"menu\">\r\n              <mat-icon\r\n                svgIcon=\"calendario\"\r\n                class=\"calendario\"\r\n                iconPositionEnd\r\n              ></mat-icon>\r\n            </mat-button-toggle>\r\n          </mat-button-toggle-group>\r\n          <button\r\n            mat-flat-button\r\n            #tooltip=\"matTooltip\"\r\n            matTooltip=\"Confirmar los cambios\"\r\n            matTooltipPosition=\"above\"\r\n            (click)=\"getValuesByInterval()\"\r\n          >\r\n            Enviar\r\n          </button>\r\n        </div>\r\n\r\n        <mat-menu #menuTimeout=\"matMenu\">\r\n          <button mat-menu-item *ngFor=\"let timeOut of selectTimeOut\">\r\n            {{ timeOut.option }}\r\n          </button>\r\n        </mat-menu>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <canvas id=\"myChart\"></canvas>\r\n        <ngx-spinner\r\n          bdColor=\"rgba(51,51,51,0.8)\"\r\n          size=\"medium\"\r\n          color=\"#fff\"\r\n          type=\"ball-spin-clockwise\"\r\n          [fullScreen]=\"false\"\r\n          name=\"grafico\"\r\n        >\r\n        </ngx-spinner>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"grid grid-flow-row grid-cols-1 sm:grid-cols-2 p-3 fondo\">\r\n  <div class=\"p-3\" *ngFor=\"let chart of chartList; index as i\">\r\n    <mat-card>\r\n      <app-toolbar\r\n        [value]=\"chart\"\r\n        [selectValue]=\"selectValue\"\r\n        [selectTime]=\"selectTime\"\r\n        [indice]=\"i\"\r\n      ></app-toolbar>\r\n      <mat-card-content>\r\n        <canvas id=\"{{ chart.titulo }}\"></canvas>\r\n        <ngx-spinner\r\n          bdColor=\"rgba(51,51,51,0.8)\"\r\n          size=\"medium\"\r\n          color=\"#fff\"\r\n          type=\"ball-spin-clockwise\"\r\n          [fullScreen]=\"false\"\r\n          name=\"grafico{{ i }}\"\r\n        >\r\n        </ngx-spinner>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"p-3\">\r\n    <app-tabla></app-tabla>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport {\r\n  checkNumber,\r\n  checkSpecial,\r\n  checkUpperCase,\r\n} from 'src/app/service/validator';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  registerForm: any;\r\n  pass: string = '';\r\n  show = false;\r\n  mobile = false;\r\n\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.pass = 'password';\r\n    if (window.screen.width < 500) {\r\n      this.mobile = true;\r\n    }\r\n    this.registerForm = this.builder.group({\r\n      username: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n      ]),\r\n      name: new FormControl('', [Validators.required, Validators.minLength(5)]),\r\n      password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n          checkUpperCase(),\r\n          checkNumber(),\r\n          checkSpecial(),\r\n        ],\r\n      ],\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      role: this.builder.control('64f1f60e918724a5f931d909'),\r\n      isActive: this.builder.control('inactive'),\r\n    });\r\n  }\r\n\r\n  showDiv = {\r\n    Login: true,\r\n    Register: false,\r\n  };\r\n\r\n  loginForm = this.builder.group({\r\n    username: this.builder.control('', Validators.required),\r\n    password: this.builder.control('', Validators.required),\r\n  });\r\n\r\n  userData: any;\r\n\r\n  proceedLogin() {\r\n    this.service.LogIn(this.loginForm.value).subscribe((res) => {\r\n      this.userData = res;\r\n      console.log(this.userData.status);\r\n      console.log(this.userData);\r\n      switch (this.userData.status) {\r\n        case 200:\r\n          if (this.userData['datos'].isActive === 'active') {\r\n            this.toastr.success('acceso concedido', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service.storeUserData(\r\n              this.userData.token,\r\n              this.userData['datos'],\r\n              this.userData.rtoken\r\n            );\r\n          } else {\r\n            this.toastr.error(\r\n              'Contactar con administrador',\r\n              'usuario inactivo'\r\n            );\r\n          }\r\n          break;\r\n        case 403:\r\n          this.service.openDialog2();\r\n          break;\r\n\r\n        default:\r\n          this.service.openDialog2();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  proceedRegistration() {\r\n    if (this.registerForm.valid) {\r\n      console.log(this.registerForm.value);\r\n      this.service.Proceedregister(this.registerForm.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else if (res.status == 200) {\r\n            this.toastr.success(\r\n              'Solicitar acceso con el administrador ',\r\n              'Registro exitoso'\r\n            );\r\n            this.mostrarLogin();\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.toastr.warning('error', error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  mostrarLogin() {\r\n    this.showDiv.Login = true;\r\n    this.showDiv.Register = false;\r\n    this.show = false;\r\n    this.pass = 'password';\r\n  }\r\n  mostrarRegistro() {\r\n    this.showDiv.Register = true;\r\n    this.showDiv.Login = false;\r\n    this.show = false;\r\n    this.pass = 'password';\r\n  }\r\n\r\n  get password() {\r\n    return this.registerForm.get('password')!;\r\n  }\r\n\r\n  showPass() {\r\n    if (this.pass === 'password') {\r\n      this.pass = 'text';\r\n      this.show = true;\r\n    } else {\r\n      this.pass = 'password';\r\n      this.show = false;\r\n    }\r\n  }\r\n}\r\n","<div class=\"grid grid-flow-row-dense grid-cols-1 sm:grid-cols-2\">\r\n  <div *ngIf=\"!mobile\" class=\"row-span-1 col-span-1\">\r\n    <img src=\"assets/g850.png\" alt=\"\" class=\"login\" />\r\n  </div>\r\n\r\n  <div class=\"row-span-1 col-span-1\">\r\n    <div class=\"carta flex flex-col col-span-1\" *ngIf=\"showDiv.Login\">\r\n      <div class=\"logo\">\r\n        <img\r\n          src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n          alt=\"\"\r\n          class=\"linetec_logo m-5\"\r\n        />\r\n        <h2 class=\"titulo\">Iniciar sesión</h2>\r\n      </div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"loginForm\"\r\n        (ngSubmit)=\"proceedLogin()\"\r\n      >\r\n        <div class=\"flex flex-col\">\r\n          <mat-form-field class=\"m-input\">\r\n            <input matInput placeholder=\"Usuario\" formControlName=\"username\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              [type]=\"pass\"\r\n              matInput\r\n              placeholder=\"Contraseña\"\r\n              formControlName=\"password\"\r\n            />\r\n            <a\r\n              matSuffix\r\n              style=\"cursor: pointer\"\r\n              (click)=\"showPass()\"\r\n              class=\"p-2\"\r\n            >\r\n              <mat-icon>{{ show ? \"visibility\" : \"visibility_off\" }}</mat-icon>\r\n            </a>\r\n          </mat-form-field>\r\n          <div class=\"space-y-[10vh] 2xl:space-y-[40vh]\">\r\n            <button\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !loginForm.value.username || !loginForm.value.password\r\n              \"\r\n              id=\"boton2\"\r\n            >\r\n              Ingresar\r\n            </button>\r\n            <a mat-raised-button (click)=\"mostrarRegistro()\" id=\"boton\">\r\n              Registrar Usuario\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"carta col-span-1\" *ngIf=\"showDiv.Register\">\r\n      <div class=\"logo\">\r\n        <img\r\n          src=\"assets/3- ISOTIPO LINETEC (T con fondo) PNG.png\"\r\n          alt=\"\"\r\n          class=\"linetec_logo m-5 p-3\"\r\n        />\r\n        <h2 class=\"titulo\">Registro de usuario</h2>\r\n      </div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"registerForm\"\r\n        (ngSubmit)=\"[proceedRegistration(), registerForm.reset()]\"\r\n      >\r\n        <div class=\"flex flex-col p-5\">\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Nombre de usuario\"\r\n              formControlName=\"username\"\r\n            />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Nombre y apellido\"\r\n              formControlName=\"name\"\r\n            />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input matInput placeholder=\"Email\" formControlName=\"email\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"m-input\">\r\n            <input\r\n              [type]=\"pass\"\r\n              matInput\r\n              placeholder=\"Contraseña\"\r\n              formControlName=\"password\"\r\n            />\r\n            <a\r\n              matSuffix\r\n              style=\"cursor: pointer\"\r\n              (click)=\"showPass()\"\r\n              class=\"p-2\"\r\n            >\r\n              <mat-icon>{{ show ? \"visibility\" : \"visibility_off\" }}</mat-icon>\r\n            </a>\r\n          </mat-form-field>\r\n          <div class=\"m-input\">\r\n            <h2>REQUISITOS</h2>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                    !password.value || password.errors?.hasUpper\r\n                      ? ''\r\n                      : 'iconFill'\r\n                  \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n\r\n              <p\r\n                [ngClass]=\"\r\n                  !password.value || password.errors?.hasUpper\r\n                    ? ''\r\n                    : 'requisitos'\r\n                \"\r\n              >\r\n                Al menos una mayúscula\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"!password.value || password.errors?.['minlength'] ?  '' : 'iconFill'\"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n\r\n              <p\r\n                [ngClass]=\"!password.value || password.errors?.['minlength'] ?  '' : 'requisitos'\"\r\n              >\r\n                8 caracteres mínimo\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                    !password.value || password.errors?.hasSp ? '' : 'iconFill'\r\n                  \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n              <p\r\n                [ngClass]=\"\r\n                  !password.value || password.errors?.hasSp ? '' : 'requisitos'\r\n                \"\r\n              >\r\n                Al menos un caracter especial\r\n              </p>\r\n            </div>\r\n            <div class=\"flex justify-start\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                class=\"svg\"\r\n              >\r\n                <path\r\n                  [ngClass]=\"\r\n                    !password.value || password.errors?.hasNumber\r\n                      ? ''\r\n                      : 'iconFill'\r\n                  \"\r\n                  d=\"M10.8653 5.52533L11.8013 6.47533L7.93933 10.28C7.68133 10.538 7.342 10.6667 7.00133 10.6667C6.66067 10.6667 6.318 10.5367 6.05733 10.2767L4.20267 8.47933L5.13133 7.52133L6.99333 9.326L10.8653 5.52533ZM16 8C16 12.4113 12.4113 16 8 16C3.58867 16 0 12.4113 0 8C0 3.58867 3.58867 0 8 0C12.4113 0 16 3.58867 16 8ZM14.6667 8C14.6667 4.324 11.676 1.33333 8 1.33333C4.324 1.33333 1.33333 4.324 1.33333 8C1.33333 11.676 4.324 14.6667 8 14.6667C11.676 14.6667 14.6667 11.676 14.6667 8Z\"\r\n                  fill=\"#B1B2B4\"\r\n                />\r\n              </svg>\r\n              <p\r\n                [ngClass]=\"\r\n                  !password.value || password.errors?.hasNumber\r\n                    ? ''\r\n                    : 'requisitos'\r\n                \"\r\n              >\r\n                Al menos 1 número\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"flex flex-col justify-between space-y-6\">\r\n            <button\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                password.errors ||\r\n                !registerForm.value.username ||\r\n                !registerForm.value.password ||\r\n                !registerForm.value.name ||\r\n                !registerForm.value.email\r\n              \"\r\n              id=\"boton2\"\r\n            >\r\n              Enviar\r\n            </button>\r\n\r\n            <a (click)=\"mostrarLogin()\" id=\"volver\"> Volver </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.minLength(5)])\r\n    ),\r\n    name: this.builder.control('', Validators.required),\r\n    password: this.builder.control(\r\n      '',\r\n      Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(\r\n          '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{8,}'\r\n        ),\r\n      ])\r\n    ),\r\n    email: this.builder.control(\r\n      '',\r\n      Validators.compose([Validators.required, Validators.email])\r\n    ),\r\n    role: this.builder.control('64f1f60e918724a5f931d909'),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  proceedRegistration() {\r\n    if (this.registerform.valid) {\r\n      console.log(this.registerform.value);\r\n      this.service.Proceedregister(this.registerform.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else if (res.status == 200) {\r\n            this.toastr.success(\r\n              'Solicitar acceso con el administrador ',\r\n              'Registro exitoso'\r\n            );\r\n            this.router.navigate(['login']);\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.toastr.warning('error', error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Registro</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"proceedRegistration()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre de usuario</mat-label>\r\n          <input matInput formControlName=\"username\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input matInput formControlName=\"name\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Contraseña</mat-label>\r\n          <input type=\"password\" matInput formControlName=\"password\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput formControlName=\"email\" />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Enviar</button>\r\n        <a routerLink=\"/login\" mat-raised-button color=\"accent\"\r\n          >Volver a pantalla de ingreso</a\r\n        >\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Subscription } from 'rxjs';\r\nimport { CSVDato } from 'src/app/models/datos.model';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-tabla',\r\n  templateUrl: './tabla.component.html',\r\n  styleUrls: ['./tabla.component.css'],\r\n})\r\nexport class TablaComponent implements OnInit {\r\n  constructor(\r\n    private service: HttpService,\r\n    private spinnerService: SpinnerService,\r\n    private builder: FormBuilder\r\n  ) {}\r\n  tabla: any = {\r\n    titulo: 'Alerta de valores excedidos',\r\n  };\r\n  table: any = {\r\n    inicio: '',\r\n    final: '',\r\n    id_variable: '',\r\n  };\r\n  selectValue: any = null;\r\n  i: any = null;\r\n  exceedList: any = [];\r\n  dataSource: any;\r\n  listVariables: any = [];\r\n  notExceedList: any = [];\r\n  subscription!: Subscription;\r\n  csv: any = '';\r\n  valor: any;\r\n  range: any = [];\r\n  selectTime: any = [\r\n    {\r\n      option: '1h',\r\n      value: 3600000,\r\n      binSize: 1,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '3h',\r\n      value: 10800000,\r\n      binSize: 10,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '12h',\r\n      value: 43200000,\r\n      binSize: 5,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '1d',\r\n      value: 86400000,\r\n      binSize: 15,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '3d',\r\n      value: 259200000,\r\n      binSize: 1,\r\n      unit: 'hour',\r\n    },\r\n    {\r\n      option: '1w',\r\n      value: 604800000,\r\n      binSize: 6,\r\n      unit: 'hour',\r\n    },\r\n  ];\r\n  id_variable!: string;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  ngOnInit(): void {\r\n    this.getVariables();\r\n    this.valor = this.builder.group({\r\n      threshold: new FormControl<number>(25),\r\n    });\r\n\r\n    this.subscription = this.service.listaDatosInRange.subscribe((message) => {\r\n      this.exceedList = message;\r\n      console.log('lista excedida stream', this.exceedList);\r\n      // console.log('prueba filter: ', this.removeDuplicates(this.exceedList));\r\n      this.dataSource = new MatTableDataSource(this.exceedList);\r\n      if (this.exceedList.length != 0) {\r\n        this.spinnerService.detenerSpinner('tabla');\r\n      }\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n    this.subscription = this.service.rangeInfo.subscribe((message: any) => {\r\n      console.log('inicio', message[0], 'final', message[1]);\r\n      this.range = message;\r\n      this.getInRangeTabla(this.table);\r\n    });\r\n  }\r\n\r\n  removeDuplicates(data: any) {\r\n    const ids = data.map(\r\n      ({ cTime_stamp }: { cTime_stamp: any }) => cTime_stamp\r\n    );\r\n    const filtered = data.filter(\r\n      ({ cTime_stamp }: { cTime_stamp: any }, index: number) =>\r\n        ids.includes(cTime_stamp, index + 1)\r\n    );\r\n\r\n    return filtered;\r\n  }\r\n  downloadCSV() {\r\n    let csvList: CSVDato[];\r\n    csvList = this.exceedList.map((e: any) => ({\r\n      valor_lectura: e.valor_lectura,\r\n      tiempo_inicio: e.time_stamp,\r\n      tiempo_fin: e.cTime_stamp,\r\n      diferencia: e.time,\r\n    }));\r\n\r\n    for (let row = 0; row < csvList.length; row++) {\r\n      let keysAmount = Object.keys(csvList[row]).length;\r\n      let keysCounter = 0;\r\n\r\n      // If this is the first row, generate the headings\r\n      if (row === 0) {\r\n        // Loop each property of the object\r\n        for (let key in csvList[row]) {\r\n          // This is to not add a comma at the last cell\r\n          // The '\\n' adds a new line\r\n          this.csv += key + (keysCounter + 1 < keysAmount ? ',' : '\\r\\n');\r\n          keysCounter++;\r\n        }\r\n      } else {\r\n        for (let key in csvList[row]) {\r\n          this.csv +=\r\n            csvList[row][key] + (keysCounter + 1 < keysAmount ? ',' : '\\r\\n');\r\n          keysCounter++;\r\n        }\r\n      }\r\n\r\n      keysCounter = 0;\r\n    }\r\n    let link = document.createElement('a');\r\n    link.id = 'download-csv';\r\n    link.setAttribute(\r\n      'href',\r\n      'data:text/plain;charset=utf-8,' + encodeURIComponent(this.csv)\r\n    );\r\n    link.setAttribute('download', 'alertas_data.csv');\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  }\r\n\r\n  displayedColumns: string[] = [\r\n    'exceed_value',\r\n    'tiempo_inicio',\r\n    'tiempo_fin',\r\n    'diferencia',\r\n  ];\r\n\r\n  getInRangeTabla(tabla: any) {\r\n    this.spinnerService.llamarSpinner('tabla');\r\n    var inicio: any = this.range[0];\r\n    var final: any = this.range[1];\r\n    this.service\r\n      .getAllInRange(tabla.id_variable, inicio, final)\r\n      .subscribe((data) => {\r\n        this.exceedList = data['datos'].filter((x: any) => {\r\n          return x.valor_lectura > tabla.threshold;\r\n        });\r\n        this.notExceedList = data['datos'].filter((n: any) => {\r\n          return n.valor_lectura < tabla.threshold;\r\n        });\r\n        var notDuplicatedExceedList = this.removeDuplicates(this.exceedList);\r\n        var notDuplicatedNotExceedList = this.removeDuplicates(\r\n          this.notExceedList\r\n        );\r\n        console.log(\r\n          'exceed: ',\r\n          notDuplicatedExceedList,\r\n          'not exceed: ',\r\n          notDuplicatedNotExceedList\r\n        );\r\n        if (data['datos'].length == 0) {\r\n          this.spinnerService.detenerSpinner('tabla');\r\n          this.service.stream_DatosInRange([]);\r\n        }\r\n        this.spinnerService.detenerSpinner('tabla');\r\n        var result = this.notExceedListPusher(\r\n          notDuplicatedNotExceedList,\r\n          notDuplicatedExceedList\r\n        );\r\n        this.enviarDatos(result[0], result[1]);\r\n      });\r\n  }\r\n  formatTime(notExceed: number, exceed: number) {\r\n    var seconds = (notExceed - exceed) / 1000;\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const remainingSeconds = seconds % 60;\r\n\r\n    const formattedHours = String(hours).padStart(2, '0');\r\n    const formattedMinutes = String(minutes).padStart(2, '0');\r\n    const formattedSeconds = String(remainingSeconds).padStart(2, '0');\r\n\r\n    return `${formattedHours}H ${formattedMinutes}M ${formattedSeconds}S`;\r\n  }\r\n  formatDate(data: string) {\r\n    const date = new Date(data);\r\n    return (\r\n      [\r\n        date.getFullYear(),\r\n        this.padTo2Digits(date.getMonth() + 1),\r\n        this.padTo2Digits(date.getDate()),\r\n      ].join('-') +\r\n      ' ' +\r\n      [\r\n        this.padTo2Digits(date.getHours()),\r\n        this.padTo2Digits(date.getMinutes()),\r\n        this.padTo2Digits(date.getSeconds()),\r\n      ].join(':')\r\n    );\r\n  }\r\n  padTo2Digits(num: number) {\r\n    return num.toString().padStart(2, '0');\r\n  }\r\n  getVariables() {\r\n    this.service.getVariables().subscribe((data) => {\r\n      this.listVariables = data;\r\n      this.id_variable = this.listVariables[0]._id;\r\n    });\r\n  }\r\n  variableSelected(value: Event) {\r\n    this.id_variable = (value.target as HTMLSelectElement).value;\r\n    console.log('valor variable:', this.id_variable);\r\n  }\r\n  enviarDatos(notExceedList: any, ExceedList: any) {\r\n    console.log(\r\n      'exceed: ',\r\n      ExceedList.length,\r\n      'not exceed: ',\r\n      notExceedList.length\r\n    );\r\n    ExceedList.map((e: any, index: number) => {\r\n      e.time = this.formatTime(\r\n        new Date(\r\n          notExceedList[\r\n            index < notExceedList.length ? index : notExceedList.length - 1\r\n          ].time_stamp\r\n        ).getTime(),\r\n        new Date(e.time_stamp).getTime()\r\n      );\r\n      e.cTime_stamp = this.formatDate(\r\n        notExceedList[\r\n          index < notExceedList.length ? index : notExceedList.length - 1\r\n        ].time_stamp\r\n      );\r\n      e.time_stamp = this.formatDate(e.time_stamp);\r\n    });\r\n    this.service.stream_DatosInRange(ExceedList);\r\n  }\r\n\r\n  notExceedListPusher(notDuplicatedNotExceedList: any, exceedList: any) {\r\n    const notExceedList = [];\r\n    const ExceedList = [];\r\n    const resultado: any = [];\r\n    let j = 0;\r\n\r\n    //no funciona bien si el not exceeded list es mas grande hay que arreglarlo\r\n\r\n    for (let i = 0; i < exceedList.length; ) {\r\n      // console.log('i es: ', i);\r\n      if (\r\n        new Date(notDuplicatedNotExceedList[j].time_stamp).getTime() >\r\n        new Date(exceedList[i].time_stamp).getTime()\r\n      ) {\r\n        // console.log(\r\n        //   'exceed: ',\r\n        //   exceedList[i],\r\n        //   'not exceed: ',\r\n        //   notDuplicatedNotExceedList[j]\r\n        // );\r\n        notExceedList.push(notDuplicatedNotExceedList[j]);\r\n        ExceedList.push(exceedList[i]);\r\n        i++;\r\n      }\r\n      if (\r\n        j == notDuplicatedNotExceedList.length - 1 ||\r\n        i == exceedList.length - 1\r\n      ) {\r\n        resultado.push(notExceedList);\r\n        resultado.push(ExceedList);\r\n        return resultado;\r\n      } else if (\r\n        new Date(notDuplicatedNotExceedList[j].time_stamp).getTime() <\r\n        new Date(exceedList[i].time_stamp).getTime()\r\n      ) {\r\n        // console.log(\r\n        //   'exceed time stamp: ',\r\n        //   exceedList[i].time_stamp,\r\n        //   'not exceed time stamp: ',\r\n        //   notDuplicatedNotExceedList[j].time_stamp\r\n        // );\r\n        j++;\r\n        // console.log('j es: ', j);\r\n      }\r\n    }\r\n\r\n    return resultado;\r\n  }\r\n}\r\n","<mat-card class=\"carta_tabla\">\r\n  <div>\r\n    <app-toolbar\r\n      [value]=\"tabla\"\r\n      [selectTime]=\"selectTime\"\r\n      [indice]=\"i\"\r\n      [tabla]=\"table\"\r\n    ></app-toolbar>\r\n  </div>\r\n\r\n  <mat-card-content>\r\n    <mat-table matSort [dataSource]=\"dataSource\">\r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"exceed_value\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef>\r\n          Valor Excedido\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.valor_lectura.toFixed(2) }}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"tiempo_inicio\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef>\r\n          Tiempo de inicio\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.time_stamp }}\r\n        </mat-cell>\r\n      </ng-container>\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"tiempo_fin\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef\r\n          >Tiempo de fin</mat-header-cell\r\n        >\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.cTime_stamp }}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"diferencia\">\r\n        <mat-header-cell mat-sort-header *matHeaderCellDef>\r\n          Diferencia en tiempo\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">{{ element.time }}</mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[5, 10, 20]\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of periodic elements\"\r\n    >\r\n    </mat-paginator>\r\n    <ngx-spinner\r\n      bdColor=\"rgba(51,51,51,0.8)\"\r\n      size=\"medium\"\r\n      color=\"#fff\"\r\n      type=\"ball-spin-clockwise\"\r\n      [fullScreen]=\"false\"\r\n      name=\"tabla\"\r\n    >\r\n    </ngx-spinner>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { Subscription, catchError } from 'rxjs';\r\nimport { ChartGeneratorService } from 'src/app/service/chart-generator.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { SpinnerService } from 'src/app/service/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css'],\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n  subscription!: Subscription;\r\n  chartList: any = [];\r\n  interval: any = [];\r\n  range!: any;\r\n  rangeSub!: any;\r\n  listVariables: any;\r\n  valor: any;\r\n  selectTime2: any = [\r\n    {\r\n      option: '1h',\r\n      value: 3600000,\r\n      binSize: 1,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '3h',\r\n      value: 10800000,\r\n      binSize: 10,\r\n      unit: 'second',\r\n    },\r\n    {\r\n      option: '12h',\r\n      value: 43200000,\r\n      binSize: 5,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '1d',\r\n      value: 86400000,\r\n      binSize: 15,\r\n      unit: 'minute',\r\n    },\r\n    {\r\n      option: '3d',\r\n      value: 259200000,\r\n      binSize: 1,\r\n      unit: 'hour',\r\n    },\r\n    {\r\n      option: '1w',\r\n      value: 604800000,\r\n      binSize: 6,\r\n      unit: 'hour',\r\n    },\r\n    {\r\n      option: '1m',\r\n      binSize: 1,\r\n      unit: 'day',\r\n      value: 2419200000,\r\n    },\r\n  ];\r\n\r\n  @Input() value: any;\r\n  @Input() selectValue: any;\r\n  @Input() selectTime: any;\r\n  @Input() indice: any;\r\n  @Input() tabla: any;\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private spinnerService: SpinnerService,\r\n    private builder: FormBuilder,\r\n    private chartService: ChartGeneratorService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.range = this.builder.group({\r\n      start: new FormControl<Date | null>(null),\r\n      end: new FormControl<Date | null>(null),\r\n      granularidad: new FormControl<string>('day'),\r\n    });\r\n\r\n    this.interval = this.builder.group({\r\n      medida: new FormControl<String | null>('min'),\r\n      threshold: new FormControl<number>(25),\r\n    });\r\n    if (this.tabla) {\r\n      this.getVariables();\r\n    }\r\n    this.subscription = this.chartService.listaDeCharts.subscribe((data) => {\r\n      this.chartList = data;\r\n      console.log('toolbar chartList', this.chartList);\r\n      for (let i = 0; i < this.chartList.length; i++) {\r\n        this.setSelectTimeInterval(\r\n          {\r\n            option: '1h',\r\n            value: 3600000,\r\n            binSize: 1,\r\n            unit: 'second',\r\n          },\r\n          i\r\n        );\r\n      }\r\n    });\r\n    this.subscription = this.chartService.rangeInfo.subscribe(\r\n      (message: any) => {\r\n        this.rangeSub = message;\r\n      }\r\n    );\r\n  }\r\n\r\n  setValue(value: any, i: number) {\r\n    console.log('value toolbar:', value, 'indice: ', i);\r\n  }\r\n  setSelectValue(sValue: any, i: number) {\r\n    this.chartList[i].sValue = sValue;\r\n    var data = this.chartList[i];\r\n    data.value = sValue;\r\n    data.index = i;\r\n\r\n    this.chartService.streamChartIntervalInfo(data);\r\n    console.log('select value: ', this.chartList[i], 'indice: ', i);\r\n  }\r\n  setSelectTimeInterval(sTime: any, i: number, tabla?: any) {\r\n    this.chartList[i].inicio = null;\r\n    this.chartList[i].final = null;\r\n    tabla\r\n      ? (tabla.sTime = sTime.value)\r\n      : (this.chartList[i].sTime = sTime.value);\r\n    tabla ? (tabla.sInterval = sTime) : (this.chartList[i].sInterval = sTime);\r\n\r\n    console.log(\r\n      'select time: ',\r\n      tabla ? tabla : this.chartList[i],\r\n      'indice: ',\r\n      i\r\n    );\r\n  }\r\n\r\n  setInicioFinal(i: number, tabla?: any) {\r\n    tabla\r\n      ? (tabla.inicio = this.range.value.start._d?.getTime().toString())\r\n      : (this.chartList[i].inicio = this.range.value.start._d\r\n          ?.getTime()\r\n          .toString());\r\n    tabla\r\n      ? (tabla.final = this.range.value.end._d?.getTime().toString())\r\n      : (this.chartList[i].final = this.range.value.end._d\r\n          ?.getTime()\r\n          .toString());\r\n\r\n    console.log(\r\n      'inicio: ',\r\n      tabla ? tabla.inicio : this.chartList[i].inicio,\r\n      'final ',\r\n      tabla ? tabla.final : this.chartList[i].final,\r\n      'indice: ',\r\n      i\r\n    );\r\n    var difference =\r\n      parseInt(tabla ? tabla.final : this.chartList[i].final) -\r\n      parseInt(tabla ? tabla.inicio : this.chartList[i].inicio);\r\n    if (difference < this.selectTime[4].value) {\r\n      tabla\r\n        ? (tabla.sTime = this.selectTime2[3].value)\r\n        : (this.chartList[i].sTime = this.selectTime2[3].value);\r\n      tabla\r\n        ? (tabla.sInterval = this.selectTime2[3])\r\n        : (this.chartList[i].sInterval = this.selectTime2[3]);\r\n    } else if (difference < this.selectTime[5].value) {\r\n      tabla\r\n        ? (tabla.sTime = this.selectTime2[4].value)\r\n        : (this.chartList[i].sTime = this.selectTime2[4].value);\r\n      tabla\r\n        ? (tabla.sInterval = this.selectTime2[4])\r\n        : (this.chartList[i].sInterval = this.selectTime2[4]);\r\n    } else if (difference < this.selectTime[5].value * 3) {\r\n      tabla\r\n        ? (tabla.sTime = this.selectTime2[5].value)\r\n        : (this.chartList[i].sTime = this.selectTime2[5].value);\r\n      tabla\r\n        ? (tabla.sInterval = this.selectTime2[5])\r\n        : (this.chartList[i].sInterval = this.selectTime2[5]);\r\n    } else {\r\n      tabla\r\n        ? (tabla.sTime = this.selectTime2[6].value)\r\n        : (this.chartList[i].sTime = this.selectTime2[6].value);\r\n      tabla\r\n        ? (tabla.sInterval = this.selectTime2[6])\r\n        : (this.chartList[i].sInterval = this.selectTime2[6]);\r\n    }\r\n  }\r\n\r\n  getValuesByInterval(i: number, tabla?: any) {\r\n    if (tabla) {\r\n      this._httpService.set_Inicio_Final(tabla.inicio, tabla.final);\r\n      return console.log(\r\n        `tabla: ${JSON.stringify(tabla)}, inicio: ${tabla.inicio}, final: ${\r\n          tabla.final\r\n        }`\r\n      );\r\n    }\r\n    const currentDateObj = new Date();\r\n    const final = this.chartList[i].final\r\n      ? this.chartList[i].final\r\n      : currentDateObj.getTime();\r\n    const millis = this.chartList[i].sTime;\r\n    const inicio = this.chartList[i].final\r\n      ? this.chartList[i].inicio\r\n      : final - millis;\r\n    console.log('inicio: ', inicio, 'final: ', final);\r\n\r\n    this.spinnerService.llamarSpinner(`grafico${i}`);\r\n    this._httpService\r\n      .getInterval(\r\n        inicio,\r\n        final,\r\n        this.chartList[i].sInterval.unit,\r\n        this.chartList[i].sInterval.binSize\r\n      )\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      )\r\n      .subscribe((data) => {\r\n        data.index = i;\r\n        data.value = this.interval.value.medida;\r\n        const datosFilter = data.datos.filter((e: any) => {\r\n          return e._id == this.chartList[i].variable;\r\n        });\r\n        data.datos = datosFilter;\r\n        console.log(\r\n          'filter data: ',\r\n          data,\r\n          'medida: ',\r\n          this.interval.value.medida\r\n        );\r\n        this.chartList[i].datos = data.datos;\r\n        this.chartService.streamChartIntervalInfo(data);\r\n        this.spinnerService.detenerSpinner(`grafico${i}`);\r\n      });\r\n  }\r\n\r\n  getVariables() {\r\n    this._httpService.getVariables().subscribe((data) => {\r\n      this.listVariables = data;\r\n      this.tabla.id_variable = this.listVariables[0]._id;\r\n      this.tabla.threshold = this.interval.value.threshold;\r\n      console.log('tabla', this.tabla);\r\n    });\r\n  }\r\n\r\n  variableSelected(variable: any) {\r\n    this.tabla.id_variable = variable;\r\n    console.log('variable selected: ', this.tabla);\r\n  }\r\n\r\n  setThreshold() {\r\n    console.log('threshold', this.interval.value.threshold);\r\n    this.tabla.threshold = this.interval.value.threshold;\r\n  }\r\n}\r\n","<mat-menu [hasBackdrop]=\"true\" #menu=\"matMenu\" class=\"menu\">\r\n  <div\r\n    class=\"grid grid-cols-2 grid-flow-row sm:grid-cols-2 grid-row-2 gap-4 m-3\"\r\n    [formGroup]=\"range\"\r\n    (click)=\"$event.stopPropagation()\"\r\n  >\r\n    <div>\r\n      <h2 class=\"subtitulo\">Desde</h2>\r\n      <div class=\"d-input\">\r\n        <mat-datepicker-toggle [for]=\"startpicker\">\r\n          <mat-icon\r\n            svgIcon=\"calendario\"\r\n            class=\"calendario\"\r\n            matDatepickerToggleIcon\r\n          ></mat-icon>\r\n        </mat-datepicker-toggle>\r\n        <input\r\n          [matDatepicker]=\"startpicker\"\r\n          formControlName=\"start\"\r\n          class=\"input-field\"\r\n          type=\"date\"\r\n        />\r\n      </div>\r\n      <mat-datepicker #startpicker></mat-datepicker>\r\n    </div>\r\n    <div>\r\n      <h2 class=\"subtitulo\">Hasta</h2>\r\n      <div class=\"d-input\">\r\n        <mat-datepicker-toggle [for]=\"endpicker\">\r\n          <mat-icon\r\n            svgIcon=\"calendario\"\r\n            class=\"calendario\"\r\n            matDatepickerToggleIcon\r\n          ></mat-icon>\r\n        </mat-datepicker-toggle>\r\n        <input\r\n          formControlName=\"end\"\r\n          [matDatepicker]=\"endpicker\"\r\n          class=\"input-field\"\r\n          type=\"date\"\r\n          (dateChange)=\"\r\n            [setInicioFinal(indice, tabla), getValuesByInterval(indice, tabla)]\r\n          \"\r\n        />\r\n      </div>\r\n      <mat-datepicker #endpicker></mat-datepicker>\r\n    </div>\r\n    <div class=\"col-span-2 row-start-2\"></div>\r\n  </div>\r\n</mat-menu>\r\n<mat-card-header\r\n  [formGroup]=\"interval\"\r\n  class=\"grid justify-content-stretch grid-cols-1 grid-row-3 sm:grid-cols-2 grid-rows-2\"\r\n>\r\n  <mat-card-title>\r\n    <h2 class=\"titulo col-span-2\">{{ value.titulo }}</h2>\r\n  </mat-card-title>\r\n\r\n  <div *ngIf=\"!tabla\" class=\"flex flex-row mr-5 sm:row-start-2\">\r\n    <div class=\"d-input\">\r\n      <select\r\n        class=\"input-field\"\r\n        formControlName=\"medida\"\r\n        #selectMedida\r\n        (change)=\"[setSelectValue(selectMedida.value, indice)]\"\r\n      >\r\n        <option *ngFor=\"let valor of selectValue\" value=\"{{ valor.value }}\">\r\n          {{ valor.option }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"d-input flex flex-row mr-5 sm:row-start-2\" *ngIf=\"tabla\">\r\n    <input\r\n      id=\"valor_limite\"\r\n      class=\"input-field\"\r\n      placeholder=\"Elegir valor limite\"\r\n      (change)=\"setThreshold()\"\r\n      formControlName=\"threshold\"\r\n    />\r\n  </div>\r\n\r\n  <div class=\"d-input lex flex-row mr-5 sm:row-start-2\" *ngIf=\"tabla\">\r\n    <select\r\n      id=\"select_variable\"\r\n      class=\"input-field\"\r\n      #selectVariable\r\n      (change)=\"variableSelected(selectVariable.value)\"\r\n    >\r\n      <option value=\"null\">Elegir variable</option>\r\n      <option *ngFor=\"let variable of listVariables\" value=\"{{ variable._id }}\">\r\n        {{ variable.nombre }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n\r\n  <div class=\"sm:row-start-2\" [ngClass]=\"value ? '' : 'col-span-2'\">\r\n    <mat-button-toggle-group>\r\n      <mat-button-toggle\r\n        *ngFor=\"let time of selectTime\"\r\n        [value]=\"time\"\r\n        (click)=\"\r\n          [\r\n            setSelectTimeInterval(time, indice, tabla),\r\n            getValuesByInterval(indice, tabla)\r\n          ]\r\n        \"\r\n      >\r\n        {{ time.option }}\r\n      </mat-button-toggle>\r\n      <mat-button-toggle [matMenuTriggerFor]=\"menu\">\r\n        <mat-icon\r\n          svgIcon=\"calendario\"\r\n          class=\"calendario\"\r\n          iconPositionEnd\r\n        ></mat-icon>\r\n      </mat-button-toggle>\r\n    </mat-button-toggle-group>\r\n  </div>\r\n</mat-card-header>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-updatepopup',\r\n  templateUrl: './updatepopup.component.html',\r\n  styleUrls: ['./updatepopup.component.css'],\r\n})\r\nexport class UpdatepopupComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private service: AuthService,\r\n    private toastr: ToastrService,\r\n    private dialog: MatDialogRef<UpdatepopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  editData: any;\r\n\r\n  ngOnInit(): void {\r\n    this.service.GetAllRoles().subscribe((res) => {\r\n      console.log('roles', res);\r\n      this.rolelist = res;\r\n    });\r\n    if (this.data.username != null && this.data.username != '') {\r\n      this.service.GetById(this.data.username).subscribe((res) => {\r\n        this.editData = res;\r\n        this.registerform.setValue({\r\n          username: this.editData.username,\r\n          name: this.editData.name,\r\n          password: this.editData.password,\r\n          email: this.editData.email,\r\n          role: this.editData.role,\r\n          isActive: this.editData.isActive,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  rolelist: any;\r\n  registerform = this.builder.group({\r\n    username: this.builder.control(''),\r\n    name: this.builder.control(''),\r\n    password: this.builder.control(''),\r\n    email: this.builder.control(''),\r\n    role: this.builder.control('', Validators.required),\r\n    isActive: this.builder.control(false),\r\n  });\r\n\r\n  updateUser() {\r\n    if (this.registerform.valid) {\r\n      this.service\r\n        .UpdateUser(this.registerform.value.username, this.registerform.value)\r\n        .subscribe((res) => {\r\n          this.toastr.success('Updated successfully');\r\n          this.dialog.close();\r\n        });\r\n    } else {\r\n      this.toastr.warning('Please select a role');\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <h2>Update User</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form\r\n      class=\"example-form\"\r\n      [formGroup]=\"registerform\"\r\n      (ngSubmit)=\"updateUser()\"\r\n    >\r\n      <div class=\"flex flex-col\">\r\n        <mat-form-field class=\"\">\r\n          <mat-label>Role</mat-label>\r\n          <mat-select formControlName=\"role\">\r\n            <mat-option value=\"\">Select Role </mat-option>\r\n            <mat-option *ngFor=\"let item of rolelist\" [value]=\"item._id\">\r\n              {{ item.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-checkbox formControlName=\"isActive\">Is Active? </mat-checkbox>\r\n      </div>\r\n      <div class=\"m-1\">\r\n        <button class=\"m-3\" mat-raised-button color=\"primary\">Update</button>\r\n        <a mat-dialog-close mat-raised-button color=\"accent\">Close</a>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-userlisting',\r\n  templateUrl: './userlisting.component.html',\r\n  styleUrls: ['./userlisting.component.css'],\r\n})\r\nexport class UserlistingComponent implements OnInit {\r\n  constructor(private service: AuthService, private toastr: ToastrService) {}\r\n  ngOnInit(): void {\r\n    this.LoadUser();\r\n  }\r\n  userList: any;\r\n  dataSource: any;\r\n  editable: boolean = false;\r\n  ulist: any = [];\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  LoadUser() {\r\n    this.service.GetAll().subscribe((res) => {\r\n      this.userList = res;\r\n      console.log('userlist: ', this.userList);\r\n      this.dataSource = new MatTableDataSource(this.userList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n    this.service.getUser();\r\n  }\r\n\r\n  displayedColumns: string[] = ['username', 'name', 'email', 'role', 'status'];\r\n\r\n  editableToggle() {\r\n    this.editable = !this.editable;\r\n  }\r\n\r\n  guardarCambios(data: any) {\r\n    var dataToUpdate: any = [];\r\n    var ulist: any = [];\r\n    console.log('user List: ', this.ulist);\r\n    this.service.GetAll().subscribe((res) => {\r\n      ulist = res;\r\n      for (let i = 0; i < ulist.length; i++) {\r\n        console.log(\r\n          'user List: ',\r\n          ulist[i].isActive,\r\n          'updated data: ',\r\n          data[i].isActive,\r\n          'i es : ',\r\n          i\r\n        );\r\n        if (\r\n          ulist[i].isActive != data[i].isActive ||\r\n          ulist[i].role._id != data[i].role._id\r\n        ) {\r\n          console.log(data[i]);\r\n          this.service\r\n            .UpdateUser(data[i].username, data[i])\r\n            .subscribe((res) => {\r\n              console.log(res);\r\n              this.toastr.success('¡Cambios Guardados con exito!', '', {\r\n                toastClass: 'yourclass ngx-toastr',\r\n                positionClass: 'toast-bottom-center',\r\n              });\r\n            });\r\n        }\r\n        if (i == this.userList.length - 1) {\r\n          return;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"fondo\">\r\n  <mat-card-header class=\"\">\r\n    <div class=\"grid grid-cols-2 header\">\r\n      <h2 class=\"titulo justify-self-start\">Listado de usuarios</h2>\r\n\r\n      <a\r\n        (click)=\"editableToggle()\"\r\n        mat-raised-button\r\n        class=\"boton justify-self-end\"\r\n      >\r\n        <mat-icon id=\"icon\"> edit_note </mat-icon>\r\n        {{ editable ? \"Cancelar\" : \"Editar Listado\" }}\r\n      </a>\r\n    </div>\r\n  </mat-card-header>\r\n\r\n  <mat-card-content>\r\n    <div class=\"card\">\r\n      <mat-table matSort [dataSource]=\"dataSource\" class=\"mb-3\">\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Nombre</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">{{ element.name }}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- username Column -->\r\n        <ng-container matColumnDef=\"username\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Nombre de usuario</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">{{ element.username }}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- email Column -->\r\n        <ng-container matColumnDef=\"email\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Email</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">{{ element.email }}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Status Column -->\r\n        <ng-container matColumnDef=\"status\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Estado</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <mat-select\r\n              [ngClass]=\"editable ? '' : 'select'\"\r\n              [style]=\"\r\n                element.isActive === 'active'\r\n                  ? 'color:#52b48f'\r\n                  : 'color: #c82d3b'\r\n              \"\r\n              [disabled]=\"!editable\"\r\n              [(value)]=\"element.isActive\"\r\n            >\r\n              <mat-option style=\"color: #c82d3b\" value=\"inactive\"\r\n                >Inactivo</mat-option\r\n              >\r\n              <mat-option style=\"color: #52b48f\" value=\"active\"\r\n                >Activo</mat-option\r\n              >\r\n            </mat-select>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- role Column -->\r\n        <ng-container matColumnDef=\"role\">\r\n          <mat-header-cell mat-sort-header *matHeaderCellDef\r\n            >Rol</mat-header-cell\r\n          >\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <mat-select\r\n              [ngClass]=\"editable ? '' : 'select'\"\r\n              [disabled]=\"!editable\"\r\n              [(value)]=\"element.role._id\"\r\n            >\r\n              <mat-option value=\"64f1f60e918724a5f931d909\">\r\n                Usuario\r\n              </mat-option>\r\n              <mat-option value=\"64d3cdd575d7a2df083079bd\">\r\n                Administrador\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n      </mat-table>\r\n      <div class=\"grid grid-cols-1\">\r\n        <a\r\n          (click)=\"guardarCambios(dataSource._data._value)\"\r\n          class=\"boton justify-self-end\"\r\n          mat-raised-button\r\n          >Guardar Cambios</a\r\n        >\r\n      </div>\r\n      <mat-paginator\r\n        [pageSizeOptions]=\"[5, 10, 20]\"\r\n        showFirstLastButtons\r\n        aria-label=\"Select page of periodic elements\"\r\n      >\r\n      </mat-paginator>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthService } from './service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  rtoken_url = environment.API_URL_RTOKEN;\r\n  rBody = {\r\n    token: sessionStorage.getItem('rtoken')?.toString(),\r\n    user: sessionStorage.getItem('username')?.toString(),\r\n  };\r\n  resData: any;\r\n  timeout: any;\r\n  token: any;\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  refreshToken(): void {\r\n    this.authService.postForm(this.rtoken_url, this.rBody).subscribe((res) => {\r\n      this.resData = res.body;\r\n      console.log(\r\n        'refresh token: ',\r\n        this.rBody,\r\n        'access Token: ',\r\n        this.resData\r\n      );\r\n      console.log('status code: ', res.status);\r\n      this.token = this.resData.accessToken;\r\n      sessionStorage.setItem('token', this.resData.accessToken);\r\n      sessionStorage.setItem('rtoken', this.resData.refreshToken);\r\n      this.timeout =\r\n        this.jwtHelper.getTokenExpirationDate(this.token)!.valueOf() -\r\n        new Date().valueOf();\r\n      this.authService.expirationCounter(this.timeout);\r\n      if (res.status == 200) {\r\n        this.toastr.success('sesion extendida');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Sesion a punto de exipirar</h1>\r\n<div mat-dialog-content>\r\n  <p>Desea continuar con su sesion?</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No</button>\r\n  <button\r\n    class=\"m-3\"\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    mat-button\r\n    (click)=\"refreshToken()\"\r\n    [mat-dialog-close]\r\n    cdkFocusInitial\r\n  >\r\n    De acuerdo\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n@Component({\r\n  selector: 'app-departamentos',\r\n  templateUrl: './departamentos.component.html',\r\n  styleUrls: ['./departamentos.component.css'],\r\n})\r\nexport class DepartamentosComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listProvincias: any;\r\n  listDepartamentos: any;\r\n  apiDepartamentos = environment.API_URL_ARGENTINA_DEPARTAMENTOS; //hay que cambiar la variable\r\n  apiLocalidades = environment.API_URL_ARGENTINA_LOCALIDADES; //hay que cambiar la variable\r\n  apiProvincias = environment.API_URL_PROVINCIAS;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  isOptional = true;\r\n  id_provincia!: string;\r\n  id_departamento!: string;\r\n  departamentoForm!: FormGroup;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.departamentoForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.departamentoSelected.subscribe(\r\n      (message) => (this.id_departamento = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n    this.subscription2 = this.service.listDepartamentos.subscribe(\r\n      (message) => (this.listDepartamentos = message)\r\n    );\r\n  }\r\n  //no esta en uso\r\n\r\n  setDepartamento(id: any) {\r\n    console.log('set Departamento', id);\r\n    this.service.changeMessage(id);\r\n    this.service.departamentoSelectedSource.next(id);\r\n\r\n    this.GetLocalidadesByDepartamento();\r\n  }\r\n\r\n  GetLocalidadesByDepartamento() {\r\n    this.service\r\n      .getForm(\r\n        this.apiLocalidades +\r\n          this.id_provincia +\r\n          `&departamento=${this.id_departamento}&orden=nombre&aplanar=true&campos=departamento.nombre&max=600&exacto=true`\r\n      )\r\n      .subscribe((res: any) => {\r\n        console.log('Departamento-form get localidades', res.localidades);\r\n        let localidadesUnicas = this.removeDuplicates(res.localidades);\r\n        console.log('localidades unicas: ', localidadesUnicas);\r\n        this.service.streamLocalidades_DepartamentoSelected(localidadesUnicas);\r\n      });\r\n  }\r\n  removeDuplicates(data: any) {\r\n    const seen = new Set();\r\n    const filteredArr = data.filter((el: any) => {\r\n      const duplicate = seen.has(el.nombre);\r\n      seen.add(el.nombre);\r\n      return !duplicate;\r\n    });\r\n    return filteredArr;\r\n  }\r\n}\r\n// https://apis.datos.gob.ar/georef/api/localidades?provincia=${provincia}&departamento=${departamento}&aplanar=true&campos=basico&max=100&exacto=true\r\n","<div class=\"carta flex flex-col p-3\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Departamentos/Partidos/Comunas </mat-label>\r\n    <mat-select [disabled]=\"!id_provincia\">\r\n      <mat-option\r\n        *ngFor=\"let departamento of listDepartamentos\"\r\n        [value]=\"departamento.nombre\"\r\n        (click)=\"[setDepartamento(departamento.nombre)]\"\r\n      >\r\n        <p>{{ departamento.nombre }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-empresa-form',\r\n  templateUrl: './empresa-form.component.html',\r\n  styleUrls: ['./empresa-form.component.css'],\r\n})\r\nexport class EmpresaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listLocalidades: any;\r\n  listEmpresas: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlantas = environment.API_URL_PLANTA;\r\n  isOptional = true;\r\n  id_localidad!: string;\r\n  id_empresa!: string;\r\n  empresaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.empresaForm = this.builder.group({\r\n      razon_social: this.builder.control('', Validators.required),\r\n      nombre_fantasia: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n      rubro: this.builder.control('', Validators.required),\r\n      piso: this.builder.control(''),\r\n      deptartamento: this.builder.control(''),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.listEmpresas.subscribe(\r\n      (message) => (this.listEmpresas = message)\r\n    );\r\n  }\r\n\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createEmpresa() {\r\n    if (this.empresaForm.valid) {\r\n      console.log(this.empresaForm.value);\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        razon_social: this.empresaForm.value.razon_social,\r\n        nombre_fantasia: this.empresaForm.value.nombre_fantasia,\r\n        calle: this.empresaForm.value.calle,\r\n        altura: this.empresaForm.value.altura,\r\n        piso: this.empresaForm.value.piso,\r\n        deptartamento: this.empresaForm.value.deptartamento,\r\n        rubro: this.empresaForm.value.rubro,\r\n      };\r\n      this.service.postForm(this.apiEmpresas, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Empresa registrada corectamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service\r\n              .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n              .subscribe((res: any) => {\r\n                console.log('empresas res after crear: ', res);\r\n                this.listEmpresas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarEmpresa(id: string) {\r\n    console.log(this.apiEmpresas + id);\r\n    this.service.deleteForm(this.apiEmpresas, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Empresa borrada correctamente');\r\n          this.GetAllEmpresas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setEmpresa(id: any) {\r\n    console.log('set empresa', id);\r\n    this.id_empresa = id;\r\n    this.service.changeMessage(id);\r\n    this.service.empresaSelectedSource.next(id);\r\n    this.GetPlantasByEmpresas();\r\n  }\r\n\r\n  GetPlantasByEmpresas() {\r\n    this.service\r\n      .getForm(this.apiPlantas + this.id_empresa)\r\n      .subscribe((res: any) => {\r\n        console.log('empresa get plantas', res);\r\n        this.service.streamPlantas_EmpresaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir una empresa</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Lista De Empresas</mat-label>\r\n\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let empresa of listEmpresas\"\r\n            [value]=\"empresa._id\"\r\n            (click)=\"[setEmpresa(empresa._id)]\"\r\n          >\r\n            <p>{{ empresa.nombre_fantasia }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header>\r\n    <h2 class=\"titulo\">Ingresar nueva empresa</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <form\r\n        [formGroup]=\"empresaForm\"\r\n        (ngSubmit)=\"createEmpresa()\"\r\n        (submit)=\"empresaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-6 gap-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Razon Social</mat-label>\r\n              <input class=\"d-input\" matInput formControlName=\"razon_social\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 row-start-2\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre Fantasia</mat-label>\r\n              <input matInput formControlName=\"nombre_fantasia\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 row-start-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row-start-4\">\r\n            <mat-form-field>\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row-start-4\">\r\n            <mat-form-field>\r\n              <mat-label>Piso</mat-label>\r\n              <input matInput formControlName=\"piso\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row-start-4\">\r\n            <mat-form-field>\r\n              <mat-label>Deptartamento</mat-label>\r\n              <input matInput formControlName=\"deptartamento\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Rubro</mat-label>\r\n              <input matInput formControlName=\"rubro\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !empresaForm.value.razon_social ||\r\n                !empresaForm.value.nombre_fantasia ||\r\n                !empresaForm.value.calle ||\r\n                !empresaForm.value.altura ||\r\n                !empresaForm.value.rubro\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-empresa-planta-form',\r\n  templateUrl: './empresa-planta-form.component.html',\r\n  styleUrls: ['./empresa-planta-form.component.css'],\r\n})\r\nexport class EmpresaPlantaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listEmpresas: any;\r\n  listLocalidades: any;\r\n  listPlantas: any;\r\n  id_empresa!: string;\r\n  id_localidad!: string;\r\n  id_planta!: string;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  isOptional = true;\r\n  plantaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllEmpresas();\r\n    this.plantaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      calle: this.builder.control('', Validators.required),\r\n      altura: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.listPlantas.subscribe(\r\n      (message) => (this.listPlantas = message)\r\n    );\r\n    this.subscription = this.service.empresaSelected.subscribe(\r\n      (message) => (this.id_empresa = message)\r\n    );\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n  }\r\n\r\n  GetAllEmpresas() {\r\n    this.service.getForm(this.apiEmpresas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listEmpresas = res['datos'];\r\n    });\r\n  }\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createPlanta() {\r\n    if (this.plantaForm.valid) {\r\n      let body = {\r\n        id_localidad: this.id_localidad,\r\n        id_empresa: this.id_empresa,\r\n        nombre: this.plantaForm.value.nombre,\r\n        calle: this.plantaForm.value.calle,\r\n        altura: this.plantaForm.value.altura,\r\n      };\r\n      console.log(this.plantaForm.value);\r\n      this.service.postForm(this.apiPlanta, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error.message);\r\n          } else {\r\n            this.toastr.success('Planta registrada corectamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service\r\n              .getForm(this.apiPlanta + this.id_empresa)\r\n              .subscribe((res: any) => {\r\n                this.listPlantas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarPlanta(id: string) {\r\n    console.log(this.apiPlanta + id);\r\n    this.service.deleteForm(this.apiPlanta, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Planta borrada correctamente');\r\n          this.GetAllPlantas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setPlanta(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_planta = id;\r\n    this.service.plantaSelectedSource.next(id);\r\n    this.GetLineaByPlanta();\r\n  }\r\n\r\n  GetLineaByPlanta() {\r\n    this.service\r\n      .getForm(this.apiLinea + this.id_planta)\r\n      .subscribe((res: any) => {\r\n        console.log('planta get lineas', res);\r\n        this.service.streamLinea_PlantaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir una planta</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-form-field>\r\n        <mat-label>Elegir una planta</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let planta of listPlantas\"\r\n            [value]=\"planta._id\"\r\n            (click)=\"[setPlanta(planta._id, planta.nombre)]\"\r\n          >\r\n            <p>{{ planta.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar nueva planta</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <form\r\n        [formGroup]=\"plantaForm\"\r\n        (ngSubmit)=\"createPlanta()\"\r\n        (submit)=\"plantaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Calle</mat-label>\r\n              <input matInput formControlName=\"calle\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Altura</mat-label>\r\n              <input matInput formControlName=\"altura\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !plantaForm.value.nombre ||\r\n                !plantaForm.value.calle ||\r\n                !plantaForm.value.altura\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-linea-produccion-form',\r\n  templateUrl: './linea-produccion-form.component.html',\r\n  styleUrls: ['./linea-produccion-form.component.css'],\r\n})\r\nexport class LineaProduccionFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPlantas: any;\r\n  listLineas: any;\r\n  id_empresa_planta!: string;\r\n  id_linea!: string;\r\n  apiPlanta = environment.API_URL_PLANTA;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  lineaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPlantas();\r\n    this.lineaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n      identificador: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.listLineas.subscribe(\r\n      (message) => (this.listLineas = message)\r\n    );\r\n    this.subscription = this.service.plantaSelected.subscribe(\r\n      (message) => (this.id_empresa_planta = message)\r\n    );\r\n  }\r\n\r\n  GetAllPlantas() {\r\n    this.service.getForm(this.apiPlanta).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listPlantas = res['datos'];\r\n    });\r\n  }\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLinea() {\r\n    if (this.lineaForm.valid) {\r\n      console.log(this.lineaForm.value);\r\n      let body = {\r\n        id_empresa_planta: this.id_empresa_planta,\r\n        nombre: this.lineaForm.value.nombre,\r\n        descripcion: this.lineaForm.value.descripcion,\r\n        identificador: this.lineaForm.value.identificador,\r\n      };\r\n      this.service.postForm(this.apiLinea, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success(\r\n              'Linea de produccion registrada corectamente',\r\n              '',\r\n              {\r\n                toastClass: 'yourclass ngx-toastr',\r\n                positionClass: 'toast-bottom-center',\r\n              }\r\n            );\r\n            this.service\r\n              .getForm(this.apiLinea + this.id_empresa_planta)\r\n              .subscribe((res: any) => {\r\n                this.listLineas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLineaProduccion(id: string) {\r\n    console.log(this.apiLinea + id);\r\n    this.service.deleteForm(this.apiLinea, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Linea de produccion borrada correctamente');\r\n          this.GetAllLineas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLinea(id: any, nombre: any) {\r\n    console.log('set linea', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.id_linea = id;\r\n    this.service.lineaSelectedSource.next(id);\r\n    this.GetMaquinaByLinea();\r\n  }\r\n\r\n  GetMaquinaByLinea() {\r\n    this.service\r\n      .getForm(this.apiMaquina + this.id_linea)\r\n      .subscribe((res: any) => {\r\n        console.log('linea get maquinas', res);\r\n        this.service.streamMaquinas_LineaSelected(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Elegir una línea de producción</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-form-field>\r\n        <mat-label>Elegir una Linea</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let linea of listLineas\"\r\n            [value]=\"linea._id\"\r\n            (click)=\"[setLinea(linea._id, linea.nombre)]\"\r\n          >\r\n            <p>{{ linea.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar nueva línea</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"lineaForm\"\r\n        (ngSubmit)=\"createLinea()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>identificador</mat-label>\r\n              <input matInput formControlName=\"identificador\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !lineaForm.value.nombre ||\r\n                !lineaForm.value.descripcion ||\r\n                !lineaForm.value.identificador\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-localidad-form',\r\n  templateUrl: './localidad-form.component.html',\r\n  styleUrls: ['./localidad-form.component.css'],\r\n})\r\nexport class LocalidadFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listProvincias: any;\r\n  listLocalidades: any;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiProvincias = environment.API_URL_PROVINCIAS;\r\n  apiEmpresas = environment.API_URL_EMPRESAS;\r\n  isOptional = true;\r\n  id_provincia!: string;\r\n  id_localidad!: string;\r\n  id_departamento!: string;\r\n  localidadForm!: FormGroup;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.localidadForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.localidadSelected.subscribe(\r\n      (message) => (this.id_localidad = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n    this.subscription = this.service.departamentoSelected.subscribe(\r\n      (message) => (this.id_departamento = message)\r\n    );\r\n    this.subscription2 = this.service.listLocalidades.subscribe(\r\n      (message) => (this.listLocalidades = message)\r\n    );\r\n  }\r\n  //no esta en uso\r\n  GetAllLocalidades() {\r\n    this.service.getForm(this.apiLocalidad).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLocalidades = res['datos'];\r\n    });\r\n  }\r\n\r\n  createLocalidad() {\r\n    if (this.localidadForm.valid) {\r\n      console.log(this.localidadForm.value);\r\n      let body = {\r\n        nombre: this.localidadForm.value.nombre,\r\n        id_provincia: this.id_provincia,\r\n      };\r\n      this.service.postForm(this.apiLocalidad, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Localidad registrada correctamente');\r\n            this.service\r\n              .getForm(this.apiLocalidad + this.id_provincia)\r\n              .subscribe((res: any) => {\r\n                this.listLocalidades = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarLocalidad(id: string) {\r\n    console.log(this.apiLocalidad + id);\r\n    this.service.deleteForm(this.apiLocalidad, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Localidad borrada correctamente');\r\n          this.GetAllLocalidades();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLocalidad(id: any) {\r\n    console.log('set localidad', id);\r\n    this.service.changeMessage(id);\r\n    this.service.localidadSelectedSource.next(id);\r\n\r\n    this.GetEmpresasByLocalidad();\r\n  }\r\n\r\n  GetEmpresasByLocalidad() {\r\n    this.service\r\n      .getForm(this.apiEmpresas + 'localidad/' + this.id_localidad)\r\n      .subscribe((res: any) => {\r\n        console.log('Localidad-form get empresas', res);\r\n        this.service.streamEmpresas_LocalidadSelected(res);\r\n      });\r\n  }\r\n}\r\n","<div class=\"carta flex flex-col p-3\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Localidad </mat-label>\r\n    <mat-select [disabled]=\"!id_departamento\">\r\n      <mat-option\r\n        *ngFor=\"let localidad of listLocalidades\"\r\n        [value]=\"localidad.nombre ? localidad.nombre : localidad\"\r\n        (click)=\"\r\n          [setLocalidad(localidad.nombre ? localidad.nombre : localidad)]\r\n        \"\r\n      >\r\n        <p>{{ localidad.nombre ? localidad.nombre : localidad }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-maquina-form',\r\n  templateUrl: './maquina-form.component.html',\r\n  styleUrls: ['./maquina-form.component.css'],\r\n})\r\nexport class MaquinaFormComponent implements OnInit {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listLineas: any;\r\n  listTipoMaquina: any;\r\n  listMaquinas: any;\r\n  message: any;\r\n  id_linea_produccion!: string;\r\n  id_tipo_maquina!: string;\r\n  apiLinea = environment.API_URL_LINEA_PRODUCCION;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  apiMaquina = environment.API_URL_MAQUINA;\r\n  isOptional = true;\r\n  maquinaForm!: FormGroup;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllLineas();\r\n    this.GetAllTipos();\r\n\r\n    this.maquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      marca: this.builder.control('', Validators.required),\r\n      modelo: this.builder.control('', Validators.required),\r\n      detalle: this.builder.control('', Validators.required),\r\n    });\r\n\r\n    this.subscription = this.service.currentMessage.subscribe(\r\n      (message) => (this.message = message)\r\n    );\r\n    this.subscription = this.service.listMaquinas.subscribe(\r\n      (message) => (this.listMaquinas = message)\r\n    );\r\n    this.subscription = this.service.lineaSelected.subscribe(\r\n      (message) => (this.id_linea_produccion = message)\r\n    );\r\n    this.subscription = this.service.tipoMaquinaSelected.subscribe(\r\n      (message) => (this.id_tipo_maquina = message)\r\n    );\r\n  }\r\n\r\n  GetAllLineas() {\r\n    this.service.getForm(this.apiLinea).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLineas = res['datos'];\r\n    });\r\n  }\r\n  GetAllTipos() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquinas = res['datos'];\r\n    });\r\n  }\r\n\r\n  createMaquina() {\r\n    if (this.maquinaForm.valid) {\r\n      console.log(this.maquinaForm.value);\r\n      let body = {\r\n        id_linea_produccion: this.id_linea_produccion,\r\n        id_tipo_maquina: this.id_tipo_maquina,\r\n        nombre: this.maquinaForm.value.nombre,\r\n        marca: this.maquinaForm.value.marca,\r\n        modelo: this.maquinaForm.value.modelo,\r\n        detalle: this.maquinaForm.value.detalle,\r\n      };\r\n      this.service.postForm(this.apiMaquina, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Maquina registrada corectamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.service\r\n              .getForm(this.apiMaquina + this.id_linea_produccion)\r\n              .subscribe((res: any) => {\r\n                console.log('res maquina: ', res);\r\n                this.listMaquinas = res;\r\n              });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  borrarMaquina(id: string) {\r\n    console.log(this.apiMaquina + id);\r\n    this.service.deleteForm(this.apiMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Maquina borrada correctamente');\r\n          this.GetAllMaquinas();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setMaquina(id: any, nombre: any) {\r\n    console.log('set planta', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamMaquinaSelected(maquina_id: string) {\r\n    this.service.streamMaquinaSelected(maquina_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir una máquina</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir una maquina</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let maquina of listMaquinas\"\r\n            [value]=\"maquina._id\"\r\n            (click)=\"\r\n              [\r\n                setMaquina(maquina._id, maquina.nombre),\r\n                StreamMaquinaSelected(maquina._id)\r\n              ]\r\n            \"\r\n          >\r\n            <p>{{ maquina.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar una nueva máquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"maquinaForm\"\r\n        (ngSubmit)=\"createMaquina()\"\r\n        (submit)=\"maquinaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-5\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Marca</mat-label>\r\n              <input matInput formControlName=\"marca\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Modelo</mat-label>\r\n              <input matInput formControlName=\"modelo\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Detalle</mat-label>\r\n              <input matInput formControlName=\"detalle\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !maquinaForm.value.nombre ||\r\n                !maquinaForm.value.marca ||\r\n                !maquinaForm.value.modelo ||\r\n                !maquinaForm.value.detalle\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-pais-form',\r\n  templateUrl: './pais-form.component.html',\r\n  styleUrls: ['./pais-form.component.css'],\r\n})\r\nexport class PaisFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private _httpservice: HttpService\r\n  ) {}\r\n  listPaises: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiArgentinaPronvincias = environment.API_URL_ARGENTINA_PROVINCIAS;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  isOptional = true;\r\n  paisForm!: FormGroup;\r\n  nombre_pais!: string;\r\n  message2!: any;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n  completed: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllPaises();\r\n    this.paisForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.nombre_pais = message)\r\n    );\r\n  }\r\n\r\n  GetAllPaises() {\r\n    this._httpservice.httpGet(this.apiPaises).subscribe((res: any) => {\r\n      console.log('lista paises', res);\r\n      this.listPaises = res['data'];\r\n      this.setPais(this.listPaises[7].country);\r\n    });\r\n  }\r\n  setPais(id: any) {\r\n    console.log('set pais', id);\r\n    this.service.changeMessage(id);\r\n    this.service.paisSelectedSource.next(id);\r\n    this.GetProvinciasByPais();\r\n  }\r\n\r\n  GetProvinciasByPais() {\r\n    console.log('pais nombre', this.nombre_pais);\r\n    if (this.nombre_pais == 'Argentina') {\r\n      this._httpservice\r\n        .httpGet(this.apiArgentinaPronvincias)\r\n        .subscribe((res: any) => {\r\n          console.log('pais form get provincias', res.provincias);\r\n          this.service.streamProvincias_PaisSelected(res.provincias);\r\n        });\r\n    } else {\r\n      let body = {\r\n        country: this.nombre_pais,\r\n      };\r\n      this._httpservice\r\n        .httpPost(this.apiProvincia, body)\r\n        .subscribe((res: any) => {\r\n          console.log('pais form get provincias', res.body.data.states);\r\n          this.service.streamProvincias_PaisSelected(res.body.data.states);\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"carta mat-elevation-z flex flex-col p-3\" style=\"display: none\">\r\n  <mat-form-field>\r\n    <mat-label>País</mat-label>\r\n\r\n    <mat-select (selectionChange)=\"(!completed)\">\r\n      <mat-option\r\n        *ngFor=\"let pais of listPaises\"\r\n        [value]=\"pais.country\"\r\n        (click)=\"setPais(pais.country)\"\r\n      >\r\n        <p>{{ pais.country }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-proceso-form',\r\n  templateUrl: './proceso-form.component.html',\r\n  styleUrls: ['./proceso-form.component.css'],\r\n})\r\nexport class ProcesoFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  procesoForm!: FormGroup;\r\n  listProceso: any;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllProcesos();\r\n    this.procesoForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProceso = res['datos'];\r\n    });\r\n  }\r\n\r\n  crearProceso() {\r\n    if (this.procesoForm.valid) {\r\n      console.log(this.procesoForm.value);\r\n      this.service.postForm(this.apiProceso, this.procesoForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('proceso registrado correctamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.GetAllProcesos();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarProcesos(id: string) {\r\n    console.log(this.apiProceso + id);\r\n    this.service.deleteForm(this.apiProceso, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Proceso borrado correctamente');\r\n          this.GetAllProcesos();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setProceso(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamProcesoSelected(proceso_id: string) {\r\n    this.service.streamProcesoSelected(proceso_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir un proceso</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un proceso</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let proceso of listProceso\"\r\n            [value]=\"proceso._id\"\r\n            (click)=\"\r\n              [\r\n                setProceso(proceso._id, proceso.nombre),\r\n                StreamProcesoSelected(proceso._id)\r\n              ]\r\n            \"\r\n          >\r\n            <p>{{ proceso.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar un nuevo proceso</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"procesoForm\"\r\n        (ngSubmit)=\"crearProceso()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-3\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre del proceso</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Descripcion del proceso</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !procesoForm.value.nombre || !procesoForm.value.descripcion\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-provincia-form',\r\n  templateUrl: './provincia-form.component.html',\r\n  styleUrls: ['./provincia-form.component.css'],\r\n})\r\nexport class ProvinciaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private _httpservice: HttpService\r\n  ) {}\r\n  listPaises: any;\r\n  listProvincias: any;\r\n  listProvinciasPais: any;\r\n  apiPaises = environment.API_URL_PAISES;\r\n  apiProvincia = environment.API_URL_PROVINCIAS;\r\n  apiLocalidad = environment.API_URL_LOCALIDADES;\r\n  apiArgentinaDepartamentos = environment.API_URL_ARGENTINA_DEPARTAMENTOS;\r\n  isOptional = true;\r\n  provinciaForm!: FormGroup;\r\n  nombre_pais!: string;\r\n  id_provincia!: string;\r\n  subscription!: Subscription;\r\n  subscription2!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.provinciaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n    });\r\n    this.subscription = this.service.paisSelected.subscribe(\r\n      (message) => (this.nombre_pais = message)\r\n    );\r\n    this.subscription = this.service.provinciaSelected.subscribe(\r\n      (message) => (this.id_provincia = message)\r\n    );\r\n\r\n    this.subscription2 = this.service.listProvincias.subscribe(\r\n      (message) => (this.listProvinciasPais = message)\r\n    );\r\n  }\r\n\r\n  setProvincia(nombre: any) {\r\n    console.log('set provincia nombre', nombre);\r\n    this.service.changeMessage(nombre);\r\n    this.service.provinciaSelectedSource.next(nombre);\r\n    this.GetDepartamentosByProvincia();\r\n  }\r\n\r\n  GetDepartamentosByProvincia() {\r\n    if (this.nombre_pais == 'Argentina') {\r\n      this._httpservice\r\n        .httpGet(\r\n          this.apiArgentinaDepartamentos +\r\n            this.id_provincia +\r\n            '&orden=nombre&max=2100&exacto=true'\r\n        )\r\n        .subscribe((res: any) => {\r\n          console.log('pais form get departamentos', res.departamentos);\r\n\r\n          this.service.streamDepartamentos_ProvinciaSelected(res.departamentos);\r\n        });\r\n    } else {\r\n      let body = {\r\n        country: this.nombre_pais,\r\n        state: this.id_provincia,\r\n      };\r\n      this._httpservice\r\n        .httpPost(this.apiLocalidad, body)\r\n        .subscribe((res: any) => {\r\n          console.log('provincia form get localidades', res.body.data);\r\n\r\n          this.service.streamDepartamentos_ProvinciaSelected(res.body.data);\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"carta flex flex-col p-3\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Provincia</mat-label>\r\n\r\n    <mat-select>\r\n      <mat-option\r\n        *ngFor=\"let provincia of listProvinciasPais\"\r\n        [value]=\"provincia.name ? provincia.name : provincia.nombre\"\r\n        (click)=\"\r\n          [setProvincia(provincia.name ? provincia.name : provincia.nombre)]\r\n        \"\r\n      >\r\n        <p>{{ provincia.name ? provincia.name : provincia.nombre }}</p>\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-tipo-maquina-form',\r\n  templateUrl: './tipo-maquina-form.component.html',\r\n  styleUrls: ['./tipo-maquina-form.component.css'],\r\n})\r\nexport class TipoMaquinaFormComponent {\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n  listPaises: any;\r\n  listTipoMaquina: any;\r\n  apiTipoMaquina = environment.API_URL_TIPO_MAQUINA;\r\n  isOptional = true;\r\n  tipoMaquinaForm!: FormGroup;\r\n  pais: any;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTiposMaquina();\r\n    this.tipoMaquinaForm = this.builder.group({\r\n      nombre: this.builder.control('', Validators.required),\r\n      descripcion: this.builder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  createTipoMaquina() {\r\n    if (this.tipoMaquinaForm.valid) {\r\n      console.log(this.tipoMaquinaForm.value);\r\n      this.service\r\n        .postForm(this.apiTipoMaquina, this.tipoMaquinaForm.value)\r\n        .subscribe({\r\n          next: (res: any) => {\r\n            console.log('respuesta: ', res);\r\n            if (res.status == 500) {\r\n              this.toastr.warning(res.error.error);\r\n            } else {\r\n              this.toastr.success(\r\n                'Tipo de maquina registrada correctamente',\r\n                '',\r\n                {\r\n                  toastClass: 'yourclass ngx-toastr',\r\n                  positionClass: 'toast-bottom-center',\r\n                }\r\n              );\r\n              this.GetAllTiposMaquina();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.toastr.error(error);\r\n            console.log(error);\r\n          },\r\n        });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n  GetAllTiposMaquina() {\r\n    this.service.getForm(this.apiTipoMaquina).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTipoMaquina = res['datos'];\r\n    });\r\n  }\r\n\r\n  borrarTipoMaquina(id: string) {\r\n    console.log(this.apiTipoMaquina + id);\r\n    this.service.deleteForm(this.apiTipoMaquina, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Tipo de maquina borrada correctamente');\r\n          this.GetAllTiposMaquina();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTipo(id: any, nombre: any) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n  }\r\n\r\n  StreamTipoSelected(tipo_id: string) {\r\n    this.service.streamTipoSelected(tipo_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Elegir un tipo de máquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Elegir un Tipo de maquina</mat-label>\r\n        <mat-select>\r\n          <mat-option\r\n            *ngFor=\"let tipo of listTipoMaquina\"\r\n            [value]=\"tipo._id\"\r\n            (click)=\"\r\n              [setTipo(tipo._id, tipo.nombre), StreamTipoSelected(tipo._id)]\r\n            \"\r\n          >\r\n            <p>{{ tipo.nombre }}</p>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar un nuevo tipo de máquina</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"tipoMaquinaForm\"\r\n        (ngSubmit)=\"createTipoMaquina()\"\r\n        (submit)=\"tipoMaquinaForm.reset()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-3\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion</mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !tipoMaquinaForm.value.nombre ||\r\n                !tipoMaquinaForm.value.descripcion\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-trigger-form',\r\n  templateUrl: './trigger-form.component.html',\r\n  styleUrls: ['./trigger-form.component.css'],\r\n})\r\nexport class TriggerFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService\r\n  ) {}\r\n\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  triggerForm!: FormGroup;\r\n  listTriggers: any;\r\n  trigger_descripcion!: string;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllTriggers();\r\n    this.triggerForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control('', Validators.required),\r\n    });\r\n  }\r\n\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTriggers = res;\r\n    });\r\n  }\r\n\r\n  crearTrigger() {\r\n    if (this.triggerForm.valid) {\r\n      console.log(this.triggerForm.value);\r\n      this.service.postForm(this.apiTrigger, this.triggerForm.value).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Trigger registrado correctamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.GetAllTriggers();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor entre datos validos');\r\n    }\r\n  }\r\n\r\n  borrarTrigger(id: string) {\r\n    console.log(this.apiTrigger + id);\r\n    this.service.deleteForm(this.apiTrigger, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Trigger borrado correctamente');\r\n          this.GetAllTriggers();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  setTrigger(id: any, nombre: any, descripcion: string) {\r\n    console.log('set tipo', id, 'nombre', nombre);\r\n    this.service.changeMessage(id);\r\n    this.trigger_descripcion = descripcion;\r\n  }\r\n\r\n  StreamTriggerSelected(trigger_id: string) {\r\n    this.service.streamTriggerSelected(trigger_id);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header><h2 class=\"titulo\">Elegir un trigger</h2> </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col p-3\">\r\n      <mat-form-field>\r\n        <mat-label>Seleccionar una opcion del listado</mat-label>\r\n        <mat-select>\r\n          <div class=\"flex flex-col p-5\" *ngFor=\"let trigger of listTriggers\">\r\n            <mat-option\r\n              [value]=\"trigger._id\"\r\n              (click)=\"\r\n                [\r\n                  setTrigger(trigger._id, trigger.nombre, trigger.descripcion),\r\n                  StreamTriggerSelected(trigger._id)\r\n                ]\r\n              \"\r\n            >\r\n              <p>{{ trigger.nombre }}</p>\r\n            </mat-option>\r\n            <mat-divider></mat-divider>\r\n            <p>\r\n              {{ trigger.descripcion }}\r\n            </p>\r\n          </div>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { HttpService } from 'src/app/service/http.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { VariableModalComponent } from './variable.modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-variable-form',\r\n  templateUrl: './variable-form.component.html',\r\n  styleUrls: ['./variable-form.component.css'],\r\n})\r\nexport class VariableFormComponent implements OnInit {\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private httpService: HttpService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  apiVariables = environment.API_URL_VARIABLES;\r\n  apiProceso = environment.API_URL_PROCESO;\r\n  apiMaquinas = environment.API_URL_MAQUINA;\r\n  apiTrigger = environment.API_URL_TRIGGER;\r\n  variableForm!: FormGroup;\r\n  id_maquina: any;\r\n  id_proceso: any;\r\n  id_trigger: any;\r\n  listProcesos: any;\r\n  listMaquina: any;\r\n  listTrigger: any;\r\n  listaVariables: any;\r\n  subscription!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.GetAllVariables();\r\n    this.GetAllProcesos();\r\n    this.GetAllMaquinas();\r\n    this.GetAllTriggers();\r\n    this.variableForm = this._formBuilder.group({\r\n      nombre: this._formBuilder.control('', Validators.required),\r\n      descripcion: this._formBuilder.control(''),\r\n      trigger_valor: this._formBuilder.control(''),\r\n    });\r\n    this.subscription = this.service.maquinaSelected.subscribe(\r\n      (message) => (this.id_maquina = message)\r\n    );\r\n    this.subscription = this.service.procesoSelected.subscribe(\r\n      (message) => (this.id_proceso = message)\r\n    );\r\n    this.subscription = this.service.triggerSelected.subscribe(\r\n      (message) => (this.id_trigger = message)\r\n    );\r\n    this.subscription = this.httpService.listaVariables.subscribe(\r\n      (message) => (this.listaVariables = message)\r\n    );\r\n  }\r\n\r\n  GetAllProcesos() {\r\n    this.service.getForm(this.apiProceso).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listProcesos = res['datos'];\r\n    });\r\n  }\r\n  GetAllMaquinas() {\r\n    this.service.getForm(this.apiMaquinas).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listMaquina = res['datos'];\r\n    });\r\n  }\r\n  GetAllTriggers() {\r\n    this.service.getForm(this.apiTrigger).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listTrigger = res;\r\n    });\r\n  }\r\n  GetAllVariables() {\r\n    this.service.getForm(this.apiVariables).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listaVariables = res;\r\n    });\r\n  }\r\n\r\n  crearVariable() {\r\n    if (this.variableForm.valid) {\r\n      console.log(this.variableForm.value);\r\n      let body = {\r\n        id_maquina: this.id_maquina,\r\n        id_proceso: this.id_proceso,\r\n        id_trigger: this.id_trigger,\r\n        nombre: this.variableForm.value.nombre,\r\n        trigger_valor: this.variableForm.value.trigger_valor,\r\n        time_stamp: new Date(),\r\n      };\r\n      this.service.postForm(this.apiVariables, body).subscribe({\r\n        next: (res: any) => {\r\n          console.log('respuesta: ', res);\r\n          if (res.status == 500) {\r\n            this.toastr.warning(res.error.error);\r\n          } else {\r\n            this.toastr.success('Variable registrada correctamente', '', {\r\n              toastClass: 'yourclass ngx-toastr',\r\n              positionClass: 'toast-bottom-center',\r\n            });\r\n            this.GetAllVariables();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(error);\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      this.toastr.warning('Por favor ingrese datos validos');\r\n    }\r\n  }\r\n\r\n  openDialog(variable_id: string): void {\r\n    const dialogRef = this.dialog.open(VariableModalComponent, {\r\n      data: variable_id,\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Elegir una variable</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <mat-accordion>\r\n        <mat-expansion-panel (click)=\"GetAllVariables()\" hideToggle>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Listado de variables</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <mat-list role=\"list\" *ngFor=\"let variable of listaVariables\">\r\n            <mat-list-item role=\"listitem\">\r\n              {{ variable.nombre }}\r\n              <button\r\n                matListItemMeta\r\n                mat-icon-button\r\n                (click)=\"openDialog(variable._id)\"\r\n              >\r\n                <mat-icon class=\"mat-24\" color=\"warn\">delete</mat-icon>\r\n              </button>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-header\r\n    ><h2 class=\"titulo\">Ingresar una nueva variable</h2>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div class=\"flex flex-col\">\r\n      <form\r\n        class=\"example-form\"\r\n        [formGroup]=\"variableForm\"\r\n        (ngSubmit)=\"crearVariable()\"\r\n      >\r\n        <div class=\"grid grid-cols-3 grid-rows-4\">\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>nombre de la variable </mat-label>\r\n              <input matInput formControlName=\"nombre\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>descripcion de la variable </mat-label>\r\n              <input matInput formControlName=\"descripcion\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>valor del trigger </mat-label>\r\n              <input matInput formControlName=\"trigger_valor\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-span-3 justify-self-end\">\r\n            <button\r\n              class=\"boton\"\r\n              mat-raised-button\r\n              [disabled]=\"\r\n                !variableForm.value.nombre || !variableForm.value.descripcion\r\n              \"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { HttpService } from 'src/app/service/http.service';\r\n\r\n@Component({\r\n  selector: 'variable-modal',\r\n  templateUrl: 'variable-modal.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class VariableModalComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<VariableModalComponent>,\r\n    private toastr: ToastrService,\r\n    private service: AuthService,\r\n    private httpService: HttpService,\r\n    @Inject(MAT_DIALOG_DATA) public data: string\r\n  ) {}\r\n  listaVariables: any;\r\n  apiVariables = environment.API_URL_VARIABLES;\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  borrarVariable(id: string) {\r\n    console.log(this.apiVariables + id);\r\n    this.service.deleteForm(this.apiVariables, id).subscribe({\r\n      next: (res: any) => {\r\n        console.log('respuesta: ', res);\r\n        if (res.status == 500) {\r\n          this.toastr.warning(res.error.error);\r\n        } else {\r\n          this.toastr.success('Variable borrada correctamente', '', {\r\n            toastClass: 'yourclass ngx-toastr',\r\n            positionClass: 'toast-bottom-center',\r\n          });\r\n          this.GetAllVariables();\r\n        }\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(error);\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  GetAllVariables() {\r\n    this.service.getForm(this.apiVariables).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.httpService.stream_Variables(res);\r\n    });\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  <p>¿Estás seguro que querés borrar esta variable?</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No</button>\r\n  <button mat-button (click)=\"borrarVariable(data)\" cdkFocusInitial>\r\n    Confirmar\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { inject } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivateFn,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport const authGuard: CanActivateFn = (\r\n  route: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot\r\n) => {\r\n  const router = inject(Router);\r\n  const service = inject(AuthService);\r\n  const toastr = inject(ToastrService);\r\n\r\n  if (service.IsLoggedIn()) {\r\n    if (route.url.length > 0) {\r\n      let menu = route.url[0].path;\r\n      console.log('authService', menu);\r\n      if (menu == 'user' || 'admin') {\r\n        if (service.getUserRole() == 'admin') {\r\n          return true;\r\n        } else {\r\n          toastr.warning('Acceso restringido, no es administrador');\r\n          router.navigate(['']);\r\n          return false;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  } else {\r\n    router.navigate(['login']);\r\n    return false;\r\n  }\r\n};\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-login-modal',\r\n  templateUrl: './login-modal.component.html',\r\n  styleUrls: ['./login-modal.component.css'],\r\n})\r\nexport class LoginModalComponent {\r\n  constructor(public dialogRef: MatDialogRef<LoginModalComponent>) {}\r\n\r\n  cerrar(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"flex flex-col card\">\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"80\"\r\n    height=\"80\"\r\n    viewBox=\"0 0 80 80\"\r\n    fill=\"none\"\r\n    class=\"icono\"\r\n  >\r\n    <g clip-path=\"url(#clip0_139_508)\">\r\n      <path\r\n        d=\"M40 0C32.0888 0 24.3552 2.34596 17.7772 6.74122C11.1992 11.1365 6.07234 17.3836 3.04484 24.6927C0.0173314 32.0017 -0.774802 40.0444 0.768607 47.8036C2.31202 55.5629 6.12165 62.6902 11.7157 68.2843C17.3098 73.8784 24.4372 77.688 32.1964 79.2314C39.9556 80.7748 47.9983 79.9827 55.3074 76.9552C62.6164 73.9277 68.8635 68.8008 73.2588 62.2228C77.6541 55.6448 80 47.9113 80 40C79.9885 29.3949 75.7706 19.2274 68.2716 11.7284C60.7727 4.22943 50.6052 0.0114703 40 0ZM40 73.3333C33.4073 73.3333 26.9626 71.3784 21.481 67.7157C15.9994 64.0529 11.727 58.847 9.20403 52.7561C6.68111 46.6652 6.021 39.963 7.30718 33.497C8.59335 27.031 11.768 21.0915 16.4298 16.4298C21.0915 11.768 27.031 8.59333 33.497 7.30716C39.963 6.02098 46.6653 6.6811 52.7561 9.20402C58.847 11.7269 64.053 15.9994 67.7157 21.481C71.3784 26.9626 73.3334 33.4073 73.3334 40C73.3236 48.8376 69.8086 57.3104 63.5595 63.5595C57.3104 69.8086 48.8376 73.3236 40 73.3333Z\"\r\n        fill=\"#C82D3B\"\r\n      />\r\n      <path\r\n        d=\"M40 16.6667C39.1159 16.6667 38.2681 17.0179 37.6429 17.643C37.0178 18.2681 36.6666 19.116 36.6666 20V46.6667C36.6666 47.5507 37.0178 48.3986 37.6429 49.0237C38.2681 49.6488 39.1159 50 40 50C40.884 50 41.7319 49.6488 42.357 49.0237C42.9821 48.3986 43.3333 47.5507 43.3333 46.6667V20C43.3333 19.116 42.9821 18.2681 42.357 17.643C41.7319 17.0179 40.884 16.6667 40 16.6667Z\"\r\n        fill=\"#C82D3B\"\r\n      />\r\n      <path\r\n        d=\"M43.3333 60C43.3333 58.159 41.8409 56.6666 40 56.6666C38.159 56.6666 36.6666 58.159 36.6666 60C36.6666 61.8409 38.159 63.3333 40 63.3333C41.8409 63.3333 43.3333 61.8409 43.3333 60Z\"\r\n        fill=\"#C82D3B\"\r\n      />\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_139_508\">\r\n        <rect width=\"80\" height=\"80\" fill=\"white\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n  <h1 mat-dialog-title class=\"titulo\">Credenciales inválidas</h1>\r\n  <div mat-dialog-content>\r\n    <p>Usuario o contraseña incorrecta</p>\r\n  </div>\r\n  <button mat-button class=\"boton\" (click)=\"cerrar()\">\r\n    Intentar nuevamente\r\n  </button>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  Subscription,\r\n  catchError,\r\n  delay,\r\n  Observable,\r\n  BehaviorSubject,\r\n  Subject,\r\n  of,\r\n} from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogOverviewExampleDialog } from '../dialog.component';\r\nimport { LoginModalComponent } from '../login-modal/login-modal.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private jwtHelper: JwtHelperService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  apiUrl = environment.API_URL_USERS;\r\n  apiRole = environment.API_URL_ROLES;\r\n  authToken: any;\r\n  user: any;\r\n  tokenSubscription = new Subscription();\r\n  tokenSubscription2 = new Subscription();\r\n  timeout?: any;\r\n\r\n  private messageSource = new BehaviorSubject('default message');\r\n  //observables que recogen la respuesta de la llamada a la api\r\n  private provinciasSource = new BehaviorSubject('');\r\n  private departamentosSource = new BehaviorSubject('');\r\n  private localidadesSource = new BehaviorSubject('');\r\n  private empresasSource = new BehaviorSubject('');\r\n  private plantasSource = new BehaviorSubject('');\r\n  private lineaSource = new BehaviorSubject('');\r\n  private maquinaSource = new BehaviorSubject('');\r\n  private fullnameSource = new BehaviorSubject('');\r\n\r\n  //observables que recogen la opcion seleccionada\r\n  paisSelectedSource = new BehaviorSubject('');\r\n  provinciaSelectedSource = new BehaviorSubject('');\r\n  departamentoSelectedSource = new BehaviorSubject('');\r\n  localidadSelectedSource = new BehaviorSubject('');\r\n  empresaSelectedSource = new BehaviorSubject('');\r\n  plantaSelectedSource = new BehaviorSubject('');\r\n  lineaSelectedSource = new BehaviorSubject('');\r\n  tipoMaquinaSelectedSource = new BehaviorSubject('');\r\n  maquinaSelectedSource = new BehaviorSubject('');\r\n  procesoSelectedSource = new BehaviorSubject('');\r\n  triggerSelectedSource = new BehaviorSubject('');\r\n\r\n  currentMessage = this.messageSource.asObservable();\r\n\r\n  // guardamos la respuesta en listas que son accesibles desde los componentes\r\n  listProvincias = this.provinciasSource.asObservable();\r\n  listDepartamentos = this.departamentosSource.asObservable();\r\n  listLocalidades = this.localidadesSource.asObservable();\r\n  listEmpresas = this.empresasSource.asObservable();\r\n  listPlantas = this.plantasSource.asObservable();\r\n  listLineas = this.lineaSource.asObservable();\r\n  listMaquinas = this.maquinaSource.asObservable();\r\n\r\n  // guardamos la opcion seleccionada para que sea accesible a los componentes\r\n  paisSelected = this.paisSelectedSource.asObservable();\r\n  provinciaSelected = this.provinciaSelectedSource.asObservable();\r\n  departamentoSelected = this.departamentoSelectedSource.asObservable();\r\n  localidadSelected = this.localidadSelectedSource.asObservable();\r\n  empresaSelected = this.empresaSelectedSource.asObservable();\r\n  plantaSelected = this.plantaSelectedSource.asObservable();\r\n  lineaSelected = this.lineaSelectedSource.asObservable();\r\n  tipoMaquinaSelected = this.tipoMaquinaSelectedSource.asObservable();\r\n  maquinaSelected = this.maquinaSelectedSource.asObservable();\r\n  procesoSelected = this.procesoSelectedSource.asObservable();\r\n  triggerSelected = this.triggerSelectedSource.asObservable();\r\n  fullname = this.fullnameSource.asObservable();\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '50%',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  openDialog2(): void {\r\n    const dialogRef = this.dialog.open(LoginModalComponent, {\r\n      enterAnimationDuration: '500ms',\r\n      exitAnimationDuration: '500ms',\r\n      width: '571px',\r\n      height: '292px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  // get\r\n\r\n  GetAll() {\r\n    return this.http.get(this.apiUrl);\r\n  }\r\n\r\n  //\r\n\r\n  GetAllRoles() {\r\n    return this.http.get(this.apiRole);\r\n  }\r\n\r\n  GetById(id: any) {\r\n    return this.http.get(this.apiUrl + '/' + id);\r\n  }\r\n\r\n  LogIn(body: any) {\r\n    return this.http.post(this.apiUrl + 'login', body).pipe(\r\n      catchError(async (error) => {\r\n        console.log(error.message);\r\n        return error;\r\n      })\r\n    );\r\n  }\r\n  storeUserData(token: any, user: any, rtoken: any) {\r\n    console.log('storeUserData, user: ', user, 'token: ', token);\r\n    this.timeout =\r\n      this.jwtHelper.getTokenExpirationDate(token)!.valueOf() -\r\n      new Date().valueOf();\r\n    sessionStorage.setItem('token', token);\r\n    sessionStorage.setItem('rtoken', rtoken);\r\n    sessionStorage.setItem('username', user.username);\r\n    sessionStorage.setItem('fullname', user.name);\r\n    sessionStorage.setItem('userrole', user.role.name);\r\n    this.authToken = token;\r\n    this.user = user;\r\n    // this.expirationCounter(this.timeout);\r\n    if (sessionStorage.getItem('userrole') == 'admin') {\r\n      this.router.navigate(['admin']);\r\n    } else {\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n\r\n  expirationCounter(timeout: any) {\r\n    console.log('timeout: ', timeout);\r\n    this.tokenSubscription.unsubscribe();\r\n    this.tokenSubscription = of(null)\r\n      .pipe(delay(timeout))\r\n      .subscribe((expired) => {\r\n        console.log('EXPIRED!!');\r\n        this.dialog.closeAll();\r\n        this.logout();\r\n        this.toastr.error('sesion expirada', 'vuelva a iniciar sesion');\r\n      });\r\n    this.pre_expirationCounter(timeout);\r\n  }\r\n\r\n  pre_expirationCounter(timeout: any) {\r\n    let timeNow = new Date();\r\n    console.log('time now: ', timeNow);\r\n    this.tokenSubscription2.unsubscribe();\r\n    this.tokenSubscription2 = of(null)\r\n      .pipe(delay(timeout - 120000))\r\n      .subscribe(() => {\r\n        this.openDialog();\r\n        console.log('about to expire !!');\r\n      });\r\n  }\r\n  logout() {\r\n    this.tokenSubscription.unsubscribe();\r\n    this.authToken = null;\r\n    this.user = null;\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/login']);\r\n    sessionStorage.setItem('token', '');\r\n    console.log(sessionStorage.getItem('token')?.toString());\r\n  }\r\n\r\n  IsLoggedIn() {\r\n    return sessionStorage.getItem('username') != null;\r\n  }\r\n  getUserRole() {\r\n    return sessionStorage.getItem('userrole') != null\r\n      ? sessionStorage.getItem('userrole')?.toString()\r\n      : '';\r\n  }\r\n\r\n  getUser() {\r\n    try {\r\n      var fullname = sessionStorage.getItem('fullname')!.toString();\r\n      this.fullnameSource.next(fullname);\r\n    } catch (error) {\r\n      console.log('getUser error: ', error);\r\n    }\r\n  }\r\n\r\n  // post\r\n  Proceedregister(inputdata: any) {\r\n    return this.http\r\n      .post(this.apiUrl, inputdata, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  UpdateUser(id: any, inputdata: any) {\r\n    return this.http.post(this.apiUrl + '/' + id, inputdata);\r\n  }\r\n\r\n  // get formularios\r\n  getForm(url: string) {\r\n    return this.http\r\n      .get(url, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          if (error.status == 403) {\r\n            this.router.navigate(['/login']);\r\n          }\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  postForm(url: string, formData: any) {\r\n    return this.http\r\n      .post(url, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  deleteForm(url: string, id: string) {\r\n    return this.http\r\n      .delete(url + 'delete/' + id, {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n\r\n  changeMessage(message: string) {\r\n    console.log('change message: ', message);\r\n    this.messageSource.next(message);\r\n  }\r\n  streamProvincias_PaisSelected(provincias: string) {\r\n    console.log('change message: ', provincias);\r\n    this.provinciasSource.next(provincias);\r\n  }\r\n\r\n  streamDepartamentos_ProvinciaSelected(departamentos: string) {\r\n    console.log('change message: ', departamentos);\r\n    this.departamentosSource.next(departamentos);\r\n  }\r\n  streamLocalidades_DepartamentoSelected(localidades: string) {\r\n    console.log('change message: ', localidades);\r\n    this.localidadesSource.next(localidades);\r\n  }\r\n\r\n  streamEmpresas_LocalidadSelected(empresas: string) {\r\n    console.log('change message: ', empresas);\r\n    this.empresasSource.next(empresas);\r\n  }\r\n  streamPlantas_EmpresaSelected(plantas: string) {\r\n    console.log('change message: ', plantas);\r\n    this.plantasSource.next(plantas);\r\n  }\r\n\r\n  streamLinea_PlantaSelected(linea: string) {\r\n    console.log('change message: ', linea);\r\n    this.lineaSource.next(linea);\r\n  }\r\n  streamMaquinas_LineaSelected(Maquinas: string) {\r\n    console.log('change message: ', Maquinas);\r\n    this.maquinaSource.next(Maquinas);\r\n  }\r\n  streamTipoSelected(TipoMaquina: string) {\r\n    console.log('tipo maquina selected: ', TipoMaquina);\r\n    this.tipoMaquinaSelectedSource.next(TipoMaquina);\r\n  }\r\n  streamMaquinaSelected(Maquina: string) {\r\n    console.log('maquina selected: ', Maquina);\r\n    this.maquinaSelectedSource.next(Maquina);\r\n  }\r\n  streamProcesoSelected(proceso: string) {\r\n    console.log('Proceso selected: ', proceso);\r\n    this.procesoSelectedSource.next(proceso);\r\n  }\r\n  streamTriggerSelected(trigger: string) {\r\n    console.log('Trigger selected: ', trigger);\r\n    this.triggerSelectedSource.next(trigger);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport 'date-fns/locale';\r\nimport { Subject } from 'rxjs';\r\nChart.register(...registerables);\r\nChart.defaults.font.family = 'DIN-PRO';\r\nChart.defaults.font.size = 14;\r\nChart.defaults.font.weight = '400';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ChartGeneratorService {\r\n  chartList: any = [];\r\n  private chartListSource = new Subject();\r\n  private chartRangeSource = new Subject();\r\n  private chartIntervalInfoSource = new Subject();\r\n\r\n  listaDeCharts = this.chartListSource.asObservable();\r\n  rangeInfo = this.chartRangeSource.asObservable();\r\n  chartInfo = this.chartIntervalInfoSource.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  generate(idList: any[], decimation: any, canvasBackgroundColor?: any) {\r\n    this.chartList = [];\r\n    for (let i = 0; i < idList.length; i++) {\r\n      var generatedChart = {\r\n        chart: new Chart(idList[i].titulo, {\r\n          type: 'line',\r\n          data: {\r\n            labels: [],\r\n            datasets: [\r\n              {\r\n                data: [],\r\n                borderColor: '#062984',\r\n                backgroundColor: 'rgba(6, 41, 132, 0.35)',\r\n                label: idList[i].titulo + ' minimo',\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            // hay que arreglar esto para que funcione la data decimation\r\n            // Turn off animations and data parsing for performance\r\n            aspectRatio: 1,\r\n            maintainAspectRatio: false,\r\n            animation: false,\r\n            parsing: false,\r\n            plugins: {\r\n              decimation: decimation,\r\n            },\r\n            elements: {\r\n              line: {\r\n                tension: 0.5,\r\n              },\r\n            },\r\n            scales: {\r\n              y: {\r\n                type: 'linear',\r\n                beginAtZero: true,\r\n                ticks: {},\r\n                grid: {\r\n                  display: false,\r\n                },\r\n              },\r\n              x: {\r\n                type: 'time',\r\n\r\n                ticks: {\r\n                  source: 'auto',\r\n                  // Disabled rotation for performance\r\n                  maxRotation: 0,\r\n                  autoSkip: true,\r\n                },\r\n                grid: {\r\n                  display: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n          plugins: [canvasBackgroundColor],\r\n        }),\r\n        titulo: idList[i].titulo,\r\n        variable: idList[i].id,\r\n        id: i,\r\n      };\r\n      this.chartList.push(generatedChart);\r\n    }\r\n    console.log('generated charts: ', this.chartList);\r\n  }\r\n\r\n  getCharts() {\r\n    return this.chartList;\r\n  }\r\n  streamCharts(chartList: any) {\r\n    this.chartListSource.next(chartList);\r\n  }\r\n  set_Inicio_Final(inicio: string, final: string) {\r\n    this.chartRangeSource.next([inicio, final]);\r\n  }\r\n  streamChartIntervalInfo(chartInfo: any) {\r\n    this.chartIntervalInfoSource.next(chartInfo);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject, catchError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RegistroFiltrado } from '../models/datos.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpService {\r\n  registroGeneral = environment.API_URL_RGENERAL;\r\n  registroGeneralts = environment.API_URL_RGENERALTS;\r\n  variables = environment.API_URL_VARIABLES;\r\n  // chartUrl = environment.API_URL_CHARTS;\r\n  private listaVariablesSource = new Subject();\r\n  private listaRegistroFiltradoSource = new BehaviorSubject(\r\n    <RegistroFiltrado[]>[]\r\n  );\r\n  private listaRegistroFiltrado2Source = new Subject();\r\n  private listaDatosSource3 = new BehaviorSubject(<[]>[]);\r\n  private listaDatosInRangeSource = new BehaviorSubject(<[]>[]);\r\n  private listChartInfoSource = new Subject();\r\n  private listCharDatatInfoSource = new Subject();\r\n  private listIntervalSource = new Subject();\r\n  private rangeSource = new Subject();\r\n\r\n  listaVariables = this.listaVariablesSource.asObservable();\r\n  listaRegistroFiltrado = this.listaRegistroFiltradoSource.asObservable();\r\n  listaRegistroFiltrado2 = this.listaRegistroFiltrado2Source.asObservable();\r\n  listaDatos3 = this.listaDatosSource3.asObservable();\r\n  listaDatosInRange = this.listaDatosInRangeSource.asObservable();\r\n  listChartInfo = this.listChartInfoSource.asObservable();\r\n  listInterval = this.listIntervalSource.asObservable();\r\n  listChartDataInfo = this.listCharDatatInfoSource.asObservable();\r\n  rangeInfo = this.rangeSource.asObservable();\r\n  inicio_str: string = '';\r\n  final_str: string = '';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getValores(variable: string): Observable<any> {\r\n    return this.http.get(this.registroGeneralts + 'all/' + variable, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  getValoresFiltrados(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String,\r\n    operacion: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneral + `filter/${variable}/${inicio}/${fin}/${operacion}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getValoresFiltrados2(\r\n    inicio: String,\r\n    fin: String,\r\n    granularidad: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneralts + `granularidad/${inicio}/${fin}/${granularidad}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getAllInRange(\r\n    variable: String,\r\n    inicio: String,\r\n    fin: String\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      this.registroGeneralts + `all/${variable}/${inicio}/${fin}/`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  getVariables(): Observable<any> {\r\n    return this.http.get(this.variables, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n      },\r\n    });\r\n  }\r\n  getInterval(\r\n    inicio: string,\r\n    final: string,\r\n    unit: string,\r\n    binsize: string\r\n  ): Observable<any> {\r\n    return this.http.get(\r\n      `${this.registroGeneralts}intervals/${inicio}/${final}/${unit}/${binsize}`,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer ' + sessionStorage.getItem('token')?.toString(),\r\n        },\r\n      }\r\n    );\r\n  }\r\n  httpGet(url: string) {\r\n    return this.http.get(url);\r\n  }\r\n  httpPost(url: string, body: any) {\r\n    return this.http\r\n      .post(url, body, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        catchError(async (error) => {\r\n          console.log(error.message);\r\n          return error;\r\n        })\r\n      );\r\n  }\r\n  stream_Variables(variables: any) {\r\n    this.listaVariablesSource.next(variables);\r\n  }\r\n  stream_RegistroFiltrado(datos: RegistroFiltrado[]) {\r\n    console.log('stream registro filtrado: ', datos);\r\n    this.listaRegistroFiltradoSource.next(datos);\r\n  }\r\n  stream_RegistroFiltrado2(datoGeneral: any) {\r\n    this.listaRegistroFiltrado2Source.next(datoGeneral);\r\n  }\r\n  stream_Datos3(datoGeneral: any) {\r\n    this.listaDatosSource3.next(datoGeneral);\r\n  }\r\n  stream_DatosInRange(datoGeneral: any) {\r\n    this.listaDatosInRangeSource.next(datoGeneral);\r\n  }\r\n  stream_Chart_Info(chartInfo: any) {\r\n    this.listChartInfoSource.next(chartInfo);\r\n  }\r\n  stream_ChartData_Info(chartDataInfo: any) {\r\n    this.listCharDatatInfoSource.next(chartDataInfo);\r\n  }\r\n  stream_Interval(interval: any) {\r\n    this.listIntervalSource.next(interval);\r\n  }\r\n  set_Inicio_Final(inicio: string, final: string) {\r\n    this.rangeSource.next([inicio, final]);\r\n  }\r\n  get_Inicio_Final() {\r\n    return [this.inicio_str, this.final_str];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SpinnerService {\n  constructor(private _spinnerService: NgxSpinnerService) {}\n\n  public llamarSpinner(spinner: string) {\n    this._spinnerService.show(spinner);\n  }\n  public detenerSpinner(spinner: string) {\n    this._spinnerService.hide(spinner);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport colorLib from '@kurkle/color';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UtilsService {\r\n  constructor() {}\r\n  private CHART_COLORS = {\r\n    strong_blue: '#062984',\r\n    medium_blue: '#1758FF',\r\n    light_blue: '#6F97FF',\r\n    red: 'rgb(255, 99, 132)',\r\n    orange: 'rgb(255, 159, 64)',\r\n    yellow: 'rgb(255, 205, 86)',\r\n    green: 'rgb(75, 192, 192)',\r\n    blue: 'rgb(54, 162, 235)',\r\n    purple: 'rgb(153, 102, 255)',\r\n    grey: 'rgb(201, 203, 207)',\r\n  };\r\n\r\n  NAMED_COLORS = [\r\n    this.CHART_COLORS.strong_blue,\r\n    this.CHART_COLORS.medium_blue,\r\n    this.CHART_COLORS.light_blue,\r\n    this.CHART_COLORS.red,\r\n    this.CHART_COLORS.orange,\r\n    this.CHART_COLORS.yellow,\r\n    this.CHART_COLORS.green,\r\n    this.CHART_COLORS.blue,\r\n    this.CHART_COLORS.purple,\r\n    this.CHART_COLORS.grey,\r\n  ];\r\n\r\n  namedColor(index: number) {\r\n    return this.NAMED_COLORS[index % this.NAMED_COLORS.length];\r\n  }\r\n  transparentize(value: string, opacity: number) {\r\n    var alpha = opacity === undefined ? 0.5 : 1 - opacity;\r\n    return colorLib(value).alpha(alpha).rgbString();\r\n  }\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\r\n\r\nexport function checkUpperCase(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasUpperCase = /[A-Z]+/.test(value);\r\n\r\n    const passwordValid = hasUpperCase;\r\n\r\n    return !passwordValid ? { hasUpper: true } : null;\r\n  };\r\n}\r\nexport function checkLowerCase(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasLowerCase = /[a-z]+/.test(value);\r\n\r\n    const passwordValid = hasLowerCase;\r\n\r\n    return !passwordValid ? { hasLower: true } : null;\r\n  };\r\n}\r\nexport function checkNumber(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasNumeric = /[0-9]+/.test(value);\r\n\r\n    const passwordValid = hasNumeric;\r\n\r\n    return !passwordValid ? { hasNumber: true } : null;\r\n  };\r\n}\r\nexport function checkSpecial(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const hasSpecial = /[$@$!%*?&]+/.test(value);\r\n\r\n    const passwordValid = hasSpecial;\r\n\r\n    return !passwordValid ? { hasSp: true } : null;\r\n  };\r\n}\r\n","export const environment = {\r\n  production: false,\r\n  //old variables:\r\n  // API_URL_PAISES_OLD: 'http://automatismopalmar.ddns.net:3001/api/paises/',\r\n  // API_URL_PROVINCIAS_OLD: 'http://automatismopalmar.ddns.net:3001/api/provincias/',\r\n  // API_URL_LOCALIDADES_OLD: 'http://automatismopalmar.ddns.net:3001/api/localidad/',\r\n\r\n  API_URL_USERS: 'http://automatismopalmar.ddns.net:3001/api/users/',\r\n  API_URL_ROLES: 'http://automatismopalmar.ddns.net:3001/api/role/',\r\n  API_URL_RGENERAL:\r\n    'http://automatismopalmar.ddns.net:3001/api/registro-general/',\r\n  API_URL_RGENERALTS:\r\n    'http://automatismopalmar.ddns.net:3001/api/registro-general-ts/',\r\n  API_URL_VARIABLES: 'http://automatismopalmar.ddns.net:3001/api/variables/',\r\n  API_URL_PAISES: 'https://countriesnow.space/api/v0.1/countries/',\r\n  API_URL_PROVINCIAS: 'https://countriesnow.space/api/v0.1/countries/states',\r\n  API_URL_LOCALIDADES:\r\n    'https://countriesnow.space/api/v0.1/countries/state/cities',\r\n  API_URL_EMPRESAS: 'http://automatismopalmar.ddns.net:3001/api/empresas/',\r\n  API_URL_PLANTA: 'http://automatismopalmar.ddns.net:3001/api/empresa-planta/',\r\n  API_URL_TIPO_MAQUINA:\r\n    'http://automatismopalmar.ddns.net:3001/api/tipo-maquina/',\r\n  API_URL_MAQUINA: 'http://automatismopalmar.ddns.net:3001/api/maquinas/',\r\n  API_URL_LINEA_PRODUCCION:\r\n    'http://automatismopalmar.ddns.net:3001/api/linea-produccion/',\r\n  API_URL_PROCESO: 'http://automatismopalmar.ddns.net:3001/api/proceso/',\r\n  API_URL_TRIGGER: 'http:///automatismopalmar.ddns.net:3001/api/trigger/',\r\n  API_URL_RTOKEN: 'http:///automatismopalmar.ddns.net:3001/api/refresh',\r\n  API_URL_ARGENTINA_PROVINCIAS:\r\n    'https://apis.datos.gob.ar/georef/api/provincias?orden=nombre&campos=basico&max=30',\r\n  API_URL_ARGENTINA_DEPARTAMENTOS:\r\n    'https://apis.datos.gob.ar/georef/api/departamentos?provincia=',\r\n  API_URL_ARGENTINA_LOCALIDADES:\r\n    'https://apis.datos.gob.ar/georef/api/localidades?provincia=',\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatStepperModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n    MatProgressSpinnerModule,\r\n    MatMenuModule,\r\n    MatProgressBarModule,\r\n    MatTabsModule,\r\n    MatButtonToggleModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","var map = {\n\t\"./af\": 5528,\n\t\"./af.js\": 5528,\n\t\"./ar\": 1036,\n\t\"./ar-dz\": 7579,\n\t\"./ar-dz.js\": 7579,\n\t\"./ar-kw\": 9588,\n\t\"./ar-kw.js\": 9588,\n\t\"./ar-ly\": 6519,\n\t\"./ar-ly.js\": 6519,\n\t\"./ar-ma\": 3258,\n\t\"./ar-ma.js\": 3258,\n\t\"./ar-ps\": 5467,\n\t\"./ar-ps.js\": 5467,\n\t\"./ar-sa\": 4085,\n\t\"./ar-sa.js\": 4085,\n\t\"./ar-tn\": 287,\n\t\"./ar-tn.js\": 287,\n\t\"./ar.js\": 1036,\n\t\"./az\": 9757,\n\t\"./az.js\": 9757,\n\t\"./be\": 9620,\n\t\"./be.js\": 9620,\n\t\"./bg\": 1139,\n\t\"./bg.js\": 1139,\n\t\"./bm\": 4042,\n\t\"./bm.js\": 4042,\n\t\"./bn\": 9641,\n\t\"./bn-bd\": 9126,\n\t\"./bn-bd.js\": 9126,\n\t\"./bn.js\": 9641,\n\t\"./bo\": 494,\n\t\"./bo.js\": 494,\n\t\"./br\": 934,\n\t\"./br.js\": 934,\n\t\"./bs\": 6274,\n\t\"./bs.js\": 6274,\n\t\"./ca\": 5831,\n\t\"./ca.js\": 5831,\n\t\"./cs\": 2354,\n\t\"./cs.js\": 2354,\n\t\"./cv\": 1258,\n\t\"./cv.js\": 1258,\n\t\"./cy\": 8774,\n\t\"./cy.js\": 8774,\n\t\"./da\": 584,\n\t\"./da.js\": 584,\n\t\"./de\": 1557,\n\t\"./de-at\": 4954,\n\t\"./de-at.js\": 4954,\n\t\"./de-ch\": 1881,\n\t\"./de-ch.js\": 1881,\n\t\"./de.js\": 1557,\n\t\"./dv\": 6475,\n\t\"./dv.js\": 6475,\n\t\"./el\": 8877,\n\t\"./el.js\": 8877,\n\t\"./en-au\": 454,\n\t\"./en-au.js\": 454,\n\t\"./en-ca\": 7356,\n\t\"./en-ca.js\": 7356,\n\t\"./en-gb\": 456,\n\t\"./en-gb.js\": 456,\n\t\"./en-ie\": 8789,\n\t\"./en-ie.js\": 8789,\n\t\"./en-il\": 5471,\n\t\"./en-il.js\": 5471,\n\t\"./en-in\": 9664,\n\t\"./en-in.js\": 9664,\n\t\"./en-nz\": 7672,\n\t\"./en-nz.js\": 7672,\n\t\"./en-sg\": 805,\n\t\"./en-sg.js\": 805,\n\t\"./eo\": 7390,\n\t\"./eo.js\": 7390,\n\t\"./es\": 1564,\n\t\"./es-do\": 1473,\n\t\"./es-do.js\": 1473,\n\t\"./es-mx\": 2089,\n\t\"./es-mx.js\": 2089,\n\t\"./es-us\": 4156,\n\t\"./es-us.js\": 4156,\n\t\"./es.js\": 1564,\n\t\"./et\": 6513,\n\t\"./et.js\": 6513,\n\t\"./eu\": 7856,\n\t\"./eu.js\": 7856,\n\t\"./fa\": 2378,\n\t\"./fa.js\": 2378,\n\t\"./fi\": 1538,\n\t\"./fi.js\": 1538,\n\t\"./fil\": 32,\n\t\"./fil.js\": 32,\n\t\"./fo\": 6845,\n\t\"./fo.js\": 6845,\n\t\"./fr\": 8875,\n\t\"./fr-ca\": 6425,\n\t\"./fr-ca.js\": 6425,\n\t\"./fr-ch\": 1746,\n\t\"./fr-ch.js\": 1746,\n\t\"./fr.js\": 8875,\n\t\"./fy\": 7037,\n\t\"./fy.js\": 7037,\n\t\"./ga\": 1217,\n\t\"./ga.js\": 1217,\n\t\"./gd\": 7010,\n\t\"./gd.js\": 7010,\n\t\"./gl\": 1931,\n\t\"./gl.js\": 1931,\n\t\"./gom-deva\": 4488,\n\t\"./gom-deva.js\": 4488,\n\t\"./gom-latn\": 8032,\n\t\"./gom-latn.js\": 8032,\n\t\"./gu\": 4984,\n\t\"./gu.js\": 4984,\n\t\"./he\": 9090,\n\t\"./he.js\": 9090,\n\t\"./hi\": 2085,\n\t\"./hi.js\": 2085,\n\t\"./hr\": 8787,\n\t\"./hr.js\": 8787,\n\t\"./hu\": 2901,\n\t\"./hu.js\": 2901,\n\t\"./hy-am\": 9819,\n\t\"./hy-am.js\": 9819,\n\t\"./id\": 4074,\n\t\"./id.js\": 4074,\n\t\"./is\": 715,\n\t\"./is.js\": 715,\n\t\"./it\": 3838,\n\t\"./it-ch\": 7040,\n\t\"./it-ch.js\": 7040,\n\t\"./it.js\": 3838,\n\t\"./ja\": 3180,\n\t\"./ja.js\": 3180,\n\t\"./jv\": 4346,\n\t\"./jv.js\": 4346,\n\t\"./ka\": 5538,\n\t\"./ka.js\": 5538,\n\t\"./kk\": 9772,\n\t\"./kk.js\": 9772,\n\t\"./km\": 7905,\n\t\"./km.js\": 7905,\n\t\"./kn\": 9125,\n\t\"./kn.js\": 9125,\n\t\"./ko\": 9140,\n\t\"./ko.js\": 9140,\n\t\"./ku\": 6780,\n\t\"./ku-kmr\": 4662,\n\t\"./ku-kmr.js\": 4662,\n\t\"./ku.js\": 6780,\n\t\"./ky\": 3768,\n\t\"./ky.js\": 3768,\n\t\"./lb\": 4016,\n\t\"./lb.js\": 4016,\n\t\"./lo\": 3169,\n\t\"./lo.js\": 3169,\n\t\"./lt\": 2353,\n\t\"./lt.js\": 2353,\n\t\"./lv\": 3243,\n\t\"./lv.js\": 3243,\n\t\"./me\": 2338,\n\t\"./me.js\": 2338,\n\t\"./mi\": 5555,\n\t\"./mi.js\": 5555,\n\t\"./mk\": 5794,\n\t\"./mk.js\": 5794,\n\t\"./ml\": 3151,\n\t\"./ml.js\": 3151,\n\t\"./mn\": 6458,\n\t\"./mn.js\": 6458,\n\t\"./mr\": 9165,\n\t\"./mr.js\": 9165,\n\t\"./ms\": 8680,\n\t\"./ms-my\": 7477,\n\t\"./ms-my.js\": 7477,\n\t\"./ms.js\": 8680,\n\t\"./mt\": 9684,\n\t\"./mt.js\": 9684,\n\t\"./my\": 285,\n\t\"./my.js\": 285,\n\t\"./nb\": 5922,\n\t\"./nb.js\": 5922,\n\t\"./ne\": 9040,\n\t\"./ne.js\": 9040,\n\t\"./nl\": 5066,\n\t\"./nl-be\": 4460,\n\t\"./nl-be.js\": 4460,\n\t\"./nl.js\": 5066,\n\t\"./nn\": 3693,\n\t\"./nn.js\": 3693,\n\t\"./oc-lnc\": 8676,\n\t\"./oc-lnc.js\": 8676,\n\t\"./pa-in\": 2341,\n\t\"./pa-in.js\": 2341,\n\t\"./pl\": 7416,\n\t\"./pl.js\": 7416,\n\t\"./pt\": 4344,\n\t\"./pt-br\": 113,\n\t\"./pt-br.js\": 113,\n\t\"./pt.js\": 4344,\n\t\"./ro\": 2643,\n\t\"./ro.js\": 2643,\n\t\"./ru\": 1305,\n\t\"./ru.js\": 1305,\n\t\"./sd\": 6095,\n\t\"./sd.js\": 6095,\n\t\"./se\": 4486,\n\t\"./se.js\": 4486,\n\t\"./si\": 8742,\n\t\"./si.js\": 8742,\n\t\"./sk\": 6722,\n\t\"./sk.js\": 6722,\n\t\"./sl\": 3345,\n\t\"./sl.js\": 3345,\n\t\"./sq\": 2416,\n\t\"./sq.js\": 2416,\n\t\"./sr\": 9450,\n\t\"./sr-cyrl\": 501,\n\t\"./sr-cyrl.js\": 501,\n\t\"./sr.js\": 9450,\n\t\"./ss\": 2222,\n\t\"./ss.js\": 2222,\n\t\"./sv\": 9454,\n\t\"./sv.js\": 9454,\n\t\"./sw\": 9638,\n\t\"./sw.js\": 9638,\n\t\"./ta\": 6494,\n\t\"./ta.js\": 6494,\n\t\"./te\": 4435,\n\t\"./te.js\": 4435,\n\t\"./tet\": 5003,\n\t\"./tet.js\": 5003,\n\t\"./tg\": 3706,\n\t\"./tg.js\": 3706,\n\t\"./th\": 6025,\n\t\"./th.js\": 6025,\n\t\"./tk\": 9780,\n\t\"./tk.js\": 9780,\n\t\"./tl-ph\": 2068,\n\t\"./tl-ph.js\": 2068,\n\t\"./tlh\": 9167,\n\t\"./tlh.js\": 9167,\n\t\"./tr\": 2494,\n\t\"./tr.js\": 2494,\n\t\"./tzl\": 8707,\n\t\"./tzl.js\": 8707,\n\t\"./tzm\": 1296,\n\t\"./tzm-latn\": 4532,\n\t\"./tzm-latn.js\": 4532,\n\t\"./tzm.js\": 1296,\n\t\"./ug-cn\": 2086,\n\t\"./ug-cn.js\": 2086,\n\t\"./uk\": 5069,\n\t\"./uk.js\": 5069,\n\t\"./ur\": 9304,\n\t\"./ur.js\": 9304,\n\t\"./uz\": 5115,\n\t\"./uz-latn\": 7609,\n\t\"./uz-latn.js\": 7609,\n\t\"./uz.js\": 5115,\n\t\"./vi\": 4802,\n\t\"./vi.js\": 4802,\n\t\"./x-pseudo\": 5605,\n\t\"./x-pseudo.js\": 5605,\n\t\"./yo\": 8456,\n\t\"./yo.js\": 8456,\n\t\"./zh-cn\": 3272,\n\t\"./zh-cn.js\": 3272,\n\t\"./zh-hk\": 9402,\n\t\"./zh-hk.js\": 9402,\n\t\"./zh-mo\": 8101,\n\t\"./zh-mo.js\": 8101,\n\t\"./zh-tw\": 262,\n\t\"./zh-tw.js\": 262\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;"],"names":["RouterModule","ListarDatosComponent","RegisterComponent","LoginComponent","UserlistingComponent","authGuard","Home5Component","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","FormControl","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r3","fullName","ɵɵelement","ɵɵtemplate","AppComponent_mat_toolbar_0_a_6_Template","AppComponent_mat_toolbar_0_a_8_Template","AppComponent_mat_toolbar_0_p_12_Template","ɵɵnamespaceSVG","ɵɵlistener","AppComponent_mat_toolbar_0_Template__svg_svg_click_13_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","logOut","ɵɵproperty","ctx_r0","isAdminUser","ɵɵattribute","iniciales","mobile","AppComponent","constructor","builder","router","service","_httpService","matIconRegistry","domSanitizer","opened","title","isMenuRequired","listVariables","listDatos","exceedList","notExceedList2","addSvgIcon","bypassSecurityTrustResourceUrl","ngOnInit","valor","group","threshold","range","start","end","granularidad","subscription3","fullname","subscribe","message","setTimeout","console","log","splitFullName","subscription","listaVariables","subscription2","listaDatosInRange","window","screen","width","ngDoCheck","currentUrl","url","getUserRole","logout","output","split","length","charAt","toUpperCase","ɵɵdirectiveInject","FormBuilder","i2","Router","i3","AuthService","i4","HttpService","i5","MatIconRegistry","i6","DomSanitizer","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_mat_toolbar_0_Template","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","BrowserAnimationsModule","MaterialModule","ToastrModule","UpdatepopupComponent","PaisFormComponent","ProvinciaFormComponent","LocalidadFormComponent","EmpresaFormComponent","EmpresaPlantaFormComponent","MaquinaFormComponent","TipoMaquinaFormComponent","LineaProduccionFormComponent","ProcesoFormComponent","VariableFormComponent","JwtModule","TriggerFormComponent","TablaComponent","NgxSpinnerModule","MatTooltipModule","LoginModalComponent","DateAdapter","MatNativeDateModule","MAT_DATE_FORMATS","MAT_DATE_LOCALE","MomentDateAdapter","DepartamentosComponent","ToolbarComponent","tokenGetter","localStorage","getItem","MY_DATE_FORMAT","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","AppModule","bootstrap","provide","useClass","deps","useValue","config","allowedDomains","declarations","MatTabGroup","jwtHelper","breakpointObserver","isTrue","isPaisCompleted","isProvinciaCompleted","isLocalidadCompleted","isEmpresaCompleted","isPlantaCompleted","isTipoMaquinaCompleted","isLineaProduccionCompleted","isMaquinaCompleted","isProcesoCompleted","isTriggerCompleted","completed","tituloTabs","selected","expirationCheck","getUser","paisSelected","provinciaSelected","localidadSelected","empresaSelected","plantaSelected","lineaSelected","tipoMaquinaSelected","maquinaSelected","procesoSelected","triggerSelected","token","sessionStorage","toString","timeout","getTokenExpirationDate","valueOf","Date","expirationCounter","nextButton","setValue","value","backButton","JwtHelperService","BreakpointObserver","viewQuery","Home5Component_Query","Home5Component_Template_mat_tab_group_selectedIndexChange_13_listener","$event","Home5Component_Template_button_click_36_listener","Home5Component_Template_button_click_38_listener","ɵɵtextInterpolate1","Chart","registerables","catchError","MatMenuTrigger","ɵɵpropertyInterpolate","valor_r10","option","ListarDatosComponent_mat_button_toggle_36_Template_mat_button_toggle_click_0_listener","restoredCtx","_r13","time_r11","$implicit","ctx_r12","_r6","ɵɵreference","show","setTime","setInterval","timeOut_r14","chart_r15","ctx_r9","selectValue","selectTime","i_r16","titulo","ɵɵpropertyInterpolate1","register","defaults","font","family","size","weight","utils","authService","spinnerService","chartService","todayDate","sensor_1","sensor_2","pulsador","id","open","chartList","chartList2","i","tabla","isOpen","selectedValue","selectedInterval","binSize","unit","selectedTime","selectTimeOut","canvasBackgroundColor","beforeDatasetsDraw","chart","args","pluginOptions","chartArea","top","bottom","left","right","height","scales","x","y","bgColors","bracketLow","bracketHigh","color","fillStyle","fillRect","getPixelForValue","parseInt","_labelItems","label","decimation","enabled","algorithm","samples","getDataColors","opacity","colors","map","getVariables","interval","intervalo","medida","tiempo","type","data","labels","datasets","options","elements","line","tension","aspectRatio","maintainAspectRatio","animation","parsing","plugins","beginAtZero","ticks","grid","source","maxRotation","autoSkip","getRegistros","listaRegistroFiltrado2","detenerSpinner","sortedList","item","item2","find","_id","info","sort","objA","objB","Number","date","dato","parseFloat","max","valor_lectura","toFixed","fecha_lectura","getTime","update","min","rangeInfo","rangeSub","chartInfo","changeCurrentValues","index","datos","ngOnDestroy","clearInterval","inicio","final","llamarSpinner","getValoresFiltrados2","j","dsColor","namedColor","dataSet","nombre","borderColor","backgroundColor","transparentize","push","stream_Variables","generate","getCharts","streamCharts","getFiltrados","_d","stream_RegistroFiltrado2","setInicio_final","set_Inicio_Final","difference","toggleIsOpen","val","filter","e","undefined","avg","getValuesByInterval","currentDateObj","millis","getInterval","pipe","_ref","_asyncToGenerator","error","_x","apply","arguments","time","UtilsService","SpinnerService","i7","ChartGeneratorService","ListarDatosComponent_Query","ListarDatosComponent_Template_div_click_5_listener","stopPropagation","ListarDatosComponent_Template_input_dateChange_21_listener","ListarDatosComponent_Template_select_change_31_listener","_r17","_r3","ListarDatosComponent_option_33_Template","ListarDatosComponent_mat_button_toggle_36_Template","ListarDatosComponent_Template_button_click_39_listener","ListarDatosComponent_button_44_Template","ListarDatosComponent_div_49_Template","_r1","_r2","_r0","Validators","checkNumber","checkSpecial","checkUpperCase","LoginComponent_div_3_Template_form_ngSubmit_5_listener","_r4","proceedLogin","LoginComponent_div_3_Template_a_click_11_listener","ctx_r5","showPass","LoginComponent_div_3_Template_a_click_17_listener","ctx_r6","mostrarRegistro","ctx_r1","loginForm","pass","username","password","LoginComponent_div_4_Template_form_ngSubmit_5_listener","_r8","ctx_r7","proceedRegistration","registerForm","reset","LoginComponent_div_4_Template_a_click_15_listener","ɵɵnamespaceHTML","LoginComponent_div_4_Template_a_click_44_listener","ctx_r10","mostrarLogin","ctx_r2","errors","hasUpper","hasSp","hasNumber","name","email","toastr","showDiv","Login","Register","control","required","clear","minLength","role","isActive","LogIn","res","userData","status","success","toastClass","positionClass","storeUserData","rtoken","openDialog2","valid","Proceedregister","next","warning","get","ToastrService","LoginComponent_Template","LoginComponent_div_1_Template","LoginComponent_div_3_Template","LoginComponent_div_4_Template","registerform","compose","pattern","navigate","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_5_listener","MatPaginator","MatSort","MatTableDataSource","element_r10","element_r11","time_stamp","element_r12","cTime_stamp","element_r13","table","id_variable","notExceedList","csv","displayedColumns","dataSource","paginator","getInRangeTabla","removeDuplicates","ids","filtered","includes","downloadCSV","csvList","tiempo_inicio","tiempo_fin","diferencia","row","keysAmount","Object","keys","keysCounter","key","link","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","getAllInRange","n","notDuplicatedExceedList","notDuplicatedNotExceedList","stream_DatosInRange","result","notExceedListPusher","enviarDatos","formatTime","notExceed","exceed","seconds","hours","Math","floor","minutes","remainingSeconds","formattedHours","String","padStart","formattedMinutes","formattedSeconds","formatDate","getFullYear","padTo2Digits","getMonth","getDate","join","getHours","getMinutes","getSeconds","num","variableSelected","target","ExceedList","resultado","TablaComponent_Query","ɵɵelementContainerStart","TablaComponent_mat_header_cell_6_Template","TablaComponent_mat_cell_7_Template","ɵɵelementContainerEnd","TablaComponent_mat_header_cell_9_Template","TablaComponent_mat_cell_10_Template","TablaComponent_mat_header_cell_12_Template","TablaComponent_mat_cell_13_Template","TablaComponent_mat_header_cell_15_Template","TablaComponent_mat_cell_16_Template","TablaComponent_mat_header_row_17_Template","TablaComponent_mat_row_18_Template","ɵɵpureFunction0","_c0","valor_r9","ToolbarComponent_div_26_Template_select_change_2_listener","_r11","_r7","setSelectValue","indice","ToolbarComponent_div_26_option_4_Template","ToolbarComponent_div_27_Template_input_change_1_listener","setThreshold","variable_r16","ToolbarComponent_div_28_Template_select_change_1_listener","_r18","_r14","ctx_r17","ToolbarComponent_div_28_option_5_Template","ToolbarComponent_mat_button_toggle_31_Template_mat_button_toggle_click_0_listener","_r21","time_r19","ctx_r20","setSelectTimeInterval","selectTime2","listaDeCharts","sValue","streamChartIntervalInfo","sTime","sInterval","setInicioFinal","JSON","stringify","datosFilter","variable","inputs","ToolbarComponent_Template","ToolbarComponent_Template_div_click_2_listener","ToolbarComponent_Template_input_dateChange_18_listener","ToolbarComponent_div_26_Template","ToolbarComponent_div_27_Template","ToolbarComponent_div_28_Template","ToolbarComponent_mat_button_toggle_31_Template","MAT_DIALOG_DATA","item_r1","dialog","GetAllRoles","rolelist","GetById","editData","updateUser","UpdateUser","close","MatDialogRef","UpdatepopupComponent_Template","UpdatepopupComponent_Template_form_ngSubmit_5_listener","UpdatepopupComponent_mat_option_13_Template","element_r14","UserlistingComponent_mat_cell_23_Template_mat_select_valueChange_1_listener","element_r15","ɵɵstyleMap","editable","UserlistingComponent_mat_cell_26_Template_mat_select_valueChange_1_listener","_r20","element_r18","ulist","LoadUser","GetAll","userList","editableToggle","guardarCambios","dataToUpdate","UserlistingComponent_Query","UserlistingComponent_Template_a_click_5_listener","UserlistingComponent_mat_header_cell_13_Template","UserlistingComponent_mat_cell_14_Template","UserlistingComponent_mat_header_cell_16_Template","UserlistingComponent_mat_cell_17_Template","UserlistingComponent_mat_header_cell_19_Template","UserlistingComponent_mat_cell_20_Template","UserlistingComponent_mat_header_cell_22_Template","UserlistingComponent_mat_cell_23_Template","UserlistingComponent_mat_header_cell_25_Template","UserlistingComponent_mat_cell_26_Template","UserlistingComponent_mat_header_row_27_Template","UserlistingComponent_mat_row_28_Template","UserlistingComponent_Template_a_click_30_listener","_data","_value","MatButtonModule","MatDialogModule","MatFormFieldModule","MatInputModule","environment","DialogOverviewExampleDialog","dialogRef","rtoken_url","API_URL_RTOKEN","rBody","user","onNoClick","refreshToken","postForm","resData","accessToken","setItem","standalone","features","ɵɵStandaloneFeature","DialogOverviewExampleDialog_Template","DialogOverviewExampleDialog_Template_button_click_6_listener","DialogOverviewExampleDialog_Template_button_click_8_listener","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","MatButton","encapsulation","DepartamentosComponent_mat_option_5_Template_mat_option_click_0_listener","departamento_r1","setDepartamento","apiDepartamentos","API_URL_ARGENTINA_DEPARTAMENTOS","apiLocalidades","API_URL_ARGENTINA_LOCALIDADES","apiProvincias","API_URL_PROVINCIAS","apiEmpresas","API_URL_EMPRESAS","isOptional","departamentoForm","departamentoSelected","id_departamento","id_provincia","listDepartamentos","changeMessage","departamentoSelectedSource","GetLocalidadesByDepartamento","getForm","localidades","localidadesUnicas","streamLocalidades_DepartamentoSelected","seen","Set","filteredArr","el","duplicate","has","add","DepartamentosComponent_Template","DepartamentosComponent_mat_option_5_Template","EmpresaFormComponent_mat_option_10_Template_mat_option_click_0_listener","empresa_r1","setEmpresa","nombre_fantasia","apiLocalidad","API_URL_LOCALIDADES","apiPlantas","API_URL_PLANTA","empresaForm","razon_social","calle","altura","rubro","piso","deptartamento","id_localidad","listEmpresas","GetAllEmpresas","createEmpresa","borrarEmpresa","deleteForm","id_empresa","empresaSelectedSource","GetPlantasByEmpresas","streamPlantas_EmpresaSelected","EmpresaFormComponent_Template","EmpresaFormComponent_mat_option_10_Template","EmpresaFormComponent_Template_form_ngSubmit_17_listener","EmpresaFormComponent_Template_form_submit_17_listener","EmpresaPlantaFormComponent_mat_option_10_Template_mat_option_click_0_listener","planta_r1","setPlanta","apiPlanta","apiLinea","API_URL_LINEA_PRODUCCION","plantaForm","listPlantas","GetAllPlantas","createPlanta","borrarPlanta","id_planta","plantaSelectedSource","GetLineaByPlanta","streamLinea_PlantaSelected","EmpresaPlantaFormComponent_Template","EmpresaPlantaFormComponent_mat_option_10_Template","EmpresaPlantaFormComponent_Template_form_ngSubmit_17_listener","EmpresaPlantaFormComponent_Template_form_submit_17_listener","LineaProduccionFormComponent_mat_option_10_Template_mat_option_click_0_listener","linea_r1","setLinea","apiMaquina","API_URL_MAQUINA","lineaForm","descripcion","identificador","listLineas","id_empresa_planta","GetAllLineas","createLinea","borrarLineaProduccion","id_linea","lineaSelectedSource","GetMaquinaByLinea","streamMaquinas_LineaSelected","LineaProduccionFormComponent_Template","LineaProduccionFormComponent_mat_option_10_Template","LineaProduccionFormComponent_Template_form_ngSubmit_17_listener","LocalidadFormComponent_mat_option_5_Template_mat_option_click_0_listener","localidad_r1","setLocalidad","localidadForm","listLocalidades","GetAllLocalidades","createLocalidad","borrarLocalidad","localidadSelectedSource","GetEmpresasByLocalidad","streamEmpresas_LocalidadSelected","LocalidadFormComponent_Template","LocalidadFormComponent_mat_option_5_Template","MaquinaFormComponent_mat_option_10_Template_mat_option_click_0_listener","maquina_r1","setMaquina","StreamMaquinaSelected","apiTipoMaquina","API_URL_TIPO_MAQUINA","GetAllTipos","maquinaForm","marca","modelo","detalle","currentMessage","listMaquinas","id_linea_produccion","id_tipo_maquina","listTipoMaquina","GetAllMaquinas","createMaquina","borrarMaquina","maquina_id","streamMaquinaSelected","MaquinaFormComponent_Template","MaquinaFormComponent_mat_option_10_Template","MaquinaFormComponent_Template_form_ngSubmit_17_listener","MaquinaFormComponent_Template_form_submit_17_listener","PaisFormComponent_mat_option_5_Template_mat_option_click_0_listener","pais_r1","setPais","country","_formBuilder","_httpservice","apiPaises","API_URL_PAISES","apiArgentinaPronvincias","API_URL_ARGENTINA_PROVINCIAS","apiProvincia","GetAllPaises","paisForm","nombre_pais","httpGet","listPaises","paisSelectedSource","GetProvinciasByPais","provincias","streamProvincias_PaisSelected","httpPost","states","PaisFormComponent_Template","PaisFormComponent_Template_mat_select_selectionChange_4_listener","PaisFormComponent_mat_option_5_Template","ProcesoFormComponent_mat_option_10_Template_mat_option_click_0_listener","proceso_r1","setProceso","StreamProcesoSelected","apiProceso","API_URL_PROCESO","GetAllProcesos","procesoForm","listProceso","crearProceso","borrarProcesos","proceso_id","streamProcesoSelected","ProcesoFormComponent_Template","ProcesoFormComponent_mat_option_10_Template","ProcesoFormComponent_Template_form_ngSubmit_17_listener","ProvinciaFormComponent_mat_option_5_Template_mat_option_click_0_listener","provincia_r1","setProvincia","apiArgentinaDepartamentos","provinciaForm","listProvincias","listProvinciasPais","provinciaSelectedSource","GetDepartamentosByProvincia","departamentos","streamDepartamentos_ProvinciaSelected","state","ProvinciaFormComponent_Template","ProvinciaFormComponent_mat_option_5_Template","TipoMaquinaFormComponent_mat_option_10_Template_mat_option_click_0_listener","tipo_r1","setTipo","StreamTipoSelected","GetAllTiposMaquina","tipoMaquinaForm","createTipoMaquina","borrarTipoMaquina","tipo_id","streamTipoSelected","TipoMaquinaFormComponent_Template","TipoMaquinaFormComponent_mat_option_10_Template","TipoMaquinaFormComponent_Template_form_ngSubmit_17_listener","TipoMaquinaFormComponent_Template_form_submit_17_listener","TriggerFormComponent_div_10_Template_mat_option_click_1_listener","trigger_r1","setTrigger","StreamTriggerSelected","apiTrigger","API_URL_TRIGGER","GetAllTriggers","triggerForm","listTriggers","crearTrigger","borrarTrigger","trigger_descripcion","trigger_id","streamTriggerSelected","TriggerFormComponent_Template","TriggerFormComponent_div_10_Template","VariableModalComponent","VariableFormComponent_mat_list_11_Template_button_click_3_listener","variable_r1","openDialog","httpService","apiVariables","API_URL_VARIABLES","apiMaquinas","GetAllVariables","variableForm","trigger_valor","id_maquina","id_proceso","id_trigger","listProcesos","listMaquina","listTrigger","crearVariable","variable_id","MatDialog","VariableFormComponent_Template","VariableFormComponent_Template_mat_expansion_panel_click_7_listener","VariableFormComponent_mat_list_11_Template","VariableFormComponent_Template_form_ngSubmit_18_listener","borrarVariable","VariableModalComponent_Template","VariableModalComponent_Template_button_click_4_listener","VariableModalComponent_Template_button_click_6_listener","inject","route","IsLoggedIn","menu","cerrar","LoginModalComponent_Template","LoginModalComponent_Template_button_click_14_listener","Subscription","delay","BehaviorSubject","of","http","apiUrl","API_URL_USERS","apiRole","API_URL_ROLES","tokenSubscription","tokenSubscription2","messageSource","provinciasSource","departamentosSource","localidadesSource","empresasSource","plantasSource","lineaSource","maquinaSource","fullnameSource","tipoMaquinaSelectedSource","maquinaSelectedSource","procesoSelectedSource","triggerSelectedSource","asObservable","enterAnimationDuration","exitAnimationDuration","afterClosed","post","authToken","unsubscribe","expired","closeAll","pre_expirationCounter","timeNow","inputdata","headers","observe","_ref2","_x2","_this","Authorization","_ref3","_x3","formData","_ref4","_x4","delete","_ref5","_x5","empresas","plantas","linea","Maquinas","TipoMaquina","Maquina","proceso","trigger","ɵɵinject","HttpClient","factory","ɵfac","providedIn","Subject","chartListSource","chartRangeSource","chartIntervalInfoSource","idList","generatedChart","registroGeneral","API_URL_RGENERAL","registroGeneralts","API_URL_RGENERALTS","variables","listaVariablesSource","listaRegistroFiltradoSource","listaRegistroFiltrado2Source","listaDatosSource3","listaDatosInRangeSource","listChartInfoSource","listCharDatatInfoSource","listIntervalSource","rangeSource","listaRegistroFiltrado","listaDatos3","listChartInfo","listInterval","listChartDataInfo","inicio_str","final_str","getValores","getValoresFiltrados","fin","operacion","binsize","stream_RegistroFiltrado","datoGeneral","stream_Datos3","stream_Chart_Info","stream_ChartData_Info","chartDataInfo","stream_Interval","get_Inicio_Final","_spinnerService","spinner","hide","NgxSpinnerService","colorLib","CHART_COLORS","strong_blue","medium_blue","light_blue","red","orange","yellow","green","blue","purple","grey","NAMED_COLORS","alpha","rgbString","hasUpperCase","test","passwordValid","checkLowerCase","hasLowerCase","hasLower","hasNumeric","hasSpecial","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","MatSelectModule","MatCardModule","MatRadioModule","MatCheckboxModule","MatTableModule","MatPaginatorModule","MatSortModule","MatExpansionModule","MatStepperModule","MatIconModule","MatListModule","MatChipsModule","MatDatepickerModule","MatSidenavModule","MatProgressSpinnerModule","MatMenuModule","MatProgressBarModule","MatTabsModule","MatButtonToggleModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[60]}